{
  "$schema": "https://json.schemastore.org/claude-code-settings.json",
  "permissions": {
    "allow": [
      "Bash(for view in Azure AWS ActiveDirectory Exchange)",
      "Bash(do echo \"=== $view ===\")",
      "Bash(for view in ActiveDirectory Application AWS Exchange FileSystem Network SQLServer VMware)",
      "Bash(do npm test -- src/renderer/views/discovery/$view*DiscoveryView.test.tsx --no-coverage)",
      "Bash(for hook in useActiveDirectoryDiscoveryLogic useAzureDiscoveryLogic useExchangeDiscoveryLogic)",
      "Bash(do echo \"=== $hook ===\")",
      "Bash(for file in src/renderer/views/discovery/*DiscoveryView.test.tsx)",
      "Bash(for hook in useOneDriveDiscoveryLogic useHyperVDiscoveryLogic useSharePointDiscoveryLogic usePowerPlatformDiscoveryLogic useTeamsDiscoveryLogic useVMwareDiscoveryLogic)",
      "Bash(xargs -I {} bash -c 'echo \"\"\"\"{}:\"\"\"\" && npm test -- {} --no-coverage 2>&1 | grep \"\"\"\"Tests:\"\"\"\" || echo \"\"\"\"N/A\"\"\"\"')",
      "Bash(for file in useDataLossPreventionDiscoveryLogic.test.ts useOffice365DiscoveryLogic.test.ts usePowerPlatformDiscoveryLogic.test.ts)",
      "Bash(do sed -i 's/result\\.current\\.config(\\x27overview\\x27);/result.current.setActiveTab ? result.current.setActiveTab(\\x27overview\\x27) : null;/g' \"$file\")",
      "Bash(do npm test -- \"$file\" --no-coverage)",
      "Bash(do)",
      "Bash(if grep -q 'data-cy=\"\"export-btn\"\"' \"$file\")",
      "Bash(then)",
      "Bash(fi)",
      "Bash(for file in src/renderer/views/discovery/*DiscoveryView.test.tsx src/renderer/views/security/*View.test.tsx)",
      "Bash(if [ -f \"$file\" ])",
      "Bash(timeout 10 npm test:*)",
      "Bash(npm test:*)",
      "Bash(node -e:*)",
      "Bash(node fix-data-cy.js:*)",
      "Bash(node fix-view-names.js:*)",
      "Bash(npm run test:*)",
      "Bash(cat:*)",
      "Bash(npm run test:unit:*)",
      "Bash(npx jest:*)",
      "Bash(node analyze-errors.js:*)",
      "Bash(node find-export-btn-issues.js:*)",
      "Bash(node find-null-safety-issues.js:*)",
      "Bash(find:*)",
      "Bash(awk:*)",
      "Bash(npm run:*)",
      "Bash(node analyze-all-failures.js:*)",
      "Bash(node autonomous-test-fixer.js:*)",
      "Bash(node fix-syntax-errors.js:*)",
      "Bash(node bulk-fix-discovery-hooks.js:*)",
      "Bash(node:*)",
      "Bash(npx tsc:*)",
      "Bash(/dev/null)",
      "Bash(test:*)",
      "Bash(timeout 300 npm test -- --json --outputFile=baseline-session-start.json)",
      "Bash(timeout 300 npm run test:unit:*)",
      "Bash(if [ -f data-cy-fix-list.json ])",
      "Bash(then head -100 data-cy-fix-list.json)",
      "Bash(else echo \"File not found\")",
      "Bash(git checkout:*)",
      "Bash(for file in NetworkDiscoveryView.test.tsx SQLServerDiscoveryView.test.tsx VMwareDiscoveryView.test.tsx)",
      "Bash(\"$file\")",
      "Bash(echo:*)",
      "Bash(done)",
      "Bash(timeout 300 npm test -- --no-coverage --silent)",
      "Bash(npm install:*)",
      "Bash(npm ci:*)",
      "Bash(tee:*)",
      "Bash(npm --version)",
      "Bash(npx electron-forge:*)",
      "Bash(timeout 10 npm start:*)"
    ],
    "deny": [],
    "ask": [],
    "defaultMode": "acceptEdits",
    "additionalDirectories": [
      "C:\\enterprisediscovery",
      "D:\\d\\Scripts\\UserMandA-1",
      "C:\\discoverydata\\ljpops\\Raw",
      "C:\\discoverydata\\ljpops\\Logs",
      "D:\\d D:\\Scripts\\UserMandA",
      "C:\\EnterpriseDiscovery",
      "D:\\d\\Scripts",
      "D:\\c\\enterprisediscovery",
      "D:\\c\\discoverydata\\ljpops",
      "C:\\",
      "D:\\c\\DiscoveryData\\ljpops\\Logs",
      "D:\\",
      "D:\\d\\Scripts\\UserMandA\\GUI",
      "D:\\c\\EnterpriseDiscovery",
      "D:\\c"
    ]
  }
}
