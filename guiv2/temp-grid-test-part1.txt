/**
 * Virtualized Data Grid Component Tests
 *
 * Tests the core data grid component used across all discovery views
 * including:
 * - Rendering with data
 * - Column configuration
 * - Sorting and filtering
 * - Selection handling
 * - Export functionality
 * - Performance with large datasets
 * - Keyboard navigation
 * - Accessibility
 */

import React from 'react';
import { render, screen, fireEvent, waitFor } from '@testing-library/react';
import userEvent from '@testing-library/user-event';
import { ColDef } from 'ag-grid-community';
import { VirtualizedDataGrid } from './VirtualizedDataGrid';

// Mock AG Grid
jest.mock('ag-grid-react', () => ({
  AgGridReact: ({ rowData, columnDefs, onRowClicked, onSelectionChanged, loading }: any) => (
    <div data-cy="ag-grid-mock">
      {loading && <div data-cy="grid-loading">Loading...</div>}
      <table>
        <thead>
          <tr>
            {columnDefs.map((col: ColDef, idx: number) => (
              <th key={idx}>{col.headerName}</th>
            ))}
          </tr>
        </thead>
        <tbody>
          {rowData?.map((row: any, rowIdx: number) => (
            <tr
              key={rowIdx}
              onClick={() => onRowClicked?.({ data: row })}
              data-cy={`grid-row-${rowIdx}`}
            >
              {columnDefs.map((col: ColDef, colIdx: number) => (
                <td key={colIdx}>{row[col.field!]}</td>
              ))}
            </tr>
          ))}
        </tbody>
      </table>
      <button
        onClick={() => {
          const selectedRows = rowData?.slice(0, 2);
          onSelectionChanged?.({ api: { getSelectedRows: () => selectedRows } });
        }}
        data-cy="mock-select-rows"
      >
        Select Rows
      </button>
    </div>
  ),
}));

