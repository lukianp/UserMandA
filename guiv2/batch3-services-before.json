{"numFailedTestSuites":3,"numFailedTests":22,"numPassedTestSuites":16,"numPassedTests":523,"numPendingTestSuites":0,"numPendingTests":2,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":19,"numTotalTests":547,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1761338877388,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["WebhookService","Singleton Pattern"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Singleton Pattern should return the same instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338878285,"status":"passed","title":"should return the same instance"},{"ancestorTitles":["WebhookService","Webhook Registration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Registration should register a webhook","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338878289,"status":"passed","title":"should register a webhook"},{"ancestorTitles":["WebhookService","Webhook Registration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Registration should unregister a webhook","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338878290,"status":"passed","title":"should unregister a webhook"},{"ancestorTitles":["WebhookService","Webhook Registration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Registration should get all webhooks","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338878292,"status":"passed","title":"should get all webhooks"},{"ancestorTitles":["WebhookService","Webhook Updates"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Updates should update webhook configuration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338878296,"status":"passed","title":"should update webhook configuration"},{"ancestorTitles":["WebhookService","Webhook Updates"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Updates should enable webhook","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338878297,"status":"passed","title":"should enable webhook"},{"ancestorTitles":["WebhookService","Webhook Updates"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Updates should disable webhook","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338878298,"status":"passed","title":"should disable webhook"},{"ancestorTitles":["WebhookService","Webhook Triggering"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Triggering should trigger webhook for matching event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338878300,"status":"passed","title":"should trigger webhook for matching event"},{"ancestorTitles":["WebhookService","Webhook Triggering"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Triggering should not trigger disabled webhook","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338878303,"status":"passed","title":"should not trigger disabled webhook"},{"ancestorTitles":["WebhookService","Webhook Triggering"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Triggering should not trigger for non-matching event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338878305,"status":"passed","title":"should not trigger for non-matching event"},{"ancestorTitles":["WebhookService","Webhook Triggering"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Triggering should trigger wildcard webhook","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338878307,"status":"passed","title":"should trigger wildcard webhook"},{"ancestorTitles":["WebhookService","Webhook Delivery"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Delivery should record successful delivery","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338878316,"status":"passed","title":"should record successful delivery"},{"ancestorTitles":["WebhookService","Webhook Delivery"],"duration":15012,"failing":false,"failureDetails":[{"message":"thrown: \"Exceeded timeout of 15000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\""}],"failureMessages":["Error: thrown: \"Exceeded timeout of 15000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at it (D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts:233:5)\n    at _dispatchDescribe (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:604:26)\n    at describe (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:572:44)\n    at describe (D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts:205:3)\n    at _dispatchDescribe (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:604:26)\n    at describe (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:572:44)\n    at Object.describe (D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts:21:1)\n    at Runtime._execModule (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runtime\\build\\index.js:1268:24)\n    at Runtime._loadModule (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runtime\\build\\index.js:944:12)\n    at Runtime.requireModule (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runtime\\build\\index.js:832:12)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:95:13)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"WebhookService Webhook Delivery should record failed delivery","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338878318,"status":"failed","title":"should record failed delivery"},{"ancestorTitles":["WebhookService","Webhook Delivery"],"duration":53,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Delivery should retry on failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338893339,"status":"passed","title":"should retry on failure"},{"ancestorTitles":["WebhookService","Webhook Testing"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Testing should send test webhook","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338893393,"status":"passed","title":"should send test webhook"},{"ancestorTitles":["WebhookService","Webhook Testing"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Testing should throw error for non-existent webhook","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338893396,"status":"passed","title":"should throw error for non-existent webhook"},{"ancestorTitles":["WebhookService","Webhook Signatures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Signatures should include signature header","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338893404,"status":"passed","title":"should include signature header"},{"ancestorTitles":["WebhookService","Webhook Signatures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Signatures should verify signature","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338893405,"status":"passed","title":"should verify signature"},{"ancestorTitles":["WebhookService","Webhook Signatures"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Signatures should reject invalid signature","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338893406,"status":"passed","title":"should reject invalid signature"},{"ancestorTitles":["WebhookService","Webhook Statistics"],"duration":15010,"failing":false,"failureDetails":[{"message":"thrown: \"Exceeded timeout of 15000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\""}],"failureMessages":["Error: thrown: \"Exceeded timeout of 15000 ms for a test.\nAdd a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n    at it (D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts:383:5)\n    at _dispatchDescribe (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:604:26)\n    at describe (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:572:44)\n    at describe (D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts:372:3)\n    at _dispatchDescribe (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:604:26)\n    at describe (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:572:44)\n    at Object.describe (D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts:21:1)\n    at Runtime._execModule (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runtime\\build\\index.js:1268:24)\n    at Runtime._loadModule (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runtime\\build\\index.js:944:12)\n    at Runtime.requireModule (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runtime\\build\\index.js:832:12)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:95:13)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"WebhookService Webhook Statistics should calculate statistics","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338893408,"status":"failed","title":"should calculate statistics"},{"ancestorTitles":["WebhookService","Import/Export"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Import/Export should export webhooks as JSON","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338908419,"status":"passed","title":"should export webhooks as JSON"},{"ancestorTitles":["WebhookService","Import/Export"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Import/Export should import webhooks from JSON","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338908422,"status":"passed","title":"should import webhooks from JSON"},{"ancestorTitles":["WebhookService","Rate Limiting"],"duration":11,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\nExpected number of calls: 2\nReceived number of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\nExpected number of calls: 2\nReceived number of calls: 0\n    at Object.toHaveBeenCalledTimes (D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts:499:28)"],"fullName":"WebhookService Rate Limiting should enforce rate limit","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338908424,"status":"failed","title":"should enforce rate limit"},{"ancestorTitles":["WebhookService","Rate Limiting"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Rate Limiting should get rate limit","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338908436,"status":"passed","title":"should get rate limit"},{"ancestorTitles":["WebhookService","Delivery History"],"duration":11,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts:529:49)"],"fullName":"WebhookService Delivery History should clear delivery history","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338908437,"status":"failed","title":"should clear delivery history"}],"endTime":1761338908470,"message":"  ● WebhookService › Webhook Delivery › should record failed delivery\n\n    thrown: \"Exceeded timeout of 15000 ms for a test.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\n    \u001b[0m \u001b[90m 231 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 232 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 233 |\u001b[39m     it(\u001b[32m'should record failed delivery'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m     |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 234 |\u001b[39m       (global\u001b[33m.\u001b[39mfetch \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMock\u001b[39m)\u001b[33m.\u001b[39mmockResolvedValue({\n     \u001b[90m 235 |\u001b[39m         ok\u001b[33m:\u001b[39m \u001b[36mfalse\u001b[39m\u001b[33m,\u001b[39m\n     \u001b[90m 236 |\u001b[39m         status\u001b[33m:\u001b[39m \u001b[35m500\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at it (src/renderer/services/webhookService.test.ts:233:5)\n      at describe (src/renderer/services/webhookService.test.ts:205:3)\n      at Object.describe (src/renderer/services/webhookService.test.ts:21:1)\n\n  ● WebhookService › Webhook Statistics › should calculate statistics\n\n    thrown: \"Exceeded timeout of 15000 ms for a test.\n    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout.\"\n\n    \u001b[0m \u001b[90m 381 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 382 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 383 |\u001b[39m     it(\u001b[32m'should calculate statistics'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m     |\u001b[39m     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 384 |\u001b[39m       \u001b[90m// Successful delivery\u001b[39m\n     \u001b[90m 385 |\u001b[39m       (global\u001b[33m.\u001b[39mfetch \u001b[36mas\u001b[39m jest\u001b[33m.\u001b[39m\u001b[33mMock\u001b[39m)\u001b[33m.\u001b[39mmockResolvedValueOnce({\n     \u001b[90m 386 |\u001b[39m         ok\u001b[33m:\u001b[39m \u001b[36mtrue\u001b[39m\u001b[33m,\u001b[39m\u001b[0m\n\n      at it (src/renderer/services/webhookService.test.ts:383:5)\n      at describe (src/renderer/services/webhookService.test.ts:372:3)\n      at Object.describe (src/renderer/services/webhookService.test.ts:21:1)\n\n  ● WebhookService › Rate Limiting › should enforce rate limit\n\n    expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\n    Expected number of calls: 2\n    Received number of calls: 0\n\n    \u001b[0m \u001b[90m 497 |\u001b[39m\n     \u001b[90m 498 |\u001b[39m       \u001b[90m// Only 2 requests should have been made due to rate limit\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 499 |\u001b[39m       expect(global\u001b[33m.\u001b[39mfetch)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 500 |\u001b[39m     }\u001b[33m,\u001b[39m \u001b[35m15000\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 501 |\u001b[39m\n     \u001b[90m 502 |\u001b[39m     it(\u001b[32m'should get rate limit'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toHaveBeenCalledTimes (src/renderer/services/webhookService.test.ts:499:28)\n\n  ● WebhookService › Delivery History › should clear delivery history\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 527 |\u001b[39m\n     \u001b[90m 528 |\u001b[39m       \u001b[90m// Verify deliveries exist\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 529 |\u001b[39m       expect(service\u001b[33m.\u001b[39mgetAllDeliveries()\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 530 |\u001b[39m\n     \u001b[90m 531 |\u001b[39m       \u001b[90m// Clear and verify\u001b[39m\n     \u001b[90m 532 |\u001b[39m       service\u001b[33m.\u001b[39mclearDeliveries()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/renderer/services/webhookService.test.ts:529:49)\n","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts","startTime":1761338877845,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["Migration Services Integration","Planning → Execution Workflow"],"duration":2240,"failing":false,"failureDetails":[{"matcherResult":{"expected":2,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:208:38)"],"fullName":"Migration Services Integration Planning → Execution Workflow should execute a complete migration workflow from planning to completion","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338908555,"status":"failed","title":"should execute a complete migration workflow from planning to completion"},{"ancestorTitles":["Migration Services Integration","Planning → Execution Workflow"],"duration":758,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Migration Services Integration Planning → Execution Workflow should handle multi-wave migration with dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338910800,"status":"passed","title":"should handle multi-wave migration with dependencies"},{"ancestorTitles":["Migration Services Integration","Execution → Rollback Workflow"],"duration":2236,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Migration Services Integration Execution → Rollback Workflow should rollback a migration when execution fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338911558,"status":"passed","title":"should rollback a migration when execution fails"},{"ancestorTitles":["Migration Services Integration","Execution → Rollback Workflow"],"duration":222,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Migration Services Integration Execution → Rollback Workflow should support partial rollback of specific users","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338913794,"status":"passed","title":"should support partial rollback of specific users"},{"ancestorTitles":["Migration Services Integration","Migration → Delta Sync Workflow"],"duration":2227,"failing":false,"failureDetails":[{"matcherResult":{"expected":"completed","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: undefined\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:381:33)"],"fullName":"Migration Services Integration Migration → Delta Sync Workflow should schedule delta sync after successful migration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338914016,"status":"failed","title":"should schedule delta sync after successful migration"},{"ancestorTitles":["Migration Services Integration","Migration → Delta Sync Workflow"],"duration":1729,"failing":false,"failureDetails":[{"matcherResult":{"expected":"completed","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: undefined\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:426:29)"],"fullName":"Migration Services Integration Migration → Delta Sync Workflow should handle conflicts during delta sync","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338916243,"status":"failed","title":"should handle conflicts during delta sync"},{"ancestorTitles":["Migration Services Integration","Coexistence → Cutover Workflow"],"duration":1228,"failing":false,"failureDetails":[{"matcherResult":{"actual":"failed","expected":"completed","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: \"failed\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: \"failed\"\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:493:35)"],"fullName":"Migration Services Integration Coexistence → Cutover Workflow should establish coexistence then perform cutover","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338917973,"status":"failed","title":"should establish coexistence then perform cutover"},{"ancestorTitles":["Migration Services Integration","End-to-End Complete Migration"],"duration":2225,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:570:29)"],"fullName":"Migration Services Integration End-to-End Complete Migration should execute a complete migration lifecycle","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338919202,"status":"failed","title":"should execute a complete migration lifecycle"}],"endTime":1761338921449,"message":"  ● Migration Services Integration › Planning → Execution Workflow › should execute a complete migration workflow from planning to completion\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: undefined\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m\n     \u001b[90m 207 |\u001b[39m       \u001b[36mconst\u001b[39m status \u001b[33m=\u001b[39m executionService\u001b[33m.\u001b[39mgetExecutionStatus(wave1\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m       expect(status\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mcompletedUsers)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m\n     \u001b[90m 210 |\u001b[39m       \u001b[90m// Step 5: Verify orchestration service tracks completion\u001b[39m\n     \u001b[90m 211 |\u001b[39m       \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m orchestrationService\u001b[33m.\u001b[39mgetStatistics(\u001b[32m'integration-test-1'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/migrationServiceIntegration.test.ts:208:38)\n\n  ● Migration Services Integration › Migration → Delta Sync Workflow › should schedule delta sync after successful migration\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"completed\"\n    Received: undefined\n\n    \u001b[0m \u001b[90m 379 |\u001b[39m\n     \u001b[90m 380 |\u001b[39m       expect(syncResult)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 381 |\u001b[39m       expect(syncResult\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'completed'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 382 |\u001b[39m\n     \u001b[90m 383 |\u001b[39m       \u001b[90m// Verify sync history\u001b[39m\n     \u001b[90m 384 |\u001b[39m       \u001b[36mconst\u001b[39m history \u001b[33m=\u001b[39m deltaSyncService\u001b[33m.\u001b[39mgetSyncHistory(waveId)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/migrationServiceIntegration.test.ts:381:33)\n\n  ● Migration Services Integration › Migration → Delta Sync Workflow › should handle conflicts during delta sync\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"completed\"\n    Received: undefined\n\n    \u001b[0m \u001b[90m 424 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 425 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 426 |\u001b[39m       expect(result\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'completed'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 427 |\u001b[39m       expect(result\u001b[33m.\u001b[39mconflictsDetected)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 428 |\u001b[39m     }\u001b[33m,\u001b[39m \u001b[35m60000\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 429 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/migrationServiceIntegration.test.ts:426:29)\n\n  ● Migration Services Integration › Coexistence → Cutover Workflow › should establish coexistence then perform cutover\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"completed\"\n    Received: \"failed\"\n\n    \u001b[0m \u001b[90m 491 |\u001b[39m\n     \u001b[90m 492 |\u001b[39m       \u001b[36mconst\u001b[39m updatedPlan \u001b[33m=\u001b[39m cutoverService\u001b[33m.\u001b[39mgetCutoverPlan(cutoverPlan\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 493 |\u001b[39m       expect(updatedPlan\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'completed'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 494 |\u001b[39m\n     \u001b[90m 495 |\u001b[39m       \u001b[90m// Step 5: Verify coexistence is disabled after cutover\u001b[39m\n     \u001b[90m 496 |\u001b[39m       \u001b[36mconst\u001b[39m configAfterCutover \u001b[33m=\u001b[39m coexistenceService\u001b[33m.\u001b[39mgetConfiguration(coexistenceConfig\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/migrationServiceIntegration.test.ts:493:35)\n\n  ● Migration Services Integration › End-to-End Complete Migration › should execute a complete migration lifecycle\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 568 |\u001b[39m\n     \u001b[90m 569 |\u001b[39m       \u001b[90m// Verify all events were triggered\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 570 |\u001b[39m       expect(events\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 571 |\u001b[39m\n     \u001b[90m 572 |\u001b[39m       \u001b[90m// Verify final state\u001b[39m\n     \u001b[90m 573 |\u001b[39m       \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m orchestrationService\u001b[33m.\u001b[39mgetStatistics(\u001b[32m'e2e-test'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/migrationServiceIntegration.test.ts:570:29)\n","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts","startTime":1761338908485,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":60,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:52:28)"],"fullName":"LogicEngineService CSV Loading should load users from CSV","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921579,"status":"failed","title":"should load users from CSV"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":6,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:62:29)"],"fullName":"LogicEngineService CSV Loading should load groups from CSV","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921644,"status":"failed","title":"should load groups from CSV"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:71:30)"],"fullName":"LogicEngineService CSV Loading should load computers from CSV","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921650,"status":"failed","title":"should load computers from CSV"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:82:31)"],"fullName":"LogicEngineService CSV Loading should load all 14 entity types","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921654,"status":"failed","title":"should load all 14 entity types"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService CSV Loading should emit progress events during load","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921658,"status":"passed","title":"should emit progress events during load"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:105:23)"],"fullName":"LogicEngineService CSV Loading should handle missing CSV files gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921662,"status":"failed","title":"should handle missing CSV files gracefully"},{"ancestorTitles":["LogicEngineService","Inference Rules"],"duration":6,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeDefined()\n\nReceived: undefined","pass":false}}],"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.toBeDefined (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:124:20)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Inference Rules should apply ACL Group-User inference","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921668,"status":"failed","title":"should apply ACL Group-User inference"},{"ancestorTitles":["LogicEngineService","Inference Rules"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Inference Rules should identify primary device","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921675,"status":"passed","title":"should identify primary device"},{"ancestorTitles":["LogicEngineService","Inference Rules"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Inference Rules should match mailboxes to users by fuzzy matching","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921678,"status":"passed","title":"should match mailboxes to users by fuzzy matching"},{"ancestorTitles":["LogicEngineService","Inference Rules"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Inference Rules should correlate OneDrive usage to users","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921682,"status":"passed","title":"should correlate OneDrive usage to users"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.calculateLevenshteinDistance is not a function\n    at Object.calculateLevenshteinDistance (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:181:41)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Fuzzy Matching should calculate Levenshtein distance correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921685,"status":"failed","title":"should calculate Levenshtein distance correctly"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.calculateSimilarity is not a function\n    at Object.calculateSimilarity (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:188:43)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Fuzzy Matching should match similar names with >80% similarity","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921686,"status":"failed","title":"should match similar names with >80% similarity"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":0,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.calculateSimilarity is not a function\n    at Object.calculateSimilarity (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:194:43)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Fuzzy Matching should match exact names with 100% similarity","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921687,"status":"failed","title":"should match exact names with 100% similarity"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.calculateSimilarity is not a function\n    at Object.calculateSimilarity (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:200:43)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Fuzzy Matching should match different names with low similarity","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921687,"status":"failed","title":"should match different names with low similarity"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":4,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.getUserByFuzzyMatch is not a function\n    at Object.getUserByFuzzyMatch (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:209:37)"],"fullName":"LogicEngineService Fuzzy Matching should fuzzy match mailbox to user","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921688,"status":"failed","title":"should fuzzy match mailbox to user"},{"ancestorTitles":["LogicEngineService","UserDetailProjection"],"duration":7,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeDefined()\n\nReceived: undefined","pass":false}}],"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.toBeDefined (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:231:32)"],"fullName":"LogicEngineService UserDetailProjection should build complete projection with all fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921692,"status":"failed","title":"should build complete projection with all fields"},{"ancestorTitles":["LogicEngineService","UserDetailProjection"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService UserDetailProjection should return null for non-existent user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921700,"status":"passed","title":"should return null for non-existent user"},{"ancestorTitles":["LogicEngineService","UserDetailProjection"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService UserDetailProjection should include correlated data in projection","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921704,"status":"passed","title":"should include correlated data in projection"},{"ancestorTitles":["LogicEngineService","Performance"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Performance should load data in reasonable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921708,"status":"passed","title":"should load data in reasonable time"},{"ancestorTitles":["LogicEngineService","Performance"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Performance should build projection quickly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921713,"status":"passed","title":"should build projection quickly"},{"ancestorTitles":["LogicEngineService","Performance"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Performance should handle multiple concurrent projection requests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921717,"status":"passed","title":"should handle multiple concurrent projection requests"},{"ancestorTitles":["LogicEngineService","Error Handling"],"duration":23,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Error Handling should handle malformed CSV data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921725,"status":"passed","title":"should handle malformed CSV data"},{"ancestorTitles":["LogicEngineService","Error Handling"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Error Handling should handle empty CSV files","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921748,"status":"passed","title":"should handle empty CSV files"},{"ancestorTitles":["LogicEngineService","Error Handling"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Error Handling should emit error events for load failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921754,"status":"passed","title":"should emit error events for load failures"},{"ancestorTitles":["LogicEngineService","Statistics"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"actual":{},"expected":{},"message":"expect(received).not.toEqual(expected) // deep equality\n\nExpected: not 2025-10-24T20:48:41.747Z\n","name":"toEqual","pass":true}}],"failureMessages":["Error: expect(received).not.toEqual(expected) // deep equality\n\nExpected: not 2025-10-24T20:48:41.747Z\n\n    at Object.toEqual (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:361:29)"],"fullName":"LogicEngineService Statistics should track last load time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338921757,"status":"failed","title":"should track last load time"},{"ancestorTitles":["LogicEngineService","Statistics"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Statistics should track loading state","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338921762,"status":"passed","title":"should track loading state"}],"endTime":1761338921795,"message":"  ● LogicEngineService › CSV Loading › should load users from CSV\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 50 |\u001b[39m       \u001b[36mconst\u001b[39m usersBySid \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39musersBySid\u001b[33m;\u001b[39m\n     \u001b[90m 51 |\u001b[39m       \u001b[36mconst\u001b[39m users \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(usersBySid\u001b[33m.\u001b[39mvalues())\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       expect(users\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 53 |\u001b[39m       expect(users[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'Sid'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m       expect(users[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'DisplayName'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 55 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/logicEngineService.test.ts:52:28)\n\n  ● LogicEngineService › CSV Loading › should load groups from CSV\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 60 |\u001b[39m       \u001b[36mconst\u001b[39m groupsBySid \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mgroupsBySid\u001b[33m;\u001b[39m\n     \u001b[90m 61 |\u001b[39m       \u001b[36mconst\u001b[39m groups \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(groupsBySid\u001b[33m.\u001b[39mvalues())\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 62 |\u001b[39m       expect(groups\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 63 |\u001b[39m       expect(groups[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'Sid'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 64 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 65 |\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/logicEngineService.test.ts:62:29)\n\n  ● LogicEngineService › CSV Loading › should load computers from CSV\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 69 |\u001b[39m       \u001b[36mconst\u001b[39m devicesByName \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mdevicesByName\u001b[33m;\u001b[39m\n     \u001b[90m 70 |\u001b[39m       \u001b[36mconst\u001b[39m devices \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(devicesByName\u001b[33m.\u001b[39mvalues())\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 71 |\u001b[39m       expect(devices\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 72 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 73 |\u001b[39m\n     \u001b[90m 74 |\u001b[39m     it(\u001b[32m'should load all 14 entity types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/logicEngineService.test.ts:71:30)\n\n  ● LogicEngineService › CSV Loading › should load all 14 entity types\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 80 |\u001b[39m       \u001b[36mconst\u001b[39m devicesByName \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mdevicesByName\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 82 |\u001b[39m       expect(usersBySid\u001b[33m.\u001b[39msize)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 83 |\u001b[39m       expect(groupsBySid\u001b[33m.\u001b[39msize)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 84 |\u001b[39m       expect(devicesByName\u001b[33m.\u001b[39msize)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 85 |\u001b[39m       \u001b[90m// Add checks for other 11 entity types\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/logicEngineService.test.ts:82:31)\n\n  ● LogicEngineService › CSV Loading › should handle missing CSV files gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n    \u001b[0m \u001b[90m 103 |\u001b[39m\n     \u001b[90m 104 |\u001b[39m       \u001b[90m// Should not throw, but return false\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 105 |\u001b[39m       expect(success)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 106 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 107 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 108 |\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/logicEngineService.test.ts:105:23)\n\n  ● LogicEngineService › Inference Rules › should apply ACL Group-User inference\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 122 |\u001b[39m\n     \u001b[90m 123 |\u001b[39m       \u001b[90m// User should exist in test data\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 124 |\u001b[39m       expect(user)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 125 |\u001b[39m       \u001b[90m// Add specific assertions based on test data\u001b[39m\n     \u001b[90m 126 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 127 |\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (src/main/services/logicEngineService.test.ts:124:20)\n\n  ● LogicEngineService › Fuzzy Matching › should calculate Levenshtein distance correctly\n\n    TypeError: service.calculateLevenshteinDistance is not a function\n\n    \u001b[0m \u001b[90m 179 |\u001b[39m     it(\u001b[32m'should calculate Levenshtein distance correctly'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 180 |\u001b[39m       \u001b[90m// Access private method for testing (or make it public/protected)\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 181 |\u001b[39m       \u001b[36mconst\u001b[39m distance \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mcalculateLevenshteinDistance(\u001b[32m'John Smith'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Jon Smyth'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 182 |\u001b[39m\n     \u001b[90m 183 |\u001b[39m       expect(distance)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 184 |\u001b[39m       expect(distance)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.calculateLevenshteinDistance (src/main/services/logicEngineService.test.ts:181:41)\n\n  ● LogicEngineService › Fuzzy Matching › should match similar names with >80% similarity\n\n    TypeError: service.calculateSimilarity is not a function\n\n    \u001b[0m \u001b[90m 186 |\u001b[39m\n     \u001b[90m 187 |\u001b[39m     it(\u001b[32m'should match similar names with >80% similarity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 188 |\u001b[39m       \u001b[36mconst\u001b[39m similarity \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mcalculateSimilarity(\u001b[32m'John Smith'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Jon Smith'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 189 |\u001b[39m\n     \u001b[90m 190 |\u001b[39m       expect(similarity)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.8\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 191 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.calculateSimilarity (src/main/services/logicEngineService.test.ts:188:43)\n\n  ● LogicEngineService › Fuzzy Matching › should match exact names with 100% similarity\n\n    TypeError: service.calculateSimilarity is not a function\n\n    \u001b[0m \u001b[90m 192 |\u001b[39m\n     \u001b[90m 193 |\u001b[39m     it(\u001b[32m'should match exact names with 100% similarity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 194 |\u001b[39m       \u001b[36mconst\u001b[39m similarity \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mcalculateSimilarity(\u001b[32m'John Smith'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'John Smith'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 195 |\u001b[39m\n     \u001b[90m 196 |\u001b[39m       expect(similarity)\u001b[33m.\u001b[39mtoBe(\u001b[35m1.0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 197 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.calculateSimilarity (src/main/services/logicEngineService.test.ts:194:43)\n\n  ● LogicEngineService › Fuzzy Matching › should match different names with low similarity\n\n    TypeError: service.calculateSimilarity is not a function\n\n    \u001b[0m \u001b[90m 198 |\u001b[39m\n     \u001b[90m 199 |\u001b[39m     it(\u001b[32m'should match different names with low similarity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 200 |\u001b[39m       \u001b[36mconst\u001b[39m similarity \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mcalculateSimilarity(\u001b[32m'John Smith'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Jane Doe'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 201 |\u001b[39m\n     \u001b[90m 202 |\u001b[39m       expect(similarity)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m0.5\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 203 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.calculateSimilarity (src/main/services/logicEngineService.test.ts:200:43)\n\n  ● LogicEngineService › Fuzzy Matching › should fuzzy match mailbox to user\n\n    TypeError: service.getUserByFuzzyMatch is not a function\n\n    \u001b[0m \u001b[90m 207 |\u001b[39m\n     \u001b[90m 208 |\u001b[39m       \u001b[90m// Try to find user by email-like identifier\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 209 |\u001b[39m       \u001b[36mconst\u001b[39m user \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mgetUserByFuzzyMatch(\u001b[32m'john.smith@company.com'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 210 |\u001b[39m\n     \u001b[90m 211 |\u001b[39m       \u001b[90m// May or may not find a match depending on test data\u001b[39m\n     \u001b[90m 212 |\u001b[39m       \u001b[36mif\u001b[39m (user) {\u001b[0m\n\n      at Object.getUserByFuzzyMatch (src/main/services/logicEngineService.test.ts:209:37)\n\n  ● LogicEngineService › UserDetailProjection › should build complete projection with all fields\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 229 |\u001b[39m\n     \u001b[90m 230 |\u001b[39m       expect(projection)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 231 |\u001b[39m       expect(projection\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUser\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 232 |\u001b[39m       expect(projection\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m\u001b[33mGroups\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 233 |\u001b[39m       expect(projection\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m\u001b[33mDevices\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 234 |\u001b[39m       expect(projection\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m\u001b[33mApps\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (src/main/services/logicEngineService.test.ts:231:32)\n\n  ● LogicEngineService › Statistics › should track last load time\n\n    expect(received).not.toEqual(expected) // deep equality\n\n    Expected: not 2025-10-24T20:48:41.747Z\n\n    \u001b[0m \u001b[90m 359 |\u001b[39m       \u001b[36mconst\u001b[39m afterLoad \u001b[33m=\u001b[39m service\u001b[33m.\u001b[39mgetLastLoadTime()\u001b[33m;\u001b[39m\n     \u001b[90m 360 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 361 |\u001b[39m       expect(afterLoad)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoEqual(beforeLoad)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 362 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 363 |\u001b[39m\n     \u001b[90m 364 |\u001b[39m     it(\u001b[32m'should track loading state'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toEqual (src/main/services/logicEngineService.test.ts:361:29)\n","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts","startTime":1761338921466,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationExecutionService","Initialization"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921870,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["MigrationExecutionService","Initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Initialization should initialize with provided configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338921873,"status":"passed","title":"should initialize with provided configuration"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should execute wave in sequential mode","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761338921875,"status":"passed","title":"should execute wave in sequential mode"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should execute wave in parallel mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921881,"status":"passed","title":"should execute wave in parallel mode"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should execute wave in batch mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921882,"status":"passed","title":"should execute wave in batch mode"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should execute wave in dry-run mode without making changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921883,"status":"passed","title":"should execute wave in dry-run mode without making changes"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should handle user migration failures gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338921885,"status":"passed","title":"should handle user migration failures gracefully"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should reject empty user list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921893,"status":"passed","title":"should reject empty user list"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should emit progress events during execution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921895,"status":"passed","title":"should emit progress events during execution"},{"ancestorTitles":["MigrationExecutionService","pauseWave"],"duration":514,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService pauseWave should pause wave execution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338921897,"status":"passed","title":"should pause wave execution"},{"ancestorTitles":["MigrationExecutionService","pauseWave"],"duration":515,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService pauseWave should emit pause event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338922411,"status":"passed","title":"should emit pause event"},{"ancestorTitles":["MigrationExecutionService","resumeWave"],"duration":4586,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService resumeWave should resume paused wave execution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338922926,"status":"passed","title":"should resume paused wave execution"},{"ancestorTitles":["MigrationExecutionService","resumeWave"],"duration":4604,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService resumeWave should emit resume event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338927512,"status":"passed","title":"should emit resume event"},{"ancestorTitles":["MigrationExecutionService","cancelWave"],"duration":515,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService cancelWave should cancel wave execution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338932116,"status":"passed","title":"should cancel wave execution"},{"ancestorTitles":["MigrationExecutionService","cancelWave"],"duration":515,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService cancelWave should emit cancel event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338932631,"status":"passed","title":"should emit cancel event"},{"ancestorTitles":["MigrationExecutionService","getLogs"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService getLogs should return execution logs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338933147,"status":"passed","title":"should return execution logs"},{"ancestorTitles":["MigrationExecutionService","getLogs"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService getLogs should filter logs by waveId","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338933153,"status":"passed","title":"should filter logs by waveId"},{"ancestorTitles":["MigrationExecutionService","getLogs"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService getLogs should return empty array when no logs exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338933154,"status":"passed","title":"should return empty array when no logs exist"},{"ancestorTitles":["MigrationExecutionService","shutdown"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService shutdown should cancel all running waves on shutdown","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338933156,"status":"passed","title":"should cancel all running waves on shutdown"},{"ancestorTitles":["MigrationExecutionService","shutdown"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService shutdown should clean up resources","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338933158,"status":"passed","title":"should clean up resources"},{"ancestorTitles":["MigrationExecutionService","Error Recovery"],"duration":1022,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Error Recovery should retry retryable steps on failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338933159,"status":"passed","title":"should retry retryable steps on failure"},{"ancestorTitles":["MigrationExecutionService","Error Recovery"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Error Recovery should handle non-required step failure gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338934182,"status":"passed","title":"should handle non-required step failure gracefully"},{"ancestorTitles":["MigrationExecutionService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Edge Cases should handle concurrent wave executions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338934184,"status":"passed","title":"should handle concurrent wave executions"},{"ancestorTitles":["MigrationExecutionService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Edge Cases should handle steps with dependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338934186,"status":"passed","title":"should handle steps with dependencies"},{"ancestorTitles":["MigrationExecutionService","Edge Cases"],"duration":118,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Edge Cases should respect step timeout settings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338934188,"status":"passed","title":"should respect step timeout settings"}],"endTime":1761338934308,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationExecutionService.test.ts","startTime":1761338921802,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["DeltaSyncService","Initialization"],"duration":118,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338934377,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["DeltaSyncService","Initialization"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Initialization should set default bandwidth limit","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338934495,"status":"passed","title":"should set default bandwidth limit"},{"ancestorTitles":["DeltaSyncService","Initialization"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Initialization should load persisted data on initialization","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338934603,"status":"passed","title":"should load persisted data on initialization"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":1122,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should perform incremental delta sync","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1761338934711,"status":"passed","title":"should perform incremental delta sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should perform full sync","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338935834,"status":"passed","title":"should perform full sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should perform bidirectional sync","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338935945,"status":"passed","title":"should perform bidirectional sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":1122,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should detect changes since last sync","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338936053,"status":"passed","title":"should detect changes since last sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":1123,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should emit progress events during sync","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338937175,"status":"passed","title":"should emit progress events during sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should handle conflicts during sync","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338938298,"status":"passed","title":"should handle conflicts during sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should handle sync failures","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338938405,"status":"passed","title":"should handle sync failures"},{"ancestorTitles":["DeltaSyncService","Checkpoints"],"duration":1128,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Checkpoints should create checkpoints during sync","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338938522,"status":"passed","title":"should create checkpoints during sync"},{"ancestorTitles":["DeltaSyncService","Checkpoints"],"duration":1126,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Checkpoints should resume from checkpoint","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338939651,"status":"passed","title":"should resume from checkpoint"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should schedule delta sync","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1761338940778,"status":"passed","title":"should schedule delta sync"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should emit event when schedule created","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338940883,"status":"passed","title":"should emit event when schedule created"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should stop delta sync schedule","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338940994,"status":"passed","title":"should stop delta sync schedule"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should resume delta sync schedule","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338941102,"status":"passed","title":"should resume delta sync schedule"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should delete schedule","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338941210,"status":"passed","title":"should delete schedule"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should handle non-existent schedule operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338941320,"status":"passed","title":"should handle non-existent schedule operations"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get sync history for wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338941428,"status":"passed","title":"should get sync history for wave"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get all sync history when no wave specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338941538,"status":"passed","title":"should get all sync history when no wave specified"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get schedules for wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338941647,"status":"passed","title":"should get schedules for wave"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get all schedules when no wave specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338941755,"status":"passed","title":"should get all schedules when no wave specified"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get last sync timestamp","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338941864,"status":"passed","title":"should get last sync timestamp"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should return null for wave with no sync history","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338941975,"status":"passed","title":"should return null for wave with no sync history"},{"ancestorTitles":["DeltaSyncService","Bandwidth Throttling"],"duration":2136,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Bandwidth Throttling should throttle when bandwidth limit exceeded","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338942082,"status":"passed","title":"should throttle when bandwidth limit exceeded"},{"ancestorTitles":["DeltaSyncService","Edge Cases"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Edge Cases should handle empty change list","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338944219,"status":"passed","title":"should handle empty change list"},{"ancestorTitles":["DeltaSyncService","Edge Cases"],"duration":1123,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Edge Cases should handle very large batch of changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338944328,"status":"passed","title":"should handle very large batch of changes"},{"ancestorTitles":["DeltaSyncService","Edge Cases"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Edge Cases should handle cron expression for different timezones","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338945451,"status":"passed","title":"should handle cron expression for different timezones"},{"ancestorTitles":["DeltaSyncService","Edge Cases"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Edge Cases should persist data on shutdown","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338945559,"status":"passed","title":"should persist data on shutdown"}],"endTime":1761338945669,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\deltaSyncService.test.ts","startTime":1761338934317,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PowerShellExecutionService","Service Initialization"],"duration":24,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Service Initialization should initialize with correct configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338945738,"status":"passed","title":"should initialize with correct configuration"},{"ancestorTitles":["PowerShellExecutionService","Service Initialization"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Service Initialization should create minimum pool size on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338945762,"status":"passed","title":"should create minimum pool size on initialization"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":58,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should execute a script successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338945766,"status":"passed","title":"should execute a script successfully"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":30,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should handle script execution errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338945824,"status":"passed","title":"should handle script execution errors"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":62,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should support cancellation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338945855,"status":"passed","title":"should support cancellation"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should enforce timeout","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338945917,"status":"passed","title":"should enforce timeout"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":26,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should stream output events","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338946034,"status":"passed","title":"should stream output events"},{"ancestorTitles":["PowerShellExecutionService","Module Execution"],"duration":59,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Module Execution should execute a PowerShell module function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338946060,"status":"passed","title":"should execute a PowerShell module function"},{"ancestorTitles":["PowerShellExecutionService","Module Execution"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Module Execution should cache module results when enabled","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338946119,"status":"passed","title":"should cache module results when enabled"},{"ancestorTitles":["PowerShellExecutionService","Session Pooling"],"duration":30,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Session Pooling should reuse idle sessions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338946122,"status":"passed","title":"should reuse idle sessions"},{"ancestorTitles":["PowerShellExecutionService","Session Pooling"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Session Pooling should respect max pool size","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338946152,"status":"passed","title":"should respect max pool size"},{"ancestorTitles":["PowerShellExecutionService","Session Pooling"],"duration":72,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Session Pooling should queue requests when pool is exhausted","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338946159,"status":"passed","title":"should queue requests when pool is exhausted"},{"ancestorTitles":["PowerShellExecutionService","Session Pooling"],"duration":6029,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Session Pooling should terminate idle sessions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338946232,"status":"passed","title":"should terminate idle sessions"},{"ancestorTitles":["PowerShellExecutionService","Error Handling"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Error Handling should handle syntax errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338952261,"status":"passed","title":"should handle syntax errors"},{"ancestorTitles":["PowerShellExecutionService","Error Handling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Error Handling should handle runtime errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338952277,"status":"passed","title":"should handle runtime errors"},{"ancestorTitles":["PowerShellExecutionService","Error Handling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Error Handling should handle JSON parsing errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338952292,"status":"passed","title":"should handle JSON parsing errors"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should emit output stream events","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338952307,"status":"passed","title":"should emit output stream events"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should emit error stream events","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338952324,"status":"passed","title":"should emit error stream events"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should handle verbose stream","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952338,"status":"passed","title":"should handle verbose stream"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should handle warning stream","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952353,"status":"passed","title":"should handle warning stream"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should handle debug stream","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952369,"status":"passed","title":"should handle debug stream"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should handle progress events","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952384,"status":"passed","title":"should handle progress events"},{"ancestorTitles":["PowerShellExecutionService","Parallel Execution"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Parallel Execution should execute multiple scripts in parallel","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338952401,"status":"passed","title":"should execute multiple scripts in parallel"},{"ancestorTitles":["PowerShellExecutionService","Parallel Execution"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Parallel Execution should handle parallel execution with failures","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338952416,"status":"passed","title":"should handle parallel execution with failures"},{"ancestorTitles":["PowerShellExecutionService","Module Discovery"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Module Discovery should discover available modules","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952432,"status":"passed","title":"should discover available modules"},{"ancestorTitles":["PowerShellExecutionService","Retry Logic"],"duration":23,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Retry Logic should retry failed executions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952439,"status":"passed","title":"should retry failed executions"},{"ancestorTitles":["PowerShellExecutionService","Retry Logic"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Retry Logic should fail after max retries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338952462,"status":"passed","title":"should fail after max retries"},{"ancestorTitles":["PowerShellExecutionService","Performance Monitoring"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Performance Monitoring should track execution statistics","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952479,"status":"passed","title":"should track execution statistics"},{"ancestorTitles":["PowerShellExecutionService","Performance Monitoring"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Performance Monitoring should track execution statistics over time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952493,"status":"passed","title":"should track execution statistics over time"},{"ancestorTitles":["PowerShellExecutionService","Performance Monitoring"],"duration":30,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Performance Monitoring should track failure rate","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952604,"status":"passed","title":"should track failure rate"},{"ancestorTitles":["PowerShellExecutionService","Resource Cleanup"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Resource Cleanup should dispose all sessions on cleanup","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338952634,"status":"passed","title":"should dispose all sessions on cleanup"},{"ancestorTitles":["PowerShellExecutionService","Resource Cleanup"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Resource Cleanup should kill running processes on shutdown","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952650,"status":"passed","title":"should kill running processes on shutdown"}],"endTime":1761338952667,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\powerShellService.test.ts","startTime":1761338945683,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CutoverService","Initialization"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952726,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["CutoverService","Initialization"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Initialization should load cutover plans on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338952838,"status":"passed","title":"should load cutover plans on initialization"},{"ancestorTitles":["CutoverService","Cutover Plan Creation"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Plan Creation should create a cutover plan","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1761338952946,"status":"passed","title":"should create a cutover plan"},{"ancestorTitles":["CutoverService","Cutover Plan Creation"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Plan Creation should persist plan after creation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338953054,"status":"passed","title":"should persist plan after creation"},{"ancestorTitles":["CutoverService","Cutover Plan Creation"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Plan Creation should handle plan with multiple DNS records","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338953165,"status":"passed","title":"should handle plan with multiple DNS records"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should execute complete cutover successfully","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1761338953272,"status":"passed","title":"should execute complete cutover successfully"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should emit phase events during execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338953383,"status":"passed","title":"should emit phase events during execution"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should update DNS records during cutover","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338953492,"status":"passed","title":"should update DNS records during cutover"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should configure mailbox redirection","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338953602,"status":"passed","title":"should configure mailbox redirection"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should activate target environment","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338953712,"status":"passed","title":"should activate target environment"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should decommission source when configured","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338953822,"status":"passed","title":"should decommission source when configured"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should send notifications at appropriate stages","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338953931,"status":"passed","title":"should send notifications at appropriate stages"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should handle post-cutover validation warnings","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338954039,"status":"passed","title":"should handle post-cutover validation warnings"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":114,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should fail when plan not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338954150,"status":"passed","title":"should fail when plan not found"},{"ancestorTitles":["CutoverService","Rollback"],"duration":118,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Rollback should execute rollback when cutover fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338954265,"status":"passed","title":"should execute rollback when cutover fails"},{"ancestorTitles":["CutoverService","Rollback"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Rollback should execute rollback steps in reverse order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338954384,"status":"passed","title":"should execute rollback steps in reverse order"},{"ancestorTitles":["CutoverService","Checklist Management"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Checklist Management should update checklist item","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338954494,"status":"passed","title":"should update checklist item"},{"ancestorTitles":["CutoverService","Checklist Management"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Checklist Management should fail when required checklist items not completed","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338954600,"status":"passed","title":"should fail when required checklist items not completed"},{"ancestorTitles":["CutoverService","Checklist Management"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Checklist Management should handle non-existent checklist item","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338954711,"status":"passed","title":"should handle non-existent checklist item"},{"ancestorTitles":["CutoverService","Data Retrieval"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Data Retrieval should get cutover plan by ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338954820,"status":"passed","title":"should get cutover plan by ID"},{"ancestorTitles":["CutoverService","Data Retrieval"],"duration":104,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Data Retrieval should return null for non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338954931,"status":"passed","title":"should return null for non-existent plan"},{"ancestorTitles":["CutoverService","Data Retrieval"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Data Retrieval should get cutover plans for wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338955035,"status":"passed","title":"should get cutover plans for wave"},{"ancestorTitles":["CutoverService","Edge Cases"],"duration":2122,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Edge Cases should wait for cutover window","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338955144,"status":"passed","title":"should wait for cutover window"},{"ancestorTitles":["CutoverService","Edge Cases"],"duration":113,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Edge Cases should handle very large notification list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338957266,"status":"passed","title":"should handle very large notification list"},{"ancestorTitles":["CutoverService","Edge Cases"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Edge Cases should handle special characters in plan name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338957379,"status":"passed","title":"should handle special characters in plan name"},{"ancestorTitles":["CutoverService","Edge Cases"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Edge Cases should persist plans on save","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338957485,"status":"passed","title":"should persist plans on save"}],"endTime":1761338957596,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\cutoverService.test.ts","startTime":1761338952673,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationReportingService","Initialization"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Initialization should create data directories on initialization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338957657,"status":"passed","title":"should create data directories on initialization"},{"ancestorTitles":["MigrationReportingService","Initialization"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Initialization should load persisted data on initialization","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338957767,"status":"passed","title":"should load persisted data on initialization"},{"ancestorTitles":["MigrationReportingService","Initialization"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Initialization should create default templates","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338957877,"status":"passed","title":"should create default templates"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate executive summary report","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1761338957983,"status":"passed","title":"should generate executive summary report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate wave detail report","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338958095,"status":"passed","title":"should generate wave detail report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate user detail report","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338958202,"status":"passed","title":"should generate user detail report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate error analysis report","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338958310,"status":"passed","title":"should generate error analysis report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate performance report","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338958419,"status":"passed","title":"should generate performance report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate timeline report","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338958529,"status":"passed","title":"should generate timeline report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should include recommendations in executive summary","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338958639,"status":"passed","title":"should include recommendations in executive summary"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":120,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should handle PowerShell failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338958747,"status":"passed","title":"should handle PowerShell failure"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":114,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as JSON","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338958867,"status":"passed","title":"should export report as JSON"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as CSV","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338958981,"status":"passed","title":"should export report as CSV"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as HTML","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338959090,"status":"passed","title":"should export report as HTML"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as PDF via PowerShell","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338959198,"status":"passed","title":"should export report as PDF via PowerShell"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as Excel via PowerShell","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338959308,"status":"passed","title":"should export report as Excel via PowerShell"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should emit export event","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338959416,"status":"passed","title":"should emit export event"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should fail export for non-existent report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338959526,"status":"passed","title":"should fail export for non-existent report"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should handle special characters in report name when exporting","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338959636,"status":"passed","title":"should handle special characters in report name when exporting"},{"ancestorTitles":["MigrationReportingService","Template Management"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Template Management should create custom template","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338959745,"status":"passed","title":"should create custom template"},{"ancestorTitles":["MigrationReportingService","Template Management"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Template Management should get all templates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338959853,"status":"passed","title":"should get all templates"},{"ancestorTitles":["MigrationReportingService","Template Management"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Template Management should persist templates after creation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338959962,"status":"passed","title":"should persist templates after creation"},{"ancestorTitles":["MigrationReportingService","Scheduled Reporting"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Scheduled Reporting should schedule report generation","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761338960071,"status":"passed","title":"should schedule report generation"},{"ancestorTitles":["MigrationReportingService","Scheduled Reporting"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Scheduled Reporting should fail to schedule with non-existent template","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338960178,"status":"passed","title":"should fail to schedule with non-existent template"},{"ancestorTitles":["MigrationReportingService","Scheduled Reporting"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Scheduled Reporting should get all schedules","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338960290,"status":"passed","title":"should get all schedules"},{"ancestorTitles":["MigrationReportingService","Data Retrieval"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Data Retrieval should get reports for specific wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338960397,"status":"passed","title":"should get reports for specific wave"},{"ancestorTitles":["MigrationReportingService","Data Retrieval"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Data Retrieval should get all reports when no wave specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338960505,"status":"passed","title":"should get all reports when no wave specified"},{"ancestorTitles":["MigrationReportingService","Report Data Building"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Data Building should calculate success rate correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338960615,"status":"passed","title":"should calculate success rate correctly"},{"ancestorTitles":["MigrationReportingService","Report Data Building"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Data Building should categorize errors correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338960723,"status":"passed","title":"should categorize errors correctly"},{"ancestorTitles":["MigrationReportingService","Report Data Building"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Data Building should sort timeline events chronologically","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338960835,"status":"passed","title":"should sort timeline events chronologically"},{"ancestorTitles":["MigrationReportingService","Edge Cases"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Edge Cases should handle report with no waves","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338960941,"status":"passed","title":"should handle report with no waves"},{"ancestorTitles":["MigrationReportingService","Edge Cases"],"duration":124,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Edge Cases should handle very large reports","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338961052,"status":"passed","title":"should handle very large reports"},{"ancestorTitles":["MigrationReportingService","Edge Cases"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Edge Cases should handle CSV export with special characters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338961176,"status":"passed","title":"should handle CSV export with special characters"},{"ancestorTitles":["MigrationReportingService","Edge Cases"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Edge Cases should persist data on shutdown","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338961286,"status":"passed","title":"should persist data on shutdown"}],"endTime":1761338961392,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationReportingService.test.ts","startTime":1761338957605,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationOrchestrationService","Initialization"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338961454,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["MigrationOrchestrationService","Initialization"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Initialization should attempt to load persisted state on initialization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338961563,"status":"passed","title":"should attempt to load persisted state on initialization"},{"ancestorTitles":["MigrationOrchestrationService","Initialization"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Initialization should handle missing persisted state gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338961674,"status":"passed","title":"should handle missing persisted state gracefully"},{"ancestorTitles":["MigrationOrchestrationService","Wave Planning"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Planning should plan a new wave","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1761338961785,"status":"passed","title":"should plan a new wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Planning"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Planning should persist wave after planning","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338961894,"status":"passed","title":"should persist wave after planning"},{"ancestorTitles":["MigrationOrchestrationService","Wave Planning"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Planning should handle waves with dependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338962000,"status":"passed","title":"should handle waves with dependencies"},{"ancestorTitles":["MigrationOrchestrationService","Wave Updates"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Updates should update an existing wave","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338962111,"status":"passed","title":"should update an existing wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Updates"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Updates should return null for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338962222,"status":"passed","title":"should return null for non-existent wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Updates"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Updates should persist state after update","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338962330,"status":"passed","title":"should persist state after update"},{"ancestorTitles":["MigrationOrchestrationService","Wave Deletion"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Deletion should delete a wave","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338962441,"status":"passed","title":"should delete a wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Deletion"],"duration":118,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Deletion should not delete executing wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338962548,"status":"passed","title":"should not delete executing wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Deletion"],"duration":116,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Deletion should return false for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338962666,"status":"passed","title":"should return false for non-existent wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Validation"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Validation should validate waves successfully when no issues","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338962783,"status":"passed","title":"should validate waves successfully when no issues"},{"ancestorTitles":["MigrationOrchestrationService","Wave Validation"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Validation should detect circular dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338962893,"status":"passed","title":"should detect circular dependencies"},{"ancestorTitles":["MigrationOrchestrationService","Wave Validation"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Validation should detect non-existent dependencies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338963002,"status":"passed","title":"should detect non-existent dependencies"},{"ancestorTitles":["MigrationOrchestrationService","Migration Execution"],"duration":219,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Migration Execution should execute migration for project","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338963110,"status":"passed","title":"should execute migration for project"},{"ancestorTitles":["MigrationOrchestrationService","Migration Execution"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Migration Execution should fail when validation fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338963329,"status":"passed","title":"should fail when validation fails"},{"ancestorTitles":["MigrationOrchestrationService","Migration Execution"],"duration":328,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Migration Execution should execute waves in correct order based on dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338963440,"status":"passed","title":"should execute waves in correct order based on dependencies"},{"ancestorTitles":["MigrationOrchestrationService","Pause and Resume"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Pause and Resume should pause migration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338963769,"status":"passed","title":"should pause migration"},{"ancestorTitles":["MigrationOrchestrationService","Pause and Resume"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Pause and Resume should resume migration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338963879,"status":"passed","title":"should resume migration"},{"ancestorTitles":["MigrationOrchestrationService","Rollback"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Rollback should create rollback point","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338963984,"status":"passed","title":"should create rollback point"},{"ancestorTitles":["MigrationOrchestrationService","Rollback"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Rollback should fail to create rollback point for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338964093,"status":"passed","title":"should fail to create rollback point for non-existent wave"},{"ancestorTitles":["MigrationOrchestrationService","Rollback"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Rollback should rollback migration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338964202,"status":"passed","title":"should rollback migration"},{"ancestorTitles":["MigrationOrchestrationService","Rollback"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Rollback should fail rollback for non-existent rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338964311,"status":"passed","title":"should fail rollback for non-existent rollback point"},{"ancestorTitles":["MigrationOrchestrationService","Statistics"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Statistics should return statistics for project","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761338964419,"status":"passed","title":"should return statistics for project"},{"ancestorTitles":["MigrationOrchestrationService","Statistics"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Statistics should return all statistics when no project specified","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338964528,"status":"passed","title":"should return all statistics when no project specified"},{"ancestorTitles":["MigrationOrchestrationService","Edge Cases"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Edge Cases should handle large number of waves","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338964637,"status":"passed","title":"should handle large number of waves"},{"ancestorTitles":["MigrationOrchestrationService","Edge Cases"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Edge Cases should handle wave with special characters in name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338964748,"status":"passed","title":"should handle wave with special characters in name"},{"ancestorTitles":["MigrationOrchestrationService","Edge Cases"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Edge Cases should handle empty user list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338964865,"status":"passed","title":"should handle empty user list"}],"endTime":1761338964974,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationOrchestrationService.test.ts","startTime":1761338961401,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CoexistenceService","Initialization"],"duration":113,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338965032,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["CoexistenceService","Initialization"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Initialization should load persisted data on initialization","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338965145,"status":"passed","title":"should load persisted data on initialization"},{"ancestorTitles":["CoexistenceService","Initialization"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Initialization should start health monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338965254,"status":"passed","title":"should start health monitoring"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure coexistence with all features","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1761338965363,"status":"passed","title":"should configure coexistence with all features"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure free/busy sharing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338965474,"status":"passed","title":"should configure free/busy sharing"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure mail routing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338965581,"status":"passed","title":"should configure mail routing"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure GAL sync and run initial sync","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338965690,"status":"passed","title":"should configure GAL sync and run initial sync"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure cross-forest authentication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338965799,"status":"passed","title":"should configure cross-forest authentication"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure proxy addresses","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338965909,"status":"passed","title":"should configure proxy addresses"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should handle configuration failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338966016,"status":"passed","title":"should handle configuration failure"},{"ancestorTitles":["CoexistenceService","GAL Synchronization"],"duration":115,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService GAL Synchronization should synchronize GAL","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761338966134,"status":"passed","title":"should synchronize GAL"},{"ancestorTitles":["CoexistenceService","GAL Synchronization"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService GAL Synchronization should fail when configuration not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338966249,"status":"passed","title":"should fail when configuration not found"},{"ancestorTitles":["CoexistenceService","GAL Synchronization"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService GAL Synchronization should fail when PowerShell script fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338966361,"status":"passed","title":"should fail when PowerShell script fails"},{"ancestorTitles":["CoexistenceService","Health Checks"],"duration":113,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Health Checks should perform health check","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761338966469,"status":"passed","title":"should perform health check"},{"ancestorTitles":["CoexistenceService","Health Checks"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Health Checks should detect health issues","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338966582,"status":"passed","title":"should detect health issues"},{"ancestorTitles":["CoexistenceService","Health Checks"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Health Checks should return degraded status when warnings present","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338966691,"status":"passed","title":"should return degraded status when warnings present"},{"ancestorTitles":["CoexistenceService","Health Checks"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Health Checks should store health history","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338966799,"status":"passed","title":"should store health history"},{"ancestorTitles":["CoexistenceService","Troubleshooting"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Troubleshooting should troubleshoot issue","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338966907,"status":"passed","title":"should troubleshoot issue"},{"ancestorTitles":["CoexistenceService","Troubleshooting"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Troubleshooting should fail troubleshooting for non-existent issue","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338967014,"status":"passed","title":"should fail troubleshooting for non-existent issue"},{"ancestorTitles":["CoexistenceService","Troubleshooting"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Troubleshooting should auto-fix issue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338967124,"status":"passed","title":"should auto-fix issue"},{"ancestorTitles":["CoexistenceService","Troubleshooting"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Troubleshooting should fail auto-fix when PowerShell script fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338967234,"status":"passed","title":"should fail auto-fix when PowerShell script fails"},{"ancestorTitles":["CoexistenceService","Decommissioning"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Decommissioning should decommission coexistence","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338967342,"status":"passed","title":"should decommission coexistence"},{"ancestorTitles":["CoexistenceService","Decommissioning"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Decommissioning should handle decommission failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338967452,"status":"passed","title":"should handle decommission failure"},{"ancestorTitles":["CoexistenceService","Decommissioning"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Decommissioning should fail for non-existent configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338967563,"status":"passed","title":"should fail for non-existent configuration"},{"ancestorTitles":["CoexistenceService","Data Retrieval"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Data Retrieval should get configuration by ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338967670,"status":"passed","title":"should get configuration by ID"},{"ancestorTitles":["CoexistenceService","Data Retrieval"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Data Retrieval should return null for non-existent configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338967780,"status":"passed","title":"should return null for non-existent configuration"},{"ancestorTitles":["CoexistenceService","Data Retrieval"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Data Retrieval should get configurations for wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338967889,"status":"passed","title":"should get configurations for wave"},{"ancestorTitles":["CoexistenceService","Data Retrieval"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Data Retrieval should get active issues","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968000,"status":"passed","title":"should get active issues"},{"ancestorTitles":["CoexistenceService","Edge Cases"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Edge Cases should handle very long environment names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968107,"status":"passed","title":"should handle very long environment names"},{"ancestorTitles":["CoexistenceService","Edge Cases"],"duration":138,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Edge Cases should limit health history to 100 entries","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968215,"status":"passed","title":"should limit health history to 100 entries"},{"ancestorTitles":["CoexistenceService","Edge Cases"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Edge Cases should persist data on shutdown","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968353,"status":"passed","title":"should persist data on shutdown"}],"endTime":1761338968465,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\coexistenceService.test.ts","startTime":1761338964983,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["RollbackService","Initialization"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Initialization should create data directories on initialization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968520,"status":"passed","title":"should create data directories on initialization"},{"ancestorTitles":["RollbackService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Initialization should initialize with provided configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968525,"status":"passed","title":"should initialize with provided configuration"},{"ancestorTitles":["RollbackService","Initialization"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Initialization should load existing rollback points on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968526,"status":"passed","title":"should load existing rollback points on initialization"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should create full rollback point successfully","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1761338968530,"status":"passed","title":"should create full rollback point successfully"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should compress snapshot data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968536,"status":"passed","title":"should compress snapshot data"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should set expiration date based on retention policy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968539,"status":"passed","title":"should set expiration date based on retention policy"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should handle PowerShell snapshot capture failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968547,"status":"passed","title":"should handle PowerShell snapshot capture failure"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should enforce retention policy after creating rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968561,"status":"passed","title":"should enforce retention policy after creating rollback point"},{"ancestorTitles":["RollbackService","createSelectiveRollbackPoint"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createSelectiveRollbackPoint should create selective rollback point for specific users","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761338968578,"status":"passed","title":"should create selective rollback point for specific users"},{"ancestorTitles":["RollbackService","createSelectiveRollbackPoint"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createSelectiveRollbackPoint should create selective rollback for multiple users","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968580,"status":"passed","title":"should create selective rollback for multiple users"},{"ancestorTitles":["RollbackService","rollback"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should execute full rollback successfully","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1761338968583,"status":"passed","title":"should execute full rollback successfully"},{"ancestorTitles":["RollbackService","rollback"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should execute rollback in dry-run mode","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968588,"status":"passed","title":"should execute rollback in dry-run mode"},{"ancestorTitles":["RollbackService","rollback"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should execute selective rollback for specific users","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338968592,"status":"passed","title":"should execute selective rollback for specific users"},{"ancestorTitles":["RollbackService","rollback"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should force rollback when canRestore is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968597,"status":"passed","title":"should force rollback when canRestore is false"},{"ancestorTitles":["RollbackService","rollback"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should validate snapshot before rollback","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968602,"status":"passed","title":"should validate snapshot before rollback"},{"ancestorTitles":["RollbackService","rollback"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should fail rollback when validation fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968606,"status":"passed","title":"should fail rollback when validation fails"},{"ancestorTitles":["RollbackService","rollback"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should handle rollback execution failure gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338968612,"status":"passed","title":"should handle rollback execution failure gracefully"},{"ancestorTitles":["RollbackService","rollback"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should reject rollback for non-existent rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968616,"status":"passed","title":"should reject rollback for non-existent rollback point"},{"ancestorTitles":["RollbackService","getRollbackPoints"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoints should return all rollback points","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968622,"status":"passed","title":"should return all rollback points"},{"ancestorTitles":["RollbackService","getRollbackPoints"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoints should filter rollback points by wave ID","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338968627,"status":"passed","title":"should filter rollback points by wave ID"},{"ancestorTitles":["RollbackService","getRollbackPoints"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoints should return empty array for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968631,"status":"passed","title":"should return empty array for non-existent wave"},{"ancestorTitles":["RollbackService","getRollbackPoint"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoint should return specific rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968636,"status":"passed","title":"should return specific rollback point"},{"ancestorTitles":["RollbackService","getRollbackPoint"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoint should return null for non-existent rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968638,"status":"passed","title":"should return null for non-existent rollback point"},{"ancestorTitles":["RollbackService","getStorageStats"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getStorageStats should return accurate storage statistics","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761338968640,"status":"passed","title":"should return accurate storage statistics"},{"ancestorTitles":["RollbackService","getStorageStats"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getStorageStats should track oldest and newest points","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968643,"status":"passed","title":"should track oldest and newest points"},{"ancestorTitles":["RollbackService","getStorageStats"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getStorageStats should return null dates when no points exist","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968648,"status":"passed","title":"should return null dates when no points exist"},{"ancestorTitles":["RollbackService","deleteRollbackPoint"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService deleteRollbackPoint should delete rollback point and snapshot file","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968653,"status":"passed","title":"should delete rollback point and snapshot file"},{"ancestorTitles":["RollbackService","deleteRollbackPoint"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService deleteRollbackPoint should reject delete for non-existent rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968656,"status":"passed","title":"should reject delete for non-existent rollback point"},{"ancestorTitles":["RollbackService","deleteRollbackPoint"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService deleteRollbackPoint should handle file deletion failure gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968658,"status":"passed","title":"should handle file deletion failure gracefully"},{"ancestorTitles":["RollbackService","Retention Policy"],"duration":21,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Retention Policy should delete expired rollback points","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968662,"status":"passed","title":"should delete expired rollback points"},{"ancestorTitles":["RollbackService","Retention Policy"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Retention Policy should enforce max points per wave limit","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968683,"status":"passed","title":"should enforce max points per wave limit"},{"ancestorTitles":["RollbackService","Retention Policy"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Retention Policy should not delete points from other waves","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968690,"status":"passed","title":"should not delete points from other waves"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle failed snapshot capture","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968694,"status":"passed","title":"should handle failed snapshot capture"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle missing snapshot data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968697,"status":"passed","title":"should handle missing snapshot data"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle incomplete snapshot data gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968700,"status":"passed","title":"should handle incomplete snapshot data gracefully"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle file I/O errors during snapshot save","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968704,"status":"passed","title":"should handle file I/O errors during snapshot save"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle decompression errors during rollback","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968707,"status":"passed","title":"should handle decompression errors during rollback"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should handle large snapshots with compression","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968711,"status":"passed","title":"should handle large snapshots with compression"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should handle concurrent rollback point creation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968717,"status":"passed","title":"should handle concurrent rollback point creation"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should handle snapshot version compatibility","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968721,"status":"passed","title":"should handle snapshot version compatibility"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should preserve snapshot timestamp","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968724,"status":"passed","title":"should preserve snapshot timestamp"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should handle metadata serialization for persistence","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338968726,"status":"passed","title":"should handle metadata serialization for persistence"}],"endTime":1761338968732,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\rollbackService.test.ts","startTime":1761338968472,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationValidationService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968786,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["MigrationValidationService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Initialization should initialize with provided configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968787,"status":"passed","title":"should initialize with provided configuration"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should validate wave successfully with all checks passing","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1761338968788,"status":"passed","title":"should validate wave successfully with all checks passing"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should fail validation when connectivity check fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968799,"status":"passed","title":"should fail validation when connectivity check fails"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should handle connectivity validation failure gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968810,"status":"passed","title":"should handle connectivity validation failure gracefully"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should skip optional validations when requested","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968813,"status":"passed","title":"should skip optional validations when requested"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should emit progress events during validation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968815,"status":"passed","title":"should emit progress events during validation"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should validate users in batches","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968818,"status":"passed","title":"should validate users in batches"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should detect and report warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968820,"status":"passed","title":"should detect and report warnings"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should persist validation report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968822,"status":"passed","title":"should persist validation report"},{"ancestorTitles":["MigrationValidationService","Capacity Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Capacity Validation should pass when sufficient capacity exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968824,"status":"passed","title":"should pass when sufficient capacity exists"},{"ancestorTitles":["MigrationValidationService","Capacity Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Capacity Validation should fail when capacity is insufficient","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968826,"status":"passed","title":"should fail when capacity is insufficient"},{"ancestorTitles":["MigrationValidationService","User Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService User Validation should validate user licenses","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968828,"status":"passed","title":"should validate user licenses"},{"ancestorTitles":["MigrationValidationService","User Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService User Validation should validate user permissions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968831,"status":"passed","title":"should validate user permissions"},{"ancestorTitles":["MigrationValidationService","User Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService User Validation should validate mailbox size limits","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968833,"status":"passed","title":"should validate mailbox size limits"},{"ancestorTitles":["MigrationValidationService","Blocker Detection"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Blocker Detection should detect legacy protocol blockers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968835,"status":"passed","title":"should detect legacy protocol blockers"},{"ancestorTitles":["MigrationValidationService","Blocker Detection"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Blocker Detection should detect custom attribute blockers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968838,"status":"passed","title":"should detect custom attribute blockers"},{"ancestorTitles":["MigrationValidationService","Blocker Detection"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Blocker Detection should handle no blockers found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968839,"status":"passed","title":"should handle no blockers found"},{"ancestorTitles":["MigrationValidationService","Dependency Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Dependency Validation should detect circular dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968841,"status":"passed","title":"should detect circular dependencies"},{"ancestorTitles":["MigrationValidationService","Dependency Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Dependency Validation should detect unresolved dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968843,"status":"passed","title":"should detect unresolved dependencies"},{"ancestorTitles":["MigrationValidationService","Dependency Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Dependency Validation should pass when dependencies are resolved","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968846,"status":"passed","title":"should pass when dependencies are resolved"},{"ancestorTitles":["MigrationValidationService","Report Generation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Report Generation should generate report with correct overall status - passed","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968848,"status":"passed","title":"should generate report with correct overall status - passed"},{"ancestorTitles":["MigrationValidationService","Report Generation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Report Generation should generate report with overall status - passed-with-warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968851,"status":"passed","title":"should generate report with overall status - passed-with-warnings"},{"ancestorTitles":["MigrationValidationService","Report Generation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Report Generation should calculate statistics correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968853,"status":"passed","title":"should calculate statistics correctly"},{"ancestorTitles":["MigrationValidationService","Report Generation"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Report Generation should include remediation suggestions for failures","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968856,"status":"passed","title":"should include remediation suggestions for failures"},{"ancestorTitles":["MigrationValidationService","Error Recovery"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Error Recovery should handle PowerShell script execution failure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968861,"status":"passed","title":"should handle PowerShell script execution failure"},{"ancestorTitles":["MigrationValidationService","Error Recovery"],"duration":118,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Error Recovery should handle network timeout gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968864,"status":"passed","title":"should handle network timeout gracefully"},{"ancestorTitles":["MigrationValidationService","Error Recovery"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Error Recovery should handle malformed response data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968982,"status":"passed","title":"should handle malformed response data"},{"ancestorTitles":["MigrationValidationService","getReport"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService getReport should retrieve validation report by ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968986,"status":"passed","title":"should retrieve validation report by ID"},{"ancestorTitles":["MigrationValidationService","getReport"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService getReport should return null for non-existent report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968990,"status":"passed","title":"should return null for non-existent report"},{"ancestorTitles":["MigrationValidationService","getReportsByWave"],"duration":null,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService getReportsByWave should retrieve all reports for a wave","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338968992,"status":"pending","title":"should retrieve all reports for a wave"},{"ancestorTitles":["MigrationValidationService","getReportsByWave"],"duration":null,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService getReportsByWave should return empty array for wave with no reports","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761338968992,"status":"pending","title":"should return empty array for wave with no reports"},{"ancestorTitles":["MigrationValidationService","Edge Cases"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Edge Cases should handle empty user list","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338968992,"status":"passed","title":"should handle empty user list"},{"ancestorTitles":["MigrationValidationService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Edge Cases should handle empty mappings list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338968997,"status":"passed","title":"should handle empty mappings list"},{"ancestorTitles":["MigrationValidationService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Edge Cases should handle very large user batches","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338968999,"status":"passed","title":"should handle very large user batches"},{"ancestorTitles":["MigrationValidationService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Edge Cases should handle concurrent validation requests","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969002,"status":"passed","title":"should handle concurrent validation requests"}],"endTime":1761338969006,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationValidationService.test.ts","startTime":1761338968739,"status":"focused","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationPlanningService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Initialization should create plans directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969060,"status":"passed","title":"should create plans directory on initialization"},{"ancestorTitles":["MigrationPlanningService","Initialization"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Initialization should initialize with provided data root","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969061,"status":"passed","title":"should initialize with provided data root"},{"ancestorTitles":["MigrationPlanningService","Initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Initialization should use default data root when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969064,"status":"passed","title":"should use default data root when not provided"},{"ancestorTitles":["MigrationPlanningService","createPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService createPlan should create a new migration plan successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761338969064,"status":"passed","title":"should create a new migration plan successfully"},{"ancestorTitles":["MigrationPlanningService","createPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService createPlan should generate unique IDs for each plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969065,"status":"passed","title":"should generate unique IDs for each plan"},{"ancestorTitles":["MigrationPlanningService","createPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService createPlan should set created and modified timestamps","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969066,"status":"passed","title":"should set created and modified timestamps"},{"ancestorTitles":["MigrationPlanningService","createPlan"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService createPlan should initialize plan with empty waves array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969067,"status":"passed","title":"should initialize plan with empty waves array"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should add wave to plan successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969067,"status":"passed","title":"should add wave to plan successfully"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should add wave with default priority when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969068,"status":"passed","title":"should add wave with default priority when not provided"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should add wave with dependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969072,"status":"passed","title":"should add wave with dependencies"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should reject adding wave to non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969073,"status":"passed","title":"should reject adding wave to non-existent plan"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":20,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should update plan modified timestamp when adding wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969081,"status":"passed","title":"should update plan modified timestamp when adding wave"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should assign users to wave successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969102,"status":"passed","title":"should assign users to wave successfully"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should add users to existing user list","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969104,"status":"passed","title":"should add users to existing user list"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should prevent duplicate user assignments","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969105,"status":"passed","title":"should prevent duplicate user assignments"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should reject assignment to non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969106,"status":"passed","title":"should reject assignment to non-existent plan"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should reject assignment to non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969107,"status":"passed","title":"should reject assignment to non-existent wave"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should handle empty user list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969108,"status":"passed","title":"should handle empty user list"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should update wave status to in-progress","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969110,"status":"passed","title":"should update wave status to in-progress"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should update wave status to completed","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969111,"status":"passed","title":"should update wave status to completed"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should update wave status to failed","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969112,"status":"passed","title":"should update wave status to failed"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":20,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should update wave modified timestamp","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969112,"status":"passed","title":"should update wave modified timestamp"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should reject status update for non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969132,"status":"passed","title":"should reject status update for non-existent plan"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should reject status update for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969133,"status":"passed","title":"should reject status update for non-existent wave"},{"ancestorTitles":["MigrationPlanningService","getPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlan should retrieve plan from memory","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969134,"status":"passed","title":"should retrieve plan from memory"},{"ancestorTitles":["MigrationPlanningService","getPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlan should load plan from disk if not in memory","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969135,"status":"passed","title":"should load plan from disk if not in memory"},{"ancestorTitles":["MigrationPlanningService","getPlan"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlan should return null for non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969136,"status":"passed","title":"should return null for non-existent plan"},{"ancestorTitles":["MigrationPlanningService","getPlan"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlan should cache loaded plan in memory","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969136,"status":"passed","title":"should cache loaded plan in memory"},{"ancestorTitles":["MigrationPlanningService","getPlansByProfile"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlansByProfile should return all plans for a profile","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969138,"status":"passed","title":"should return all plans for a profile"},{"ancestorTitles":["MigrationPlanningService","getPlansByProfile"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlansByProfile should return empty array for profile with no plans","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969139,"status":"passed","title":"should return empty array for profile with no plans"},{"ancestorTitles":["MigrationPlanningService","getPlansByProfile"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlansByProfile should load all plans from disk","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969140,"status":"passed","title":"should load all plans from disk"},{"ancestorTitles":["MigrationPlanningService","deletePlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService deletePlan should delete plan from memory and disk","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969140,"status":"passed","title":"should delete plan from memory and disk"},{"ancestorTitles":["MigrationPlanningService","deletePlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService deletePlan should handle deletion when file does not exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969141,"status":"passed","title":"should handle deletion when file does not exist"},{"ancestorTitles":["MigrationPlanningService","deletePlan"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService deletePlan should not throw error when deleting non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969142,"status":"passed","title":"should not throw error when deleting non-existent plan"},{"ancestorTitles":["MigrationPlanningService","getStatistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getStatistics should return statistics with no plans","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969142,"status":"passed","title":"should return statistics with no plans"},{"ancestorTitles":["MigrationPlanningService","getStatistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getStatistics should calculate statistics correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969143,"status":"passed","title":"should calculate statistics correctly"},{"ancestorTitles":["MigrationPlanningService","getStatistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getStatistics should count unique users across all waves","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969144,"status":"passed","title":"should count unique users across all waves"},{"ancestorTitles":["MigrationPlanningService","getStatistics"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getStatistics should track waves by status correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969145,"status":"passed","title":"should track waves by status correctly"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle very long plan names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969146,"status":"passed","title":"should handle very long plan names"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle special characters in names","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969146,"status":"passed","title":"should handle special characters in names"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle multiple plans with same name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969149,"status":"passed","title":"should handle multiple plans with same name"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle large number of waves in a plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969150,"status":"passed","title":"should handle large number of waves in a plan"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle large number of users in a wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969154,"status":"passed","title":"should handle large number of users in a wave"}],"endTime":1761338969156,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationPlanningService.test.ts","startTime":1761338969014,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ConflictResolutionService","Initialization"],"duration":18,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969209,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["ConflictResolutionService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Initialization should initialize with default data directory when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969228,"status":"passed","title":"should initialize with default data directory when not provided"},{"ancestorTitles":["ConflictResolutionService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Initialization should initialize empty conflict and template maps","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969230,"status":"passed","title":"should initialize empty conflict and template maps"},{"ancestorTitles":["ConflictResolutionService","detectConflicts"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService detectConflicts should detect conflicts successfully","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"startAt":1761338969231,"status":"passed","title":"should detect conflicts successfully"},{"ancestorTitles":["ConflictResolutionService","detectConflicts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService detectConflicts should handle detection with no conflicts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969236,"status":"passed","title":"should handle detection with no conflicts"},{"ancestorTitles":["ConflictResolutionService","detectConflicts"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService detectConflicts should throw error on PowerShell failure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969237,"status":"passed","title":"should throw error on PowerShell failure"},{"ancestorTitles":["ConflictResolutionService","detectConflicts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService detectConflicts should assign default severity when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969248,"status":"passed","title":"should assign default severity when not provided"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with source-wins strategy","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1761338969249,"status":"passed","title":"should resolve conflict with source-wins strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with target-wins strategy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969253,"status":"passed","title":"should resolve conflict with target-wins strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with merge strategy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969254,"status":"passed","title":"should resolve conflict with merge strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with rename-source strategy","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969256,"status":"passed","title":"should resolve conflict with rename-source strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with rename-target strategy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969258,"status":"passed","title":"should resolve conflict with rename-target strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should skip conflict when using skip strategy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969260,"status":"passed","title":"should skip conflict when using skip strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should queue conflict for approval when using manual strategy","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969262,"status":"passed","title":"should queue conflict for approval when using manual strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should throw error for non-existent conflict","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969266,"status":"passed","title":"should throw error for non-existent conflict"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should throw error when resolving already resolved conflict","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969267,"status":"passed","title":"should throw error when resolving already resolved conflict"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should handle PowerShell failure during resolution","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969269,"status":"passed","title":"should handle PowerShell failure during resolution"},{"ancestorTitles":["ConflictResolutionService","Approval Workflow"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Approval Workflow should approve and resolve conflict","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761338969273,"status":"passed","title":"should approve and resolve conflict"},{"ancestorTitles":["ConflictResolutionService","Approval Workflow"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Approval Workflow should reject approval request","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761338969276,"status":"passed","title":"should reject approval request"},{"ancestorTitles":["ConflictResolutionService","Approval Workflow"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Approval Workflow should throw error for non-existent approval request","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969278,"status":"passed","title":"should throw error for non-existent approval request"},{"ancestorTitles":["ConflictResolutionService","autoResolveConflicts"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService autoResolveConflicts should auto-resolve conflicts using templates","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969282,"status":"passed","title":"should auto-resolve conflicts using templates"},{"ancestorTitles":["ConflictResolutionService","autoResolveConflicts"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService autoResolveConflicts should not auto-resolve conflicts without matching templates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969285,"status":"passed","title":"should not auto-resolve conflicts without matching templates"},{"ancestorTitles":["ConflictResolutionService","autoResolveConflicts"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService autoResolveConflicts should handle failures during auto-resolution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969287,"status":"passed","title":"should handle failures during auto-resolution"},{"ancestorTitles":["ConflictResolutionService","Template Management"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Template Management should create resolution template","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969293,"status":"passed","title":"should create resolution template"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should get all conflicts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969294,"status":"passed","title":"should get all conflicts"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should filter conflicts by wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969297,"status":"passed","title":"should filter conflicts by wave"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should filter conflicts by type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969299,"status":"passed","title":"should filter conflicts by type"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should filter conflicts by status","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969300,"status":"passed","title":"should filter conflicts by status"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should get approval queue by status","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969302,"status":"passed","title":"should get approval queue by status"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should get audit log for specific conflict","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969304,"status":"passed","title":"should get audit log for specific conflict"},{"ancestorTitles":["ConflictResolutionService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Edge Cases should handle empty user list in detection","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969305,"status":"passed","title":"should handle empty user list in detection"},{"ancestorTitles":["ConflictResolutionService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Edge Cases should handle large number of conflicts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969307,"status":"passed","title":"should handle large number of conflicts"},{"ancestorTitles":["ConflictResolutionService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Edge Cases should handle rename without target resource","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969310,"status":"passed","title":"should handle rename without target resource"}],"endTime":1761338969313,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\conflictResolutionService.test.ts","startTime":1761338969161,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ResourceMappingService","Initialization"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969365,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["ResourceMappingService","Initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Initialization should initialize with default data directory when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969382,"status":"passed","title":"should initialize with default data directory when not provided"},{"ancestorTitles":["ResourceMappingService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Initialization should initialize empty mappings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969384,"status":"passed","title":"should initialize empty mappings"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should auto-map resources using UPN strategy","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761338969385,"status":"passed","title":"should auto-map resources using UPN strategy"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should auto-map resources using email strategy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969391,"status":"passed","title":"should auto-map resources using email strategy"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should auto-map resources using displayName strategy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969392,"status":"passed","title":"should auto-map resources using displayName strategy"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should auto-map resources using samAccountName strategy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969394,"status":"passed","title":"should auto-map resources using samAccountName strategy"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should use fuzzy matching when exact match fails","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969395,"status":"passed","title":"should use fuzzy matching when exact match fails"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should not map when fuzzy match confidence is below threshold","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969396,"status":"passed","title":"should not map when fuzzy match confidence is below threshold"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should detect one-to-many conflicts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969398,"status":"passed","title":"should detect one-to-many conflicts"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should handle empty source resources","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969399,"status":"passed","title":"should handle empty source resources"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should handle empty target resources","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969402,"status":"passed","title":"should handle empty target resources"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should create manual mapping","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761338969403,"status":"passed","title":"should create manual mapping"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should update mapping","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969404,"status":"passed","title":"should update mapping"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should delete mapping","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969405,"status":"passed","title":"should delete mapping"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should throw error when updating non-existent mapping","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969406,"status":"passed","title":"should throw error when updating non-existent mapping"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should throw error when deleting non-existent mapping","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969417,"status":"passed","title":"should throw error when deleting non-existent mapping"},{"ancestorTitles":["ResourceMappingService","Bulk Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Bulk Operations should bulk update mappings","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969418,"status":"passed","title":"should bulk update mappings"},{"ancestorTitles":["ResourceMappingService","CSV Import/Export"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService CSV Import/Export should import mappings from CSV","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1761338969419,"status":"passed","title":"should import mappings from CSV"},{"ancestorTitles":["ResourceMappingService","CSV Import/Export"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService CSV Import/Export should export mappings to CSV","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969422,"status":"passed","title":"should export mappings to CSV"},{"ancestorTitles":["ResourceMappingService","JSON Export"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService JSON Export should export mappings to JSON","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969423,"status":"passed","title":"should export mappings to JSON"},{"ancestorTitles":["ResourceMappingService","JSON Export"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService JSON Export should export all mappings when no wave specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969424,"status":"passed","title":"should export all mappings when no wave specified"},{"ancestorTitles":["ResourceMappingService","Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Validation should validate mappings successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969425,"status":"passed","title":"should validate mappings successfully"},{"ancestorTitles":["ResourceMappingService","Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Validation should detect unmapped resources as warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969427,"status":"passed","title":"should detect unmapped resources as warnings"},{"ancestorTitles":["ResourceMappingService","Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Validation should detect low confidence mappings as warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969428,"status":"passed","title":"should detect low confidence mappings as warnings"},{"ancestorTitles":["ResourceMappingService","Template Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Template Management should create mapping template","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969429,"status":"passed","title":"should create mapping template"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should get all mappings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969431,"status":"passed","title":"should get all mappings"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should filter mappings by wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969433,"status":"passed","title":"should filter mappings by wave"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should filter mappings by resource type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969436,"status":"passed","title":"should filter mappings by resource type"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should get mapping by ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969437,"status":"passed","title":"should get mapping by ID"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should return null for non-existent mapping ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969438,"status":"passed","title":"should return null for non-existent mapping ID"},{"ancestorTitles":["ResourceMappingService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Edge Cases should handle resources without mapping keys","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969439,"status":"passed","title":"should handle resources without mapping keys"},{"ancestorTitles":["ResourceMappingService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Edge Cases should handle large number of mappings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969440,"status":"passed","title":"should handle large number of mappings"},{"ancestorTitles":["ResourceMappingService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Edge Cases should handle special characters in names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969442,"status":"passed","title":"should handle special characters in names"},{"ancestorTitles":["ResourceMappingService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Edge Cases should detect type mismatch conflicts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969443,"status":"passed","title":"should detect type mismatch conflicts"}],"endTime":1761338969445,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\resourceMappingService.test.ts","startTime":1761338969320,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ProfileService","initialize"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService initialize should initialize the service and register IPC handlers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969494,"status":"passed","title":"should initialize the service and register IPC handlers"},{"ancestorTitles":["ProfileService","initialize"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService initialize should not re-initialize if already initialized","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969507,"status":"passed","title":"should not re-initialize if already initialized"},{"ancestorTitles":["ProfileService","getProfiles"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService getProfiles should return sorted profiles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969510,"status":"passed","title":"should return sorted profiles"},{"ancestorTitles":["ProfileService","getCurrentProfile"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService getCurrentProfile should return the active profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969519,"status":"passed","title":"should return the active profile"},{"ancestorTitles":["ProfileService","getCurrentProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService getCurrentProfile should return null if no active profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969522,"status":"passed","title":"should return null if no active profile"},{"ancestorTitles":["ProfileService","setCurrentProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService setCurrentProfile should set the active profile by ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969524,"status":"passed","title":"should set the active profile by ID"},{"ancestorTitles":["ProfileService","setCurrentProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService setCurrentProfile should set the active profile by company name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969526,"status":"passed","title":"should set the active profile by company name"},{"ancestorTitles":["ProfileService","setCurrentProfile"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService setCurrentProfile should return false for non-existent profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969528,"status":"passed","title":"should return false for non-existent profile"},{"ancestorTitles":["ProfileService","createProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService createProfile should create a new profile successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761338969531,"status":"passed","title":"should create a new profile successfully"},{"ancestorTitles":["ProfileService","createProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService createProfile should throw error for duplicate company name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969533,"status":"passed","title":"should throw error for duplicate company name"},{"ancestorTitles":["ProfileService","updateProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService updateProfile should update an existing profile","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969535,"status":"passed","title":"should update an existing profile"},{"ancestorTitles":["ProfileService","updateProfile"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService updateProfile should throw error for non-existent profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969537,"status":"passed","title":"should throw error for non-existent profile"},{"ancestorTitles":["ProfileService","deleteProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService deleteProfile should delete an existing profile","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969540,"status":"passed","title":"should delete an existing profile"},{"ancestorTitles":["ProfileService","deleteProfile"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService deleteProfile should return false for non-existent profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969542,"status":"passed","title":"should return false for non-existent profile"},{"ancestorTitles":["ProfileService","validateProfile"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService validateProfile should validate a correct profile","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969544,"status":"passed","title":"should validate a correct profile"},{"ancestorTitles":["ProfileService","validateProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService validateProfile should detect validation errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969545,"status":"passed","title":"should detect validation errors"},{"ancestorTitles":["ProfileService","getCompanyDataPath"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService getCompanyDataPath should return correct data path for Windows","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969547,"status":"passed","title":"should return correct data path for Windows"}],"endTime":1761338969550,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\ProfileService.test.ts","startTime":1761338969452,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PerformanceMonitoringService","Singleton Pattern"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Singleton Pattern should return the same instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969600,"status":"passed","title":"should return the same instance"},{"ancestorTitles":["PerformanceMonitoringService","Start/Stop Monitoring"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Start/Stop Monitoring should start monitoring","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969602,"status":"passed","title":"should start monitoring"},{"ancestorTitles":["PerformanceMonitoringService","Start/Stop Monitoring"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Start/Stop Monitoring should not start monitoring twice","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969603,"status":"passed","title":"should not start monitoring twice"},{"ancestorTitles":["PerformanceMonitoringService","Start/Stop Monitoring"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Start/Stop Monitoring should stop monitoring","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969604,"status":"passed","title":"should stop monitoring"},{"ancestorTitles":["PerformanceMonitoringService","Thresholds"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Thresholds should have default thresholds","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969605,"status":"passed","title":"should have default thresholds"},{"ancestorTitles":["PerformanceMonitoringService","Thresholds"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Thresholds should allow custom thresholds","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969606,"status":"passed","title":"should allow custom thresholds"},{"ancestorTitles":["PerformanceMonitoringService","Alerts"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Alerts should create alerts for performance issues","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969610,"status":"passed","title":"should create alerts for performance issues"},{"ancestorTitles":["PerformanceMonitoringService","Alerts"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Alerts should filter unacknowledged alerts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969612,"status":"passed","title":"should filter unacknowledged alerts"},{"ancestorTitles":["PerformanceMonitoringService","Alerts"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Alerts should clear alerts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969614,"status":"passed","title":"should clear alerts"},{"ancestorTitles":["PerformanceMonitoringService","Baselines"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baselines should create baseline","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969616,"status":"passed","title":"should create baseline"},{"ancestorTitles":["PerformanceMonitoringService","Baselines"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baselines should get all baselines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969617,"status":"passed","title":"should get all baselines"},{"ancestorTitles":["PerformanceMonitoringService","Baselines"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baselines should delete baseline","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969619,"status":"passed","title":"should delete baseline"},{"ancestorTitles":["PerformanceMonitoringService","Baseline Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baseline Comparison should compare to baseline","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969620,"status":"passed","title":"should compare to baseline"},{"ancestorTitles":["PerformanceMonitoringService","Baseline Comparison"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baseline Comparison should detect regressions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969621,"status":"passed","title":"should detect regressions"},{"ancestorTitles":["PerformanceMonitoringService","Baseline Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baseline Comparison should return null for invalid baseline","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969623,"status":"passed","title":"should return null for invalid baseline"},{"ancestorTitles":["PerformanceMonitoringService","Historical Data"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Historical Data should collect historical data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969624,"status":"passed","title":"should collect historical data"},{"ancestorTitles":["PerformanceMonitoringService","Historical Data"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Historical Data should filter historical data by date range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969625,"status":"passed","title":"should filter historical data by date range"},{"ancestorTitles":["PerformanceMonitoringService","Export"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Export should export as JSON","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969626,"status":"passed","title":"should export as JSON"},{"ancestorTitles":["PerformanceMonitoringService","Export"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Export should export as CSV","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969628,"status":"passed","title":"should export as CSV"},{"ancestorTitles":["PerformanceMonitoringService","Export"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Export should download JSON report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969630,"status":"passed","title":"should download JSON report"},{"ancestorTitles":["PerformanceMonitoringService","Export"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Export should download CSV report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969633,"status":"passed","title":"should download CSV report"},{"ancestorTitles":["PerformanceMonitoringService","Clear Data"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Clear Data should clear all data","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969635,"status":"passed","title":"should clear all data"}],"endTime":1761338969638,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\performanceMonitoringService.test.ts","startTime":1761338969556,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CacheService","Basic Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should set and get values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969716,"status":"passed","title":"should set and get values"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should return undefined for missing keys","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969718,"status":"passed","title":"should return undefined for missing keys"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should check key existence","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969720,"status":"passed","title":"should check key existence"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should delete keys","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969721,"status":"passed","title":"should delete keys"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should clear all entries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969722,"status":"passed","title":"should clear all entries"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should get all keys","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969727,"status":"passed","title":"should get all keys"},{"ancestorTitles":["CacheService","TTL Expiration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService TTL Expiration should expire entries after TTL","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969729,"status":"passed","title":"should expire entries after TTL"},{"ancestorTitles":["CacheService","TTL Expiration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService TTL Expiration should not expire entries without TTL","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969730,"status":"passed","title":"should not expire entries without TTL"},{"ancestorTitles":["CacheService","TTL Expiration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService TTL Expiration should use default TTL","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969731,"status":"passed","title":"should use default TTL"},{"ancestorTitles":["CacheService","LRU Eviction"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService LRU Eviction should evict least recently used entry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969733,"status":"passed","title":"should evict least recently used entry"},{"ancestorTitles":["CacheService","LFU Eviction"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService LFU Eviction should evict least frequently used entry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969735,"status":"passed","title":"should evict least frequently used entry"},{"ancestorTitles":["CacheService","FIFO Eviction"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService FIFO Eviction should evict first in entry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969737,"status":"passed","title":"should evict first in entry"},{"ancestorTitles":["CacheService","Batch Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Batch Operations should get multiple keys","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969739,"status":"passed","title":"should get multiple keys"},{"ancestorTitles":["CacheService","Batch Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Batch Operations should set multiple entries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969741,"status":"passed","title":"should set multiple entries"},{"ancestorTitles":["CacheService","Get or Set"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Get or Set should return cached value if exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969742,"status":"passed","title":"should return cached value if exists"},{"ancestorTitles":["CacheService","Get or Set"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Get or Set should fetch and cache if not exists","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969743,"status":"passed","title":"should fetch and cache if not exists"},{"ancestorTitles":["CacheService","Get or Set"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Get or Set should support TTL with getOrSet","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969745,"status":"passed","title":"should support TTL with getOrSet"},{"ancestorTitles":["CacheService","Cache Warming"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Cache Warming should warm cache with data","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969746,"status":"passed","title":"should warm cache with data"},{"ancestorTitles":["CacheService","Cache Warming"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Cache Warming should skip existing keys during warming","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969747,"status":"passed","title":"should skip existing keys during warming"},{"ancestorTitles":["CacheService","Statistics"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Statistics should track hits and misses","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969748,"status":"passed","title":"should track hits and misses"},{"ancestorTitles":["CacheService","Statistics"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Statistics should track evictions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969750,"status":"passed","title":"should track evictions"},{"ancestorTitles":["CacheService","Statistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Statistics should track memory usage","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969752,"status":"passed","title":"should track memory usage"},{"ancestorTitles":["CacheService","Statistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Statistics should reset statistics","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969753,"status":"passed","title":"should reset statistics"},{"ancestorTitles":["CacheService","Automatic Cleanup"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Automatic Cleanup should automatically clean expired entries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969754,"status":"passed","title":"should automatically clean expired entries"},{"ancestorTitles":["CacheService","Namespaces"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Namespaces should isolate different namespaces","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969756,"status":"passed","title":"should isolate different namespaces"},{"ancestorTitles":["CacheService","Complex Data Types"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Complex Data Types should cache objects","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969757,"status":"passed","title":"should cache objects"},{"ancestorTitles":["CacheService","Complex Data Types"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Complex Data Types should cache arrays","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969758,"status":"passed","title":"should cache arrays"},{"ancestorTitles":["CacheService","Complex Data Types"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Complex Data Types should cache nested structures","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969759,"status":"passed","title":"should cache nested structures"}],"endTime":1761338969761,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\cacheService.test.ts","startTime":1761338969642,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ThemeService","Singleton Pattern"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Singleton Pattern should return the same instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969822,"status":"passed","title":"should return the same instance"},{"ancestorTitles":["ThemeService","Theme Presets"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Presets should have all required presets","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761338969827,"status":"passed","title":"should have all required presets"},{"ancestorTitles":["ThemeService","Theme Presets"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Presets should filter presets by mode","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969828,"status":"passed","title":"should filter presets by mode"},{"ancestorTitles":["ThemeService","Theme Presets"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Presets should get specific preset by ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969829,"status":"passed","title":"should get specific preset by ID"},{"ancestorTitles":["ThemeService","Theme Presets"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Presets should return undefined for invalid preset ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969830,"status":"passed","title":"should return undefined for invalid preset ID"},{"ancestorTitles":["ThemeService","Apply Preset"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Apply Preset should apply dark theme preset","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969831,"status":"passed","title":"should apply dark theme preset"},{"ancestorTitles":["ThemeService","Apply Preset"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Apply Preset should apply light theme preset","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969836,"status":"passed","title":"should apply light theme preset"},{"ancestorTitles":["ThemeService","Apply Preset"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Apply Preset should throw error for invalid preset","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969837,"status":"passed","title":"should throw error for invalid preset"},{"ancestorTitles":["ThemeService","Apply Preset"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Apply Preset should apply preset with transition","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969844,"status":"passed","title":"should apply preset with transition"},{"ancestorTitles":["ThemeService","Custom Themes"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Custom Themes should create custom preset from current colors","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969846,"status":"passed","title":"should create custom preset from current colors"},{"ancestorTitles":["ThemeService","Custom Themes"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Custom Themes should throw error when creating preset without custom colors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969848,"status":"passed","title":"should throw error when creating preset without custom colors"},{"ancestorTitles":["ThemeService","Theme Export/Import"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Export/Import should export current theme","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761338969849,"status":"passed","title":"should export current theme"},{"ancestorTitles":["ThemeService","Theme Export/Import"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Export/Import should import theme","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969851,"status":"passed","title":"should import theme"},{"ancestorTitles":["ThemeService","Theme Export/Import"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Export/Import should throw error for unsupported version","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969853,"status":"passed","title":"should throw error for unsupported version"},{"ancestorTitles":["ThemeService","Contrast Ratio"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Contrast Ratio should calculate contrast ratio","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969854,"status":"passed","title":"should calculate contrast ratio"},{"ancestorTitles":["ThemeService","Contrast Ratio"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Contrast Ratio should calculate same color contrast","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969855,"status":"passed","title":"should calculate same color contrast"},{"ancestorTitles":["ThemeService","Contrast Ratio"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Contrast Ratio should calculate intermediate contrast","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969856,"status":"passed","title":"should calculate intermediate contrast"},{"ancestorTitles":["ThemeService","Accessibility Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Accessibility Validation should validate accessible theme","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969857,"status":"passed","title":"should validate accessible theme"},{"ancestorTitles":["ThemeService","Accessibility Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Accessibility Validation should detect low contrast warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969858,"status":"passed","title":"should detect low contrast warnings"},{"ancestorTitles":["ThemeService","Auto-Generated Palette"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Auto-Generated Palette should generate dark palette","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969861,"status":"passed","title":"should generate dark palette"},{"ancestorTitles":["ThemeService","Auto-Generated Palette"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Auto-Generated Palette should generate light palette","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761338969862,"status":"passed","title":"should generate light palette"},{"ancestorTitles":["ThemeService","Reset to Default"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Reset to Default should reset dark theme to default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969863,"status":"passed","title":"should reset dark theme to default"},{"ancestorTitles":["ThemeService","Reset to Default"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Reset to Default should reset light theme to default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969866,"status":"passed","title":"should reset light theme to default"},{"ancestorTitles":["ThemeService","Get Current Colors"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Get Current Colors should return current custom colors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969868,"status":"passed","title":"should return current custom colors"},{"ancestorTitles":["ThemeService","Get Current Colors"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Get Current Colors should return undefined when no custom colors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761338969870,"status":"passed","title":"should return undefined when no custom colors"},{"ancestorTitles":["ThemeService","Cleanup"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Cleanup should clean up resources on destroy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761338969871,"status":"passed","title":"should clean up resources on destroy"}],"endTime":1761338969873,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\themeService.test.ts","startTime":1761338969767,"status":"passed","summary":""}],"wasInterrupted":false}
