{
  "config": {
    "configFile": "d:\\Scripts\\UserMandA\\guiv2\\playwright.config.ts",
    "rootDir": "d:/Scripts/UserMandA/guiv2/tests/e2e",
    "forbidOnly": false,
    "fullyParallel": false,
    "globalSetup": null,
    "globalTeardown": null,
    "globalTimeout": 0,
    "grep": {},
    "grepInvert": null,
    "maxFailures": 0,
    "metadata": {
      "actualWorkers": 1
    },
    "preserveOutput": "always",
    "reporter": [
      [
        "html",
        {
          "outputFolder": "playwright-report",
          "open": "never"
        }
      ],
      [
        "json",
        {
          "outputFile": "test-results/test-results.json"
        }
      ],
      [
        "list",
        null
      ]
    ],
    "reportSlowTests": {
      "max": 5,
      "threshold": 300000
    },
    "quiet": false,
    "projects": [
      {
        "outputDir": "d:/Scripts/UserMandA/guiv2/test-results",
        "repeatEach": 1,
        "retries": 2,
        "metadata": {
          "actualWorkers": 1
        },
        "id": "electron",
        "name": "electron",
        "testDir": "d:/Scripts/UserMandA/guiv2/tests/e2e",
        "testIgnore": [],
        "testMatch": [
          "**/*.@(spec|test).?(c|m)[jt]s?(x)"
        ],
        "timeout": 60000
      }
    ],
    "shard": null,
    "updateSnapshots": "missing",
    "updateSourceMethod": "patch",
    "version": "1.56.1",
    "workers": 1,
    "webServer": null
  },
  "suites": [
    {
      "title": "accessibility.spec.ts",
      "file": "accessibility.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Keyboard Shortcuts & Accessibility",
          "file": "accessibility.spec.ts",
          "line": 26,
          "column": 6,
          "specs": [
            {
              "title": "should open command palette with Ctrl+K",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 0,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts",
                            "column": 21,
                            "line": 23
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  21 |\n  22 | test.afterAll(async () => {\n> 23 |   await electronApp.close();\n     |                     ^\n  24 | });\n  25 |\n  26 | test.describe('Keyboard Shortcuts & Accessibility', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts:23:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts",
                            "column": 17,
                            "line": 9
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=36080\u001b[22m\n\u001b[2m  - [pid=36080][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=36080] <kill>\u001b[22m\n\u001b[2m  - [pid=36080] <will force kill>\u001b[22m\n\u001b[2m  - [pid=36080] taskkill stderr: ERROR: The process \"36080\" not found.\u001b[22m\n\u001b[2m  - [pid=36080] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=36080] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=36080] finished temporary directories cleanup\u001b[22m\n\n\n   7 |\n   8 | test.beforeAll(async () => {\n>  9 |   electronApp = await electron.launch({\n     |                 ^\n  10 |     args: [path.join(__dirname, '../../.webpack/main')],\n  11 |     env: {\n  12 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts:9:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.048Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\accessibility-Keyboard-Sho-5813c-command-palette-with-Ctrl-K-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 1,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts",
                            "column": 21,
                            "line": 23
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  21 |\n  22 | test.afterAll(async () => {\n> 23 |   await electronApp.close();\n     |                     ^\n  24 | });\n  25 |\n  26 | test.describe('Keyboard Shortcuts & Accessibility', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts:23:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts",
                            "column": 17,
                            "line": 9
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=53812\u001b[22m\n\u001b[2m  - [pid=53812][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=53812] <kill>\u001b[22m\n\u001b[2m  - [pid=53812] <will force kill>\u001b[22m\n\u001b[2m  - [pid=53812] taskkill stderr: ERROR: The process \"53812\" not found.\u001b[22m\n\u001b[2m  - [pid=53812] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=53812] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=53812] finished temporary directories cleanup\u001b[22m\n\n\n   7 |\n   8 | test.beforeAll(async () => {\n>  9 |   electronApp = await electron.launch({\n     |                 ^\n  10 |     args: [path.join(__dirname, '../../.webpack/main')],\n  11 |     env: {\n  12 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts:9:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:14.400Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\accessibility-Keyboard-Sho-5813c-command-palette-with-Ctrl-K-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 2,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts",
                            "column": 21,
                            "line": 23
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  21 |\n  22 | test.afterAll(async () => {\n> 23 |   await electronApp.close();\n     |                     ^\n  24 | });\n  25 |\n  26 | test.describe('Keyboard Shortcuts & Accessibility', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts:23:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts",
                            "column": 17,
                            "line": 9
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=33900\u001b[22m\n\u001b[2m  - [pid=33900][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=33900] <kill>\u001b[22m\n\u001b[2m  - [pid=33900] <will force kill>\u001b[22m\n\u001b[2m  - [pid=33900] taskkill stderr: ERROR: The process \"33900\" not found.\u001b[22m\n\u001b[2m  - [pid=33900] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=33900] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=33900] finished temporary directories cleanup\u001b[22m\n\n\n   7 |\n   8 | test.beforeAll(async () => {\n>  9 |   electronApp = await electron.launch({\n     |                 ^\n  10 |     args: [path.join(__dirname, '../../.webpack/main')],\n  11 |     env: {\n  12 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\accessibility.spec.ts:9:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:15.705Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\accessibility-Keyboard-Sho-5813c-command-palette-with-Ctrl-K-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "ddd864604af8a6a0198f-79ca18a5b18fe9692521",
              "file": "accessibility.spec.ts",
              "line": 27,
              "column": 7
            },
            {
              "title": "should close tab with Ctrl+W",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.356Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-918a0c5bb7bdb66791c8",
              "file": "accessibility.spec.ts",
              "line": 44,
              "column": 7
            },
            {
              "title": "should open new tab with Ctrl+T",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-08f5713fa136964ca873",
              "file": "accessibility.spec.ts",
              "line": 58,
              "column": 7
            },
            {
              "title": "should save with Ctrl+S",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-e1763313386cae73693a",
              "file": "accessibility.spec.ts",
              "line": 71,
              "column": 7
            },
            {
              "title": "should focus search with Ctrl+F",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-4fcd644c71291908999a",
              "file": "accessibility.spec.ts",
              "line": 93,
              "column": 7
            },
            {
              "title": "should trigger print with Ctrl+P",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-16d50238f7d099e4f967",
              "file": "accessibility.spec.ts",
              "line": 107,
              "column": 7
            },
            {
              "title": "should navigate with Tab key",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-a0987d25e007dfc590ad",
              "file": "accessibility.spec.ts",
              "line": 125,
              "column": 7
            },
            {
              "title": "should navigate backwards with Shift+Tab",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-7a48cc87da4287a07e3e",
              "file": "accessibility.spec.ts",
              "line": 151,
              "column": 7
            },
            {
              "title": "should have ARIA labels on interactive elements",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-b7189882924ba0f668ba",
              "file": "accessibility.spec.ts",
              "line": 169,
              "column": 7
            },
            {
              "title": "should have visible focus indicators",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-01e9bc14d22bf5daa6c5",
              "file": "accessibility.spec.ts",
              "line": 221,
              "column": 7
            },
            {
              "title": "should support keyboard navigation in data grids",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-9003bf3793fc33b23886",
              "file": "accessibility.spec.ts",
              "line": 255,
              "column": 7
            },
            {
              "title": "should announce loading states to screen readers",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.779Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-459c43aefd192eb93e41",
              "file": "accessibility.spec.ts",
              "line": 278,
              "column": 7
            },
            {
              "title": "should have proper heading hierarchy",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.780Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-3e1a4df1d5d529bfd433",
              "file": "accessibility.spec.ts",
              "line": 294,
              "column": 7
            },
            {
              "title": "should have sufficient color contrast",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.780Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-8eb53d5500021192fb0e",
              "file": "accessibility.spec.ts",
              "line": 319,
              "column": 7
            },
            {
              "title": "should support keyboard-only form submission",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.780Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-fc427181de72cd3c97a7",
              "file": "accessibility.spec.ts",
              "line": 349,
              "column": 7
            },
            {
              "title": "should have skip navigation links",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.780Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-2de7582d80a4f3578e5b",
              "file": "accessibility.spec.ts",
              "line": 372,
              "column": 7
            },
            {
              "title": "should prevent focus trap in modals",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.780Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-dd50b5f7bdc416110471",
              "file": "accessibility.spec.ts",
              "line": 393,
              "column": 7
            },
            {
              "title": "should have proper alt text on images",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:13.780Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:15.051Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:16.357Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "ddd864604af8a6a0198f-f73fffb9068062fb4d50",
              "file": "accessibility.spec.ts",
              "line": 428,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "admin-views.spec.ts",
      "file": "admin-views.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Admin Views",
          "file": "admin-views.spec.ts",
          "line": 30,
          "column": 6,
          "specs": [
            {
              "title": "should manage users in User Management view",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 3,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Admin Views', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=43724\u001b[22m\n\u001b[2m  - [pid=43724][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=43724] <kill>\u001b[22m\n\u001b[2m  - [pid=43724] <will force kill>\u001b[22m\n\u001b[2m  - [pid=43724] taskkill stderr: ERROR: The process \"43724\" not found.\u001b[22m\n\u001b[2m  - [pid=43724] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=43724] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=43724] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:16.913Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\admin-views-Admin-Views-sh-ab653-ers-in-User-Management-view-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 4,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Admin Views', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=10656\u001b[22m\n\u001b[2m  - [pid=10656][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=10656] <kill>\u001b[22m\n\u001b[2m  - [pid=10656] <will force kill>\u001b[22m\n\u001b[2m  - [pid=10656] taskkill stderr: ERROR: The process \"10656\" not found.\u001b[22m\n\u001b[2m  - [pid=10656] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=10656] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=10656] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:18.135Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\admin-views-Admin-Views-sh-ab653-ers-in-User-Management-view-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 5,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Admin Views', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=57672\u001b[22m\n\u001b[2m  - [pid=57672][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=57672] <kill>\u001b[22m\n\u001b[2m  - [pid=57672] <will force kill>\u001b[22m\n\u001b[2m  - [pid=57672] taskkill stderr: ERROR: The process \"57672\" not found.\u001b[22m\n\u001b[2m  - [pid=57672] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=57672] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=57672] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\admin-views.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:19.272Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\admin-views-Admin-Views-sh-ab653-ers-in-User-Management-view-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "13fe49d8768a4b724223-981368c4bbcbf5a44266",
              "file": "admin-views.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "should manage roles in Role Management view",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:17.559Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:18.759Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:19.794Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "13fe49d8768a4b724223-71f40ee0d525d928116a",
              "file": "admin-views.spec.ts",
              "line": 87,
              "column": 7
            },
            {
              "title": "should display Permissions view with matrix",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:17.560Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:18.759Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:19.794Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "13fe49d8768a4b724223-5117bbc3231db69cdc2a",
              "file": "admin-views.spec.ts",
              "line": 137,
              "column": 7
            },
            {
              "title": "should display Audit Log with entries and filters",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:17.560Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:18.759Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:19.794Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "13fe49d8768a4b724223-ddd62fc4f910de714fae",
              "file": "admin-views.spec.ts",
              "line": 181,
              "column": 7
            },
            {
              "title": "should manage System Configuration settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:17.560Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:18.759Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:19.794Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "13fe49d8768a4b724223-37dbb2494f8807ebf2ae",
              "file": "admin-views.spec.ts",
              "line": 240,
              "column": 7
            },
            {
              "title": "should perform Backup and Restore operations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:17.560Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:18.759Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:19.794Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "13fe49d8768a4b724223-10424de2ef1a5959be27",
              "file": "admin-views.spec.ts",
              "line": 277,
              "column": 7
            },
            {
              "title": "should display License Activation information",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:17.560Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:18.759Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:19.794Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "13fe49d8768a4b724223-e9132a190234a54d89b9",
              "file": "admin-views.spec.ts",
              "line": 339,
              "column": 7
            },
            {
              "title": "should display About view with app details",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:17.560Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:18.759Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:19.794Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "13fe49d8768a4b724223-5078578f981f3c11257f",
              "file": "admin-views.spec.ts",
              "line": 389,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "analytics-reports.spec.ts",
      "file": "analytics-reports.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Analytics & Reports Views",
          "file": "analytics-reports.spec.ts",
          "line": 30,
          "column": 6,
          "specs": [
            {
              "title": "should load Executive Dashboard with KPIs",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 6,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Analytics & Reports Views', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=61080\u001b[22m\n\u001b[2m  - [pid=61080][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=61080] <kill>\u001b[22m\n\u001b[2m  - [pid=61080] <will force kill>\u001b[22m\n\u001b[2m  - [pid=61080] taskkill stderr: ERROR: The process \"61080\" not found.\u001b[22m\n\u001b[2m  - [pid=61080] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=61080] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=61080] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.315Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\analytics-reports-Analytic-82c60-ecutive-Dashboard-with-KPIs-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 7,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Analytics & Reports Views', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=1224\u001b[22m\n\u001b[2m  - [pid=1224][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=1224] <kill>\u001b[22m\n\u001b[2m  - [pid=1224] <will force kill>\u001b[22m\n\u001b[2m  - [pid=1224] taskkill stderr: ERROR: The process \"1224\" not found.\u001b[22m\n\u001b[2m  - [pid=1224] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=1224] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=1224] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.383Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\analytics-reports-Analytic-82c60-ecutive-Dashboard-with-KPIs-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 8,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Analytics & Reports Views', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=58152\u001b[22m\n\u001b[2m  - [pid=58152][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=58152] <kill>\u001b[22m\n\u001b[2m  - [pid=58152] <will force kill>\u001b[22m\n\u001b[2m  - [pid=58152] taskkill stderr: ERROR: The process \"58152\" not found.\u001b[22m\n\u001b[2m  - [pid=58152] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=58152] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=58152] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\analytics-reports.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.446Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\analytics-reports-Analytic-82c60-ecutive-Dashboard-with-KPIs-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "7858a64fc51639e8f7cf-ed36257518d2eabfa09b",
              "file": "analytics-reports.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "should display User Analytics with charts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.849Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.938Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "7858a64fc51639e8f7cf-70bb248e42bccfc024f7",
              "file": "analytics-reports.spec.ts",
              "line": 58,
              "column": 7
            },
            {
              "title": "should display Migration Report with statistics",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.849Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.938Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "7858a64fc51639e8f7cf-d71c5260f27426bd5598",
              "file": "analytics-reports.spec.ts",
              "line": 88,
              "column": 7
            },
            {
              "title": "should display Cost Analysis with breakdown",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.849Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.938Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "7858a64fc51639e8f7cf-4dfcaabbbdba1168427c",
              "file": "analytics-reports.spec.ts",
              "line": 116,
              "column": 7
            },
            {
              "title": "should work with Custom Report Builder",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.849Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.938Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "7858a64fc51639e8f7cf-f936a20dafb7c098040c",
              "file": "analytics-reports.spec.ts",
              "line": 143,
              "column": 7
            },
            {
              "title": "should manage Scheduled Reports",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.849Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.938Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "7858a64fc51639e8f7cf-edd3514af8c0ca50605f",
              "file": "analytics-reports.spec.ts",
              "line": 187,
              "column": 7
            },
            {
              "title": "should work with Report Templates",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.849Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.938Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "7858a64fc51639e8f7cf-0ca4c59ec450f6aa7b20",
              "file": "analytics-reports.spec.ts",
              "line": 223,
              "column": 7
            },
            {
              "title": "should display Data Visualization with advanced charts",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.849Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.938Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "7858a64fc51639e8f7cf-19366c77216156f3d30c",
              "file": "analytics-reports.spec.ts",
              "line": 259,
              "column": 7
            },
            {
              "title": "should display Trend Analysis",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.849Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.938Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "7858a64fc51639e8f7cf-bad9820e2029603e8268",
              "file": "analytics-reports.spec.ts",
              "line": 300,
              "column": 7
            },
            {
              "title": "should display Benchmarking view",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:20.849Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:21.938Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:22.961Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "7858a64fc51639e8f7cf-b1a0f9222afcea43f28c",
              "file": "analytics-reports.spec.ts",
              "line": 328,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "automated-health-check.spec.ts",
      "file": "automated-health-check.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Automated Health Check - All Views",
          "file": "automated-health-check.spec.ts",
          "line": 122,
          "column": 6,
          "specs": [
            {
              "title": "Health Check: Dashboard/Overview",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 9,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:23.531Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-439a7-th-Check-Dashboard-Overview-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 10,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:24.140Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-439a7-th-Check-Dashboard-Overview-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 11,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:24.750Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-439a7-th-Check-Dashboard-Overview-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-222a7d2fb0228f528923",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Domain Discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 12,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:25.422Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-7daa2-alth-Check-Domain-Discovery-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 13,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:26.023Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-7daa2-alth-Check-Domain-Discovery-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 14,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:26.646Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-7daa2-alth-Check-Domain-Discovery-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-623b20fc7e819522b07a",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Azure Discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 15,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:27.325Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-a745c-ealth-Check-Azure-Discovery-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 16,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:28.014Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-a745c-ealth-Check-Azure-Discovery-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 17,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:28.690Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-a745c-ealth-Check-Azure-Discovery-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-46eac49272730e6fac55",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Exchange Discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 18,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:29.375Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-90883-th-Check-Exchange-Discovery-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 19,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:29.978Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-90883-th-Check-Exchange-Discovery-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 20,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:30.632Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-90883-th-Check-Exchange-Discovery-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-7209156d6a66ad423300",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: SharePoint Discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 21,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:31.248Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-58f2a--Check-SharePoint-Discovery-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 22,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:31.899Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-58f2a--Check-SharePoint-Discovery-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 23,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:32.572Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-58f2a--Check-SharePoint-Discovery-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-30fd4873e3d13f25b5de",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Teams Discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 24,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:33.252Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-d7a02-ealth-Check-Teams-Discovery-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 25,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:33.980Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-d7a02-ealth-Check-Teams-Discovery-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 26,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:34.647Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-d7a02-ealth-Check-Teams-Discovery-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-4158d8545bca72cf22f5",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: File System Discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 27,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:35.337Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-9f241-Check-File-System-Discovery-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 28,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:36.042Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-9f241-Check-File-System-Discovery-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 29,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:36.737Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-9f241-Check-File-System-Discovery-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-3e9d04d002fab161a413",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Network Devices",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 30,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:37.435Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-8c861-ealth-Check-Network-Devices-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 31,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:38.206Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-8c861-ealth-Check-Network-Devices-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 32,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:38.866Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-8c861-ealth-Check-Network-Devices-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-dcddcf2a9ba4a04ba4c9",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Servers Discovery",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 33,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:39.564Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-e8ccb-lth-Check-Servers-Discovery-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 34,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 2,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:40.323Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-e8ccb-lth-Check-Servers-Discovery-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 35,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:40.999Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-e8ccb-lth-Check-Servers-Discovery-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-fcbd4f7577d27c88e193",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Users View",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 36,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:41.647Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-441f2-ews-Health-Check-Users-View-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 37,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:42.302Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-441f2-ews-Health-Check-Users-View-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 38,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:43.046Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-441f2-ews-Health-Check-Users-View-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-5870ac7b043781d133ac",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Groups View",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 39,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:43.737Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-61bf5-ws-Health-Check-Groups-View-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 40,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:44.397Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-61bf5-ws-Health-Check-Groups-View-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 41,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:45.068Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-61bf5-ws-Health-Check-Groups-View-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-34edebb80d997abda69a",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Computers View",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 42,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:45.770Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-20734-Health-Check-Computers-View-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 43,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:46.496Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-20734-Health-Check-Computers-View-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 44,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:47.153Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-20734-Health-Check-Computers-View-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-2e5585d90be2f849937c",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Migration Planning",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 45,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:47.897Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-7f9df-th-Check-Migration-Planning-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 46,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:48.517Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-7f9df-th-Check-Migration-Planning-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 47,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:49.120Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-7f9df-th-Check-Migration-Planning-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-43204920061df68acd47",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Migration Mapping",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 48,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:49.838Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-2ba19-lth-Check-Migration-Mapping-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 49,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:50.518Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-2ba19-lth-Check-Migration-Mapping-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 50,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:51.238Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-2ba19-lth-Check-Migration-Mapping-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-2267e7d4f44c137f569a",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Migration Validation",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 51,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:51.981Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-93254--Check-Migration-Validation-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 52,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:52.655Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-93254--Check-Migration-Validation-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 53,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:53.374Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-93254--Check-Migration-Validation-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-5d310e4c4d6c9a543a8a",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Migration Execution",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 54,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:54.017Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-922bc-h-Check-Migration-Execution-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 55,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:54.691Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-922bc-h-Check-Migration-Execution-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 56,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:55.364Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-922bc-h-Check-Migration-Execution-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-3e6a05d63a8f4c936cc2",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Executive Dashboard",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 57,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:56.017Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-ed302-h-Check-Executive-Dashboard-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 58,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:56.717Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-ed302-h-Check-Executive-Dashboard-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 59,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:57.422Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-ed302-h-Check-Executive-Dashboard-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-5cd698a8eb089c47baff",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Migration Report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 60,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:50:58.111Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-fc948-alth-Check-Migration-Report-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 61,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:50:58.774Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-fc948-alth-Check-Migration-Report-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 62,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:50:59.503Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-fc948-alth-Check-Migration-Report-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-958cc61c676a2572be72",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: User Analytics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 63,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:00.078Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-712cf-Health-Check-User-Analytics-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 64,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:00.662Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-712cf-Health-Check-User-Analytics-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 65,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:01.257Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-712cf-Health-Check-User-Analytics-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-2838b69d2096f213f510",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Group Analytics",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 66,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:01.834Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-4595a-ealth-Check-Group-Analytics-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 67,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:02.405Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-4595a-ealth-Check-Group-Analytics-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 68,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:02.977Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-4595a-ealth-Check-Group-Analytics-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-20abe874bd20afa3e821",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Network Topology",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 69,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:03.552Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-c21cd-alth-Check-Network-Topology-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 70,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:04.140Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-c21cd-alth-Check-Network-Topology-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 71,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:04.752Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-c21cd-alth-Check-Network-Topology-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-179ddcf2ce5aca098c87",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Storage Analysis",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 72,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:05.340Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-a4ba1-alth-Check-Storage-Analysis-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 73,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:05.987Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-a4ba1-alth-Check-Storage-Analysis-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 74,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:06.621Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-a4ba1-alth-Check-Storage-Analysis-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-77b0d5d2a43444c37f1c",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Capacity Planning",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 75,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:07.362Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-3eec1-lth-Check-Capacity-Planning-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 76,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:08.033Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-3eec1-lth-Check-Capacity-Planning-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 77,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:08.733Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-3eec1-lth-Check-Capacity-Planning-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-7b1e0f696b758d5179fa",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: API Management",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 78,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:09.406Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-1a4b0-Health-Check-API-Management-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 79,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:10.061Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-1a4b0-Health-Check-API-Management-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 80,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:10.721Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-1a4b0-Health-Check-API-Management-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-2ad7e719e2f875d0dcb8",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Bulk Operations",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 81,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:11.368Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-d9f1d-ealth-Check-Bulk-Operations-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 82,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:11.955Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-d9f1d-ealth-Check-Bulk-Operations-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 83,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:12.523Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-d9f1d-ealth-Check-Bulk-Operations-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-721f37a16a7f7548cf24",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Custom Fields",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 84,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:13.165Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-eedb5--Health-Check-Custom-Fields-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 85,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:13.823Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-eedb5--Health-Check-Custom-Fields-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 86,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:14.507Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-eedb5--Health-Check-Custom-Fields-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-c031288f65a415656eb6",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Policy Management",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 87,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:15.195Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-6ed97-lth-Check-Policy-Management-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 88,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 5,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:15.857Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-6ed97-lth-Check-Policy-Management-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 89,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:16.539Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-6ed97-lth-Check-Policy-Management-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-dee37644acb919b7c915",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Reports",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 90,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:17.215Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-bd948--Views-Health-Check-Reports-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 91,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:17.882Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-bd948--Views-Health-Check-Reports-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 92,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:18.553Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-bd948--Views-Health-Check-Reports-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-d6496fd86361f4b83444",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Compliance Report",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 93,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:19.266Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-9b147-lth-Check-Compliance-Report-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 94,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:19.983Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-9b147-lth-Check-Compliance-Report-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 95,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:20.668Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-9b147-lth-Check-Compliance-Report-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-a672dce6ca2df4bac6dd",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Security Audit",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 96,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:21.320Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-67235-Health-Check-Security-Audit-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 97,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:22.020Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-67235-Health-Check-Security-Audit-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 98,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:22.732Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-67235-Health-Check-Security-Audit-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-e1020e01a51d37080f36",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            },
            {
              "title": "Health Check: Settings",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 99,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:23.437Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-f6767-Views-Health-Check-Settings-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 100,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:24.121Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-f6767-Views-Health-Check-Settings-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 101,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 1,
                      "error": {
                        "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝",
                        "stack": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                      },
                      "errors": [
                        {
                          "message": "Error: browserType.launch: Executable doesn't exist at C:\\Users\\lukia\\AppData\\Local\\ms-playwright\\chromium_headless_shell-1194\\chrome-win\\headless_shell.exe\n╔═════════════════════════════════════════════════════════════════════════╗\n║ Looks like Playwright Test or Playwright was just installed or updated. ║\n║ Please run the following command to download new browsers:              ║\n║                                                                         ║\n║     npx playwright install                                              ║\n║                                                                         ║\n║ <3 Playwright Team                                                      ║\n╚═════════════════════════════════════════════════════════════════════════╝"
                        }
                      ],
                      "stdout": [
                        {
                          "text": "\n✅ Health report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.json\n"
                        },
                        {
                          "text": "✅ HTML report saved to: d:\\Scripts\\UserMandA\\guiv2\\test-results\\health-check\\health-report.html\n"
                        },
                        {
                          "text": "\n========================================\n"
                        },
                        {
                          "text": "🏥 AUTOMATED HEALTH CHECK SUMMARY\n"
                        },
                        {
                          "text": "========================================\n\n"
                        },
                        {
                          "text": "Total Views Tested: 31\n"
                        },
                        {
                          "text": "✅ Passed: 0\n"
                        },
                        {
                          "text": "❌ Failed: 0\n"
                        },
                        {
                          "text": "🔴 Total Errors: 0\n"
                        },
                        {
                          "text": "⚠️  Total Warnings: 0\n"
                        },
                        {
                          "text": "📊 Health Score: NaN%\n\n"
                        },
                        {
                          "text": "🔧 Auto-Fix Suggestions: 0\n\n"
                        },
                        {
                          "text": "\n========================================\n\n"
                        }
                      ],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:24.765Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\automated-health-check-Aut-f6767-Views-Health-Check-Settings-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "50dc4493efd6c97dfce5-485cb15e265cb6e0abc4",
              "file": "automated-health-check.spec.ts",
              "line": 142,
              "column": 9
            }
          ]
        }
      ]
    },
    {
      "title": "discovery-journey.spec.ts",
      "file": "discovery-journey.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Discovery Journey - All Modules",
          "file": "discovery-journey.spec.ts",
          "line": 285,
          "column": 6,
          "specs": [
            {
              "title": "should navigate to Discovery Hub",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 102,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\discovery-journey.spec.ts",
                            "column": 21,
                            "line": 41
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  39 | test.afterAll(async () => {\n  40 |   cleanupTestFiles(downloadedFiles);\n> 41 |   await electronApp.close();\n     |                     ^\n  42 | });\n  43 |\n  44 | /**\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\discovery-journey.spec.ts:41:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts",
                            "column": 15,
                            "line": 16
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=38264\u001b[22m\n\u001b[2m  - [pid=38264][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=38264] <kill>\u001b[22m\n\u001b[2m  - [pid=38264] <will force kill>\u001b[22m\n\u001b[2m  - [pid=38264] taskkill stderr: ERROR: The process \"38264\" not found.\u001b[22m\n\u001b[2m  - [pid=38264] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=38264] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=38264] finished temporary directories cleanup\u001b[22m\n\n\n   at ..\\fixtures\\electron-helpers.ts:16\n\n  14 |  */\n  15 | export async function launchElectronApp(): Promise<{ app: ElectronApplication; page: Page }> {\n> 16 |   const app = await electron.launch({\n     |               ^\n  17 |     args: [path.join(__dirname, '../../.webpack/main')],\n  18 |     env: {\n  19 |       ...process.env,\n    at launchElectronApp (d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts:16:15)\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\discovery-journey.spec.ts:34:25"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:25.469Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\discovery-journey-Discover-851bd-d-navigate-to-Discovery-Hub-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 103,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\discovery-journey.spec.ts",
                            "column": 21,
                            "line": 41
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  39 | test.afterAll(async () => {\n  40 |   cleanupTestFiles(downloadedFiles);\n> 41 |   await electronApp.close();\n     |                     ^\n  42 | });\n  43 |\n  44 | /**\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\discovery-journey.spec.ts:41:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts",
                            "column": 15,
                            "line": 16
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=51396\u001b[22m\n\u001b[2m  - [pid=51396][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=51396] <kill>\u001b[22m\n\u001b[2m  - [pid=51396] <will force kill>\u001b[22m\n\u001b[2m  - [pid=51396] taskkill stderr: ERROR: The process \"51396\" not found.\u001b[22m\n\u001b[2m  - [pid=51396] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=51396] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=51396] finished temporary directories cleanup\u001b[22m\n\n\n   at ..\\fixtures\\electron-helpers.ts:16\n\n  14 |  */\n  15 | export async function launchElectronApp(): Promise<{ app: ElectronApplication; page: Page }> {\n> 16 |   const app = await electron.launch({\n     |               ^\n  17 |     args: [path.join(__dirname, '../../.webpack/main')],\n  18 |     env: {\n  19 |       ...process.env,\n    at launchElectronApp (d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts:16:15)\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\discovery-journey.spec.ts:34:25"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:26.641Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\discovery-journey-Discover-851bd-d-navigate-to-Discovery-Hub-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 104,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\discovery-journey.spec.ts",
                            "column": 21,
                            "line": 41
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  39 | test.afterAll(async () => {\n  40 |   cleanupTestFiles(downloadedFiles);\n> 41 |   await electronApp.close();\n     |                     ^\n  42 | });\n  43 |\n  44 | /**\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\discovery-journey.spec.ts:41:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts",
                            "column": 15,
                            "line": 16
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=6128\u001b[22m\n\u001b[2m  - [pid=6128][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=6128] <kill>\u001b[22m\n\u001b[2m  - [pid=6128] <will force kill>\u001b[22m\n\u001b[2m  - [pid=6128] taskkill stderr: ERROR: The process \"6128\" not found.\u001b[22m\n\u001b[2m  - [pid=6128] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=6128] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=6128] finished temporary directories cleanup\u001b[22m\n\n\n   at ..\\fixtures\\electron-helpers.ts:16\n\n  14 |  */\n  15 | export async function launchElectronApp(): Promise<{ app: ElectronApplication; page: Page }> {\n> 16 |   const app = await electron.launch({\n     |               ^\n  17 |     args: [path.join(__dirname, '../../.webpack/main')],\n  18 |     env: {\n  19 |       ...process.env,\n    at launchElectronApp (d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts:16:15)\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\discovery-journey.spec.ts:34:25"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:27.873Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\discovery-journey-Discover-851bd-d-navigate-to-Discovery-Hub-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "027b7b4e43842b74986b-175801f28e4404d5837b",
              "file": "discovery-journey.spec.ts",
              "line": 286,
              "column": 7
            },
            {
              "title": "should test Active Directory Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-ea184ea639f9abec48f7",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Azure Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-ce790cb8c3d71d24a63a",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Office 365 Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-53f6d1e84dc3bc41cd3e",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Exchange Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-bfd48e2ea947bf1cb240",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test SharePoint Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-dca4fb45b6acebba0f3e",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Teams Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-74de6728542e8bf8dba4",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test OneDrive Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-148f7f9c16019cd1613f",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Domain Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-abddaff775d161486b66",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Network Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-da1a4194507181d1188a",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Application Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-0ee61887ac5e56349ced",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test File System Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-2f8cbe00892b8b98f587",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Licensing Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-f287db520c390b8534a5",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Environment Detection",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-5a346d95afaaaa1a9432",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Conditional Access Policies Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.431Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-def6f8303f520c4591fa",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Data Loss Prevention Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-0dc2784abc309b9bab65",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Identity Governance Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-332d3375c7f6fce55666",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Intune Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-d814e1c6658e687476e8",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Power Platform Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-c4c96a162d7fbc702a33",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Security Infrastructure Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-03f0757167aa57c9b05c",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test SQL Server Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-5bbb2c477c8a3eb31d01",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test VMware Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-ca9e6d68c7d918f44bdc",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Hyper-V Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-08a566e3daee85fc4e18",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test AWS Cloud Infrastructure Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-5cfd91d6633240a3fd5e",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Google Workspace Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-2e262f5677ceb7d02820",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Web Server Configuration Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-8b3948139c3700664e78",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should test Infrastructure Discovery Hub",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-9bf2aa2c069b80b31f86",
              "file": "discovery-journey.spec.ts",
              "line": 313,
              "column": 9
            },
            {
              "title": "should run multiple discoveries sequentially",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-e1568b7b562995a2ac99",
              "file": "discovery-journey.spec.ts",
              "line": 547,
              "column": 7
            },
            {
              "title": "should handle discovery errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-a1ed3e12d3dbe8b1281b",
              "file": "discovery-journey.spec.ts",
              "line": 591,
              "column": 7
            },
            {
              "title": "should display discovery statistics",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-1d1b62f621b98531bde7",
              "file": "discovery-journey.spec.ts",
              "line": 638,
              "column": 7
            },
            {
              "title": "should support discovery result filtering",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-86ff27ca0d7281c86425",
              "file": "discovery-journey.spec.ts",
              "line": 678,
              "column": 7
            },
            {
              "title": "should support bulk selection in discovery results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-4365356937bec46b0269",
              "file": "discovery-journey.spec.ts",
              "line": 726,
              "column": 7
            },
            {
              "title": "should refresh discovery results",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-28fa624b2876bb66a74d",
              "file": "discovery-journey.spec.ts",
              "line": 772,
              "column": 7
            },
            {
              "title": "should cancel running discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-2adff4b325d05dd16622",
              "file": "discovery-journey.spec.ts",
              "line": 814,
              "column": 7
            }
          ]
        },
        {
          "title": "Discovery Journey - Integration Tests",
          "file": "discovery-journey.spec.ts",
          "line": 879,
          "column": 6,
          "specs": [
            {
              "title": "should run discovery and export results to CSV",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-c7e516db2971b38c18ce",
              "file": "discovery-journey.spec.ts",
              "line": 880,
              "column": 7
            },
            {
              "title": "should navigate between multiple discovery modules",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-3a92669a785eeb3d2731",
              "file": "discovery-journey.spec.ts",
              "line": 934,
              "column": 7
            },
            {
              "title": "should maintain discovery state across navigation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:26.102Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:27.284Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:28.432Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "027b7b4e43842b74986b-afc3dd3868d394150576",
              "file": "discovery-journey.spec.ts",
              "line": 963,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "error-handling.spec.ts",
      "file": "error-handling.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Error Handling & Error Boundaries",
          "file": "error-handling.spec.ts",
          "line": 26,
          "column": 6,
          "specs": [
            {
              "title": "should display error boundary on component crash",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 105,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts",
                            "column": 21,
                            "line": 23
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  21 |\n  22 | test.afterAll(async () => {\n> 23 |   await electronApp.close();\n     |                     ^\n  24 | });\n  25 |\n  26 | test.describe('Error Handling & Error Boundaries', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts:23:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts",
                            "column": 17,
                            "line": 9
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=58804\u001b[22m\n\u001b[2m  - [pid=58804][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=58804] <kill>\u001b[22m\n\u001b[2m  - [pid=58804] <will force kill>\u001b[22m\n\u001b[2m  - [pid=58804] taskkill stderr: ERROR: The process \"58804\" not found.\u001b[22m\n\u001b[2m  - [pid=58804] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=58804] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=58804] finished temporary directories cleanup\u001b[22m\n\n\n   7 |\n   8 | test.beforeAll(async () => {\n>  9 |   electronApp = await electron.launch({\n     |                 ^\n  10 |     args: [path.join(__dirname, '../../.webpack/main')],\n  11 |     env: {\n  12 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts:9:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:28.998Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\error-handling-Error-Handl-9efd2-boundary-on-component-crash-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 106,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts",
                            "column": 21,
                            "line": 23
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  21 |\n  22 | test.afterAll(async () => {\n> 23 |   await electronApp.close();\n     |                     ^\n  24 | });\n  25 |\n  26 | test.describe('Error Handling & Error Boundaries', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts:23:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts",
                            "column": 17,
                            "line": 9
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=18352\u001b[22m\n\u001b[2m  - [pid=18352][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=18352] <kill>\u001b[22m\n\u001b[2m  - [pid=18352] <will force kill>\u001b[22m\n\u001b[2m  - [pid=18352] taskkill stderr: ERROR: The process \"18352\" not found.\u001b[22m\n\u001b[2m  - [pid=18352] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=18352] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=18352] finished temporary directories cleanup\u001b[22m\n\n\n   7 |\n   8 | test.beforeAll(async () => {\n>  9 |   electronApp = await electron.launch({\n     |                 ^\n  10 |     args: [path.join(__dirname, '../../.webpack/main')],\n  11 |     env: {\n  12 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts:9:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.167Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\error-handling-Error-Handl-9efd2-boundary-on-component-crash-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 107,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts",
                            "column": 21,
                            "line": 23
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  21 |\n  22 | test.afterAll(async () => {\n> 23 |   await electronApp.close();\n     |                     ^\n  24 | });\n  25 |\n  26 | test.describe('Error Handling & Error Boundaries', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts:23:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts",
                            "column": 17,
                            "line": 9
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=7744\u001b[22m\n\u001b[2m  - [pid=7744][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=7744] <kill>\u001b[22m\n\u001b[2m  - [pid=7744] <will force kill>\u001b[22m\n\u001b[2m  - [pid=7744] taskkill stderr: ERROR: The process \"7744\" not found.\u001b[22m\n\u001b[2m  - [pid=7744] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=7744] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=7744] finished temporary directories cleanup\u001b[22m\n\n\n   7 |\n   8 | test.beforeAll(async () => {\n>  9 |   electronApp = await electron.launch({\n     |                 ^\n  10 |     args: [path.join(__dirname, '../../.webpack/main')],\n  11 |     env: {\n  12 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\error-handling.spec.ts:9:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.403Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\error-handling-Error-Handl-9efd2-boundary-on-component-crash-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-8853132f5966cc161aa2",
              "file": "error-handling.spec.ts",
              "line": 27,
              "column": 7
            },
            {
              "title": "should handle IPC communication errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.773Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-953726b5d0b89b95f628",
              "file": "error-handling.spec.ts",
              "line": 71,
              "column": 7
            },
            {
              "title": "should retry failed operations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.773Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-f5238d48ba81e739ca59",
              "file": "error-handling.spec.ts",
              "line": 113,
              "column": 7
            },
            {
              "title": "should handle network timeout errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.773Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-d34fbc8452e02830a692",
              "file": "error-handling.spec.ts",
              "line": 162,
              "column": 7
            },
            {
              "title": "should handle validation errors in forms",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.773Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-d5fc5e7df4c39acce626",
              "file": "error-handling.spec.ts",
              "line": 195,
              "column": 7
            },
            {
              "title": "should handle file upload errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.773Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-8478324a632c1e94e17f",
              "file": "error-handling.spec.ts",
              "line": 222,
              "column": 7
            },
            {
              "title": "should handle permission errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.773Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-91068806a3ba3e9579aa",
              "file": "error-handling.spec.ts",
              "line": 248,
              "column": 7
            },
            {
              "title": "should display user-friendly error messages",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.774Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-10122060a54c04b1033e",
              "file": "error-handling.spec.ts",
              "line": 273,
              "column": 7
            },
            {
              "title": "should log errors to console for debugging",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.774Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-1460145d125460744b67",
              "file": "error-handling.spec.ts",
              "line": 306,
              "column": 7
            },
            {
              "title": "should prevent cascading errors",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.774Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-acd7b97dccb1f33a3ce5",
              "file": "error-handling.spec.ts",
              "line": 325,
              "column": 7
            },
            {
              "title": "should provide error reporting mechanism",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:29.563Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:30.774Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:31.980Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1a72721d9ac5c938e1fe-c19aabe922a19a2619e5",
              "file": "error-handling.spec.ts",
              "line": 347,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "migration-journey.spec.ts",
      "file": "migration-journey.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Migration Journey - Complete Workflow",
          "file": "migration-journey.spec.ts",
          "line": 49,
          "column": 6,
          "specs": [
            {
              "title": "should create migration project",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 108,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\migration-journey.spec.ts",
                            "column": 21,
                            "line": 46
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  44 | test.afterAll(async () => {\n  45 |   cleanupTestFiles(downloadedFiles);\n> 46 |   await electronApp.close();\n     |                     ^\n  47 | });\n  48 |\n  49 | test.describe('Migration Journey - Complete Workflow', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\migration-journey.spec.ts:46:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts",
                            "column": 15,
                            "line": 16
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=53628\u001b[22m\n\u001b[2m  - [pid=53628][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=53628] <kill>\u001b[22m\n\u001b[2m  - [pid=53628] <will force kill>\u001b[22m\n\u001b[2m  - [pid=53628] taskkill stderr: ERROR: The process \"53628\" not found.\u001b[22m\n\u001b[2m  - [pid=53628] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=53628] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=53628] finished temporary directories cleanup\u001b[22m\n\n\n   at ..\\fixtures\\electron-helpers.ts:16\n\n  14 |  */\n  15 | export async function launchElectronApp(): Promise<{ app: ElectronApplication; page: Page }> {\n> 16 |   const app = await electron.launch({\n     |               ^\n  17 |     args: [path.join(__dirname, '../../.webpack/main')],\n  18 |     env: {\n  19 |       ...process.env,\n    at launchElectronApp (d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts:16:15)\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\migration-journey.spec.ts:39:25"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:32.584Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\migration-journey-Migratio-4747b-ld-create-migration-project-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 109,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\migration-journey.spec.ts",
                            "column": 21,
                            "line": 46
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  44 | test.afterAll(async () => {\n  45 |   cleanupTestFiles(downloadedFiles);\n> 46 |   await electronApp.close();\n     |                     ^\n  47 | });\n  48 |\n  49 | test.describe('Migration Journey - Complete Workflow', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\migration-journey.spec.ts:46:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts",
                            "column": 15,
                            "line": 16
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=59516\u001b[22m\n\u001b[2m  - [pid=59516][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=59516] <kill>\u001b[22m\n\u001b[2m  - [pid=59516] <will force kill>\u001b[22m\n\u001b[2m  - [pid=59516] taskkill stderr: ERROR: The process \"59516\" not found.\u001b[22m\n\u001b[2m  - [pid=59516] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=59516] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=59516] finished temporary directories cleanup\u001b[22m\n\n\n   at ..\\fixtures\\electron-helpers.ts:16\n\n  14 |  */\n  15 | export async function launchElectronApp(): Promise<{ app: ElectronApplication; page: Page }> {\n> 16 |   const app = await electron.launch({\n     |               ^\n  17 |     args: [path.join(__dirname, '../../.webpack/main')],\n  18 |     env: {\n  19 |       ...process.env,\n    at launchElectronApp (d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts:16:15)\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\migration-journey.spec.ts:39:25"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:33.761Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\migration-journey-Migratio-4747b-ld-create-migration-project-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 110,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\migration-journey.spec.ts",
                            "column": 21,
                            "line": 46
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  44 | test.afterAll(async () => {\n  45 |   cleanupTestFiles(downloadedFiles);\n> 46 |   await electronApp.close();\n     |                     ^\n  47 | });\n  48 |\n  49 | test.describe('Migration Journey - Complete Workflow', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\migration-journey.spec.ts:46:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts",
                            "column": 15,
                            "line": 16
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=7584\u001b[22m\n\u001b[2m  - [pid=7584][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=7584] <kill>\u001b[22m\n\u001b[2m  - [pid=7584] <will force kill>\u001b[22m\n\u001b[2m  - [pid=7584] taskkill stderr: ERROR: The process \"7584\" not found.\u001b[22m\n\u001b[2m  - [pid=7584] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=7584] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=7584] finished temporary directories cleanup\u001b[22m\n\n\n   at ..\\fixtures\\electron-helpers.ts:16\n\n  14 |  */\n  15 | export async function launchElectronApp(): Promise<{ app: ElectronApplication; page: Page }> {\n> 16 |   const app = await electron.launch({\n     |               ^\n  17 |     args: [path.join(__dirname, '../../.webpack/main')],\n  18 |     env: {\n  19 |       ...process.env,\n    at launchElectronApp (d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts:16:15)\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\migration-journey.spec.ts:39:25"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:34.909Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\migration-journey-Migratio-4747b-ld-create-migration-project-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d6ed01c3560e892ef506-c0c2b00640ed80310614",
              "file": "migration-journey.spec.ts",
              "line": 50,
              "column": 7
            },
            {
              "title": "should create migration wave",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:33.166Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:34.343Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:35.528Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d6ed01c3560e892ef506-b778bb21998cbb9fd69d",
              "file": "migration-journey.spec.ts",
              "line": 105,
              "column": 7
            },
            {
              "title": "should assign users to migration wave",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:33.166Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:34.343Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:35.528Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d6ed01c3560e892ef506-a28224e948d7fbeb85bf",
              "file": "migration-journey.spec.ts",
              "line": 181,
              "column": 7
            },
            {
              "title": "should map resources source to target",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:33.166Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:34.343Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:35.528Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d6ed01c3560e892ef506-cfacaa516291f81bb25c",
              "file": "migration-journey.spec.ts",
              "line": 251,
              "column": 7
            },
            {
              "title": "should run validation checks",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:33.166Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:34.343Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:35.528Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d6ed01c3560e892ef506-1a19a6dca5392ba84422",
              "file": "migration-journey.spec.ts",
              "line": 369,
              "column": 7
            },
            {
              "title": "should execute migration with progress tracking (dry run)",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:33.167Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:34.343Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:35.528Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d6ed01c3560e892ef506-81bf4ea544f23be265a9",
              "file": "migration-journey.spec.ts",
              "line": 509,
              "column": 7
            },
            {
              "title": "should pause and resume migration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:33.167Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:34.343Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:35.528Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d6ed01c3560e892ef506-3786932b844b22c3ecb1",
              "file": "migration-journey.spec.ts",
              "line": 636,
              "column": 7
            },
            {
              "title": "should handle migration completion",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:33.167Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:34.343Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:35.528Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d6ed01c3560e892ef506-b9128089246147f0745c",
              "file": "migration-journey.spec.ts",
              "line": 686,
              "column": 7
            },
            {
              "title": "should export migration mappings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:33.167Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:34.343Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:35.528Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d6ed01c3560e892ef506-00273cbf1d6a063e78e2",
              "file": "migration-journey.spec.ts",
              "line": 735,
              "column": 7
            },
            {
              "title": "should display validation errors gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:33.167Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:34.343Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:35.528Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d6ed01c3560e892ef506-e4df0860ce930ae4f00f",
              "file": "migration-journey.spec.ts",
              "line": 788,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "navigation.spec.ts",
      "file": "navigation.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Navigation & Routing",
          "file": "navigation.spec.ts",
          "line": 26,
          "column": 6,
          "specs": [
            {
              "title": "should navigate to Overview",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 111,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts",
                            "column": 21,
                            "line": 23
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  21 |\n  22 | test.afterAll(async () => {\n> 23 |   await electronApp.close();\n     |                     ^\n  24 | });\n  25 |\n  26 | test.describe('Navigation & Routing', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts:23:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts",
                            "column": 17,
                            "line": 9
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=51428\u001b[22m\n\u001b[2m  - [pid=51428][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=51428] <kill>\u001b[22m\n\u001b[2m  - [pid=51428] <will force kill>\u001b[22m\n\u001b[2m  - [pid=51428] taskkill stderr: ERROR: The process \"51428\" not found.\u001b[22m\n\u001b[2m  - [pid=51428] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=51428] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=51428] finished temporary directories cleanup\u001b[22m\n\n\n   7 |\n   8 | test.beforeAll(async () => {\n>  9 |   electronApp = await electron.launch({\n     |                 ^\n  10 |     args: [path.join(__dirname, '../../.webpack/main')],\n  11 |     env: {\n  12 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts:9:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.082Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\navigation-Navigation-Routing-should-navigate-to-Overview-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 112,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts",
                            "column": 21,
                            "line": 23
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  21 |\n  22 | test.afterAll(async () => {\n> 23 |   await electronApp.close();\n     |                     ^\n  24 | });\n  25 |\n  26 | test.describe('Navigation & Routing', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts:23:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts",
                            "column": 17,
                            "line": 9
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=51496\u001b[22m\n\u001b[2m  - [pid=51496][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=51496] <kill>\u001b[22m\n\u001b[2m  - [pid=51496] <will force kill>\u001b[22m\n\u001b[2m  - [pid=51496] taskkill stderr: ERROR: The process \"51496\" not found.\u001b[22m\n\u001b[2m  - [pid=51496] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=51496] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=51496] finished temporary directories cleanup\u001b[22m\n\n\n   7 |\n   8 | test.beforeAll(async () => {\n>  9 |   electronApp = await electron.launch({\n     |                 ^\n  10 |     args: [path.join(__dirname, '../../.webpack/main')],\n  11 |     env: {\n  12 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts:9:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.148Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\navigation-Navigation-Routing-should-navigate-to-Overview-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 113,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts",
                            "column": 21,
                            "line": 23
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  21 |\n  22 | test.afterAll(async () => {\n> 23 |   await electronApp.close();\n     |                     ^\n  24 | });\n  25 |\n  26 | test.describe('Navigation & Routing', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts:23:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts",
                            "column": 17,
                            "line": 9
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=26332\u001b[22m\n\u001b[2m  - [pid=26332][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=26332] <kill>\u001b[22m\n\u001b[2m  - [pid=26332] <will force kill>\u001b[22m\n\u001b[2m  - [pid=26332] taskkill stderr: ERROR: The process \"26332\" not found.\u001b[22m\n\u001b[2m  - [pid=26332] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=26332] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=26332] finished temporary directories cleanup\u001b[22m\n\n\n   7 |\n   8 | test.beforeAll(async () => {\n>  9 |   electronApp = await electron.launch({\n     |                 ^\n  10 |     args: [path.join(__dirname, '../../.webpack/main')],\n  11 |     env: {\n  12 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\navigation.spec.ts:9:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.234Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\navigation-Navigation-Routing-should-navigate-to-Overview-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "5d2868f7d23420c27cca-c4e589efdcd3635e3cfd",
              "file": "navigation.spec.ts",
              "line": 39,
              "column": 9
            },
            {
              "title": "should navigate to Users",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.643Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.871Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-a557af8eda3ba46980cc",
              "file": "navigation.spec.ts",
              "line": 39,
              "column": 9
            },
            {
              "title": "should navigate to Groups",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.643Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.871Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-8df793d8365fe9f4cc97",
              "file": "navigation.spec.ts",
              "line": 39,
              "column": 9
            },
            {
              "title": "should navigate to Discovery",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.643Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.871Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-874f75c9eb2006689788",
              "file": "navigation.spec.ts",
              "line": 39,
              "column": 9
            },
            {
              "title": "should navigate to Infrastructure",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.643Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.871Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-e387b822299d3760c1d2",
              "file": "navigation.spec.ts",
              "line": 39,
              "column": 9
            },
            {
              "title": "should navigate to Migration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.643Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.871Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-c66031755386fe5d8858",
              "file": "navigation.spec.ts",
              "line": 39,
              "column": 9
            },
            {
              "title": "should navigate to Reports",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.643Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.871Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-bfd98b00f7b1b75c1667",
              "file": "navigation.spec.ts",
              "line": 39,
              "column": 9
            },
            {
              "title": "should navigate to Settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.643Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.871Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-629a2823c5cc4b1e604e",
              "file": "navigation.spec.ts",
              "line": 39,
              "column": 9
            },
            {
              "title": "should handle browser back/forward navigation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-848a7f969e72902c98da",
              "file": "navigation.spec.ts",
              "line": 63,
              "column": 7
            },
            {
              "title": "should maintain active nav state on page refresh",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-24727280236cfd85bfb4",
              "file": "navigation.spec.ts",
              "line": 92,
              "column": 7
            },
            {
              "title": "should navigate using sidebar links",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-ca3ffcb2aa33e401c8d8",
              "file": "navigation.spec.ts",
              "line": 106,
              "column": 7
            },
            {
              "title": "should display breadcrumbs for nested routes",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-1ffaf8e7035eefc751a9",
              "file": "navigation.spec.ts",
              "line": 119,
              "column": 7
            },
            {
              "title": "should lazy load views on first navigation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-83e356bd0f009c8ca3e9",
              "file": "navigation.spec.ts",
              "line": 136,
              "column": 7
            },
            {
              "title": "should handle invalid routes gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-66b68dae98f339553fe1",
              "file": "navigation.spec.ts",
              "line": 157,
              "column": 7
            },
            {
              "title": "should persist scroll position on navigation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-2bfd791dfc471f556386",
              "file": "navigation.spec.ts",
              "line": 175,
              "column": 7
            },
            {
              "title": "should show loading state during route transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-dcdfb7c1a59b2ab3e347",
              "file": "navigation.spec.ts",
              "line": 201,
              "column": 7
            },
            {
              "title": "should support deep linking to specific views",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-5a1fd51872f105887e0c",
              "file": "navigation.spec.ts",
              "line": 212,
              "column": 7
            },
            {
              "title": "should collapse/expand sidebar on mobile viewport",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-5ccd66a8b8cf3a18274a",
              "file": "navigation.spec.ts",
              "line": 230,
              "column": 7
            },
            {
              "title": "should highlight current route in navigation menu",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:36.644Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:37.660Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:38.872Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "5d2868f7d23420c27cca-878f35ac0522aab21a20",
              "file": "navigation.spec.ts",
              "line": 254,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "performance.spec.ts",
      "file": "performance.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Performance Tests",
          "file": "performance.spec.ts",
          "line": 39,
          "column": 6,
          "specs": [
            {
              "title": "should load application within performance threshold",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 114,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts",
                            "column": 21,
                            "line": 36
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  34 |\n  35 | test.afterAll(async () => {\n> 36 |   await electronApp.close();\n     |                     ^\n  37 | });\n  38 |\n  39 | test.describe('Performance Tests', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts:36:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts",
                            "column": 17,
                            "line": 21
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=11476\u001b[22m\n\u001b[2m  - [pid=11476][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=11476] <kill>\u001b[22m\n\u001b[2m  - [pid=11476] <will force kill>\u001b[22m\n\u001b[2m  - [pid=11476] taskkill stderr: ERROR: The process \"11476\" not found.\u001b[22m\n\u001b[2m  - [pid=11476] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=11476] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=11476] finished temporary directories cleanup\u001b[22m\n\n\n  19 | test.beforeAll(async () => {\n  20 |   // Launch Electron app\n> 21 |   electronApp = await electron.launch({\n     |                 ^\n  22 |     args: [path.join(__dirname, '../../.webpack/main')],\n  23 |     env: {\n  24 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts:21:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:39.445Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\performance-Performance-Te-72d26-ithin-performance-threshold-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 115,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts",
                            "column": 21,
                            "line": 36
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  34 |\n  35 | test.afterAll(async () => {\n> 36 |   await electronApp.close();\n     |                     ^\n  37 | });\n  38 |\n  39 | test.describe('Performance Tests', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts:36:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts",
                            "column": 17,
                            "line": 21
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=48508\u001b[22m\n\u001b[2m  - [pid=48508][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=48508] <kill>\u001b[22m\n\u001b[2m  - [pid=48508] <will force kill>\u001b[22m\n\u001b[2m  - [pid=48508] taskkill stderr: ERROR: The process \"48508\" not found.\u001b[22m\n\u001b[2m  - [pid=48508] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=48508] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=48508] finished temporary directories cleanup\u001b[22m\n\n\n  19 | test.beforeAll(async () => {\n  20 |   // Launch Electron app\n> 21 |   electronApp = await electron.launch({\n     |                 ^\n  22 |     args: [path.join(__dirname, '../../.webpack/main')],\n  23 |     env: {\n  24 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts:21:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:40.779Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\performance-Performance-Te-72d26-ithin-performance-threshold-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 116,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts",
                            "column": 21,
                            "line": 36
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  34 |\n  35 | test.afterAll(async () => {\n> 36 |   await electronApp.close();\n     |                     ^\n  37 | });\n  38 |\n  39 | test.describe('Performance Tests', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts:36:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts",
                            "column": 17,
                            "line": 21
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=29380\u001b[22m\n\u001b[2m  - [pid=29380][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=29380] <kill>\u001b[22m\n\u001b[2m  - [pid=29380] <will force kill>\u001b[22m\n\u001b[2m  - [pid=29380] taskkill stderr: ERROR: The process \"29380\" not found.\u001b[22m\n\u001b[2m  - [pid=29380] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=29380] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=29380] finished temporary directories cleanup\u001b[22m\n\n\n  19 | test.beforeAll(async () => {\n  20 |   // Launch Electron app\n> 21 |   electronApp = await electron.launch({\n     |                 ^\n  22 |     args: [path.join(__dirname, '../../.webpack/main')],\n  23 |     env: {\n  24 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\performance.spec.ts:21:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.017Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\performance-Performance-Te-72d26-ithin-performance-threshold-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "b15d6361b2fc38288977-5a7eafc974ba74bf1ceb",
              "file": "performance.spec.ts",
              "line": 40,
              "column": 7
            },
            {
              "title": "should handle large dataset rendering efficiently",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:40.175Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:41.424Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "b15d6361b2fc38288977-33b16d61a69db0e78308",
              "file": "performance.spec.ts",
              "line": 75,
              "column": 7
            },
            {
              "title": "should switch between views quickly",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:40.175Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:41.424Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "b15d6361b2fc38288977-9d7c8c642ba307e86474",
              "file": "performance.spec.ts",
              "line": 160,
              "column": 7
            },
            {
              "title": "should not have memory leaks during navigation",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:40.175Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:41.424Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "b15d6361b2fc38288977-3996120c14423cd01ed5",
              "file": "performance.spec.ts",
              "line": 184,
              "column": 7
            },
            {
              "title": "should handle concurrent operations efficiently",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:40.175Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:41.424Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "b15d6361b2fc38288977-d062a284d91c5591500c",
              "file": "performance.spec.ts",
              "line": 236,
              "column": 7
            },
            {
              "title": "should optimize bundle loading",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:40.175Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:41.424Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "b15d6361b2fc38288977-f7f213c0b41ee84c1484",
              "file": "performance.spec.ts",
              "line": 269,
              "column": 7
            },
            {
              "title": "should maintain performance with multiple tabs open",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:40.175Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:41.424Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "b15d6361b2fc38288977-df5bc5390432d032a605",
              "file": "performance.spec.ts",
              "line": 319,
              "column": 7
            },
            {
              "title": "should handle rapid user interactions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:40.175Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:41.424Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "b15d6361b2fc38288977-a0b89627800cab8a0254",
              "file": "performance.spec.ts",
              "line": 358,
              "column": 7
            },
            {
              "title": "should perform well with animations and transitions",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:40.176Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:41.424Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "b15d6361b2fc38288977-62120dcfc26177460712",
              "file": "performance.spec.ts",
              "line": 398,
              "column": 7
            },
            {
              "title": "should generate performance report",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:40.176Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:41.425Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:42.629Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "b15d6361b2fc38288977-f1482648c44fe4162f75",
              "file": "performance.spec.ts",
              "line": 444,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "profiles.spec.ts",
      "file": "profiles.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Profile Management",
          "file": "profiles.spec.ts",
          "line": 31,
          "column": 6,
          "specs": [
            {
              "title": "should create a new profile",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 117,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts",
                            "column": 21,
                            "line": 28
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  26 |\n  27 | test.afterAll(async () => {\n> 28 |   await electronApp.close();\n     |                     ^\n  29 | });\n  30 |\n  31 | test.describe('Profile Management', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts:28:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts",
                            "column": 17,
                            "line": 11
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=54120\u001b[22m\n\u001b[2m  - [pid=54120][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=54120] <kill>\u001b[22m\n\u001b[2m  - [pid=54120] <will force kill>\u001b[22m\n\u001b[2m  - [pid=54120] taskkill stderr: ERROR: The process \"54120\" not found.\u001b[22m\n\u001b[2m  - [pid=54120] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=54120] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=54120] finished temporary directories cleanup\u001b[22m\n\n\n   9 | test.beforeAll(async () => {\n  10 |   // Launch Electron app\n> 11 |   electronApp = await electron.launch({\n     |                 ^\n  12 |     args: [path.join(__dirname, '../../.webpack/main')],\n  13 |     env: {\n  14 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts:11:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:43.270Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\profiles-Profile-Management-should-create-a-new-profile-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 118,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts",
                            "column": 21,
                            "line": 28
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  26 |\n  27 | test.afterAll(async () => {\n> 28 |   await electronApp.close();\n     |                     ^\n  29 | });\n  30 |\n  31 | test.describe('Profile Management', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts:28:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts",
                            "column": 17,
                            "line": 11
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=41248\u001b[22m\n\u001b[2m  - [pid=41248][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=41248] <kill>\u001b[22m\n\u001b[2m  - [pid=41248] <will force kill>\u001b[22m\n\u001b[2m  - [pid=41248] taskkill stderr: ERROR: The process \"41248\" not found.\u001b[22m\n\u001b[2m  - [pid=41248] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=41248] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=41248] finished temporary directories cleanup\u001b[22m\n\n\n   9 | test.beforeAll(async () => {\n  10 |   // Launch Electron app\n> 11 |   electronApp = await electron.launch({\n     |                 ^\n  12 |     args: [path.join(__dirname, '../../.webpack/main')],\n  13 |     env: {\n  14 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts:11:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:44.578Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\profiles-Profile-Management-should-create-a-new-profile-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 119,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts",
                            "column": 21,
                            "line": 28
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  26 |\n  27 | test.afterAll(async () => {\n> 28 |   await electronApp.close();\n     |                     ^\n  29 | });\n  30 |\n  31 | test.describe('Profile Management', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts:28:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts",
                            "column": 17,
                            "line": 11
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=61876\u001b[22m\n\u001b[2m  - [pid=61876][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=61876] <kill>\u001b[22m\n\u001b[2m  - [pid=61876] <will force kill>\u001b[22m\n\u001b[2m  - [pid=61876] taskkill stderr: ERROR: The process \"61876\" not found.\u001b[22m\n\u001b[2m  - [pid=61876] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=61876] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=61876] finished temporary directories cleanup\u001b[22m\n\n\n   9 | test.beforeAll(async () => {\n  10 |   // Launch Electron app\n> 11 |   electronApp = await electron.launch({\n     |                 ^\n  12 |     args: [path.join(__dirname, '../../.webpack/main')],\n  13 |     env: {\n  14 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\profiles.spec.ts:11:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:45.747Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\profiles-Profile-Management-should-create-a-new-profile-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "1fd97f6a16028267a2f6-5f8e0afe510fed575867",
              "file": "profiles.spec.ts",
              "line": 32,
              "column": 7
            },
            {
              "title": "should edit an existing profile",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:44.000Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:45.204Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:46.273Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fd97f6a16028267a2f6-bbb4cf5af28270be10e5",
              "file": "profiles.spec.ts",
              "line": 62,
              "column": 7
            },
            {
              "title": "should test profile connection",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:44.000Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:45.204Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:46.273Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fd97f6a16028267a2f6-75006eb69f6e8b96cc17",
              "file": "profiles.spec.ts",
              "line": 84,
              "column": 7
            },
            {
              "title": "should delete a profile",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:44.000Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:45.204Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:46.273Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fd97f6a16028267a2f6-fc517bf9756ceb48c5ae",
              "file": "profiles.spec.ts",
              "line": 103,
              "column": 7
            },
            {
              "title": "should handle invalid profile credentials",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:44.000Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:45.204Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:46.273Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fd97f6a16028267a2f6-b836a2cc17127b91008a",
              "file": "profiles.spec.ts",
              "line": 125,
              "column": 7
            },
            {
              "title": "should switch between profiles",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:44.000Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:45.204Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:46.273Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fd97f6a16028267a2f6-f1e26b8b36a8de57a782",
              "file": "profiles.spec.ts",
              "line": 140,
              "column": 7
            },
            {
              "title": "should export profile configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:44.000Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:45.204Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:46.273Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fd97f6a16028267a2f6-4c93fa740f320bf463f8",
              "file": "profiles.spec.ts",
              "line": 172,
              "column": 7
            },
            {
              "title": "should import profile configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:44.000Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:45.204Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:46.273Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "1fd97f6a16028267a2f6-9cd368d29787526942c5",
              "file": "profiles.spec.ts",
              "line": 198,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "settings.spec.ts",
      "file": "settings.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Settings Management",
          "file": "settings.spec.ts",
          "line": 30,
          "column": 6,
          "specs": [
            {
              "title": "should navigate to settings view",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 120,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Settings Management', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=35296\u001b[22m\n\u001b[2m  - [pid=35296][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=35296] <kill>\u001b[22m\n\u001b[2m  - [pid=35296] <will force kill>\u001b[22m\n\u001b[2m  - [pid=35296] taskkill stderr: ERROR: The process \"35296\" not found.\u001b[22m\n\u001b[2m  - [pid=35296] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=35296] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=35296] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:46.786Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\settings-Settings-Manageme-fecd3-d-navigate-to-settings-view-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 121,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Settings Management', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=48312\u001b[22m\n\u001b[2m  - [pid=48312][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=48312] <kill>\u001b[22m\n\u001b[2m  - [pid=48312] <will force kill>\u001b[22m\n\u001b[2m  - [pid=48312] taskkill stderr: ERROR: The process \"48312\" not found.\u001b[22m\n\u001b[2m  - [pid=48312] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=48312] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=48312] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:47.853Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\settings-Settings-Manageme-fecd3-d-navigate-to-settings-view-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 122,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Settings Management', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=60636\u001b[22m\n\u001b[2m  - [pid=60636][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=60636] <kill>\u001b[22m\n\u001b[2m  - [pid=60636] <will force kill>\u001b[22m\n\u001b[2m  - [pid=60636] taskkill stderr: ERROR: The process \"60636\" not found.\u001b[22m\n\u001b[2m  - [pid=60636] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=60636] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=60636] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\settings.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:48.882Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\settings-Settings-Manageme-fecd3-d-navigate-to-settings-view-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "d877ffdf71ec720167ae-3da76c727a409ad9e337",
              "file": "settings.spec.ts",
              "line": 37,
              "column": 7
            },
            {
              "title": "should change theme from light to dark",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.370Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-43c2f9398bc121e73474",
              "file": "settings.spec.ts",
              "line": 42,
              "column": 7
            },
            {
              "title": "should configure data refresh intervals",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.370Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-307a3ac9ef0601acc458",
              "file": "settings.spec.ts",
              "line": 71,
              "column": 7
            },
            {
              "title": "should configure PowerShell execution settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.370Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-03f4b36cf2fcae510597",
              "file": "settings.spec.ts",
              "line": 97,
              "column": 7
            },
            {
              "title": "should configure notification preferences",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.370Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-c855df9777f2333d13cc",
              "file": "settings.spec.ts",
              "line": 124,
              "column": 7
            },
            {
              "title": "should configure logging settings",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.370Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-5ae983de2bc460423ef0",
              "file": "settings.spec.ts",
              "line": 160,
              "column": 7
            },
            {
              "title": "should export settings configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.370Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-c9897924cbb928b71c19",
              "file": "settings.spec.ts",
              "line": 192,
              "column": 7
            },
            {
              "title": "should import settings configuration",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.370Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-41207912ffa7328df4c5",
              "file": "settings.spec.ts",
              "line": 208,
              "column": 7
            },
            {
              "title": "should reset settings to defaults",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.370Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-0102309f512f36d4e219",
              "file": "settings.spec.ts",
              "line": 224,
              "column": 7
            },
            {
              "title": "should validate settings before saving",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.371Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-2e74dcac13d78ad4fe1d",
              "file": "settings.spec.ts",
              "line": 248,
              "column": 7
            },
            {
              "title": "should show settings search functionality",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:47.321Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:48.371Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:49.412Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "d877ffdf71ec720167ae-4ab2afe339761fa58dd2",
              "file": "settings.spec.ts",
              "line": 275,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "tabs.spec.ts",
      "file": "tabs.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "Tab Management",
          "file": "tabs.spec.ts",
          "line": 30,
          "column": 6,
          "specs": [
            {
              "title": "should open new tabs when navigating",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 123,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Tab Management', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=58244\u001b[22m\n\u001b[2m  - [pid=58244][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=58244] <kill>\u001b[22m\n\u001b[2m  - [pid=58244] <will force kill>\u001b[22m\n\u001b[2m  - [pid=58244] taskkill stderr: ERROR: The process \"58244\" not found.\u001b[22m\n\u001b[2m  - [pid=58244] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=58244] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=58244] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:49.956Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\tabs-Tab-Management-should-open-new-tabs-when-navigating-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 124,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Tab Management', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=35116\u001b[22m\n\u001b[2m  - [pid=35116][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=35116] <kill>\u001b[22m\n\u001b[2m  - [pid=35116] <will force kill>\u001b[22m\n\u001b[2m  - [pid=35116] taskkill stderr: ERROR: The process \"35116\" not found.\u001b[22m\n\u001b[2m  - [pid=35116] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=35116] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=35116] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.042Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\tabs-Tab-Management-should-open-new-tabs-when-navigating-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 125,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('Tab Management', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=29440\u001b[22m\n\u001b[2m  - [pid=29440][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=29440] <kill>\u001b[22m\n\u001b[2m  - [pid=29440] <will force kill>\u001b[22m\n\u001b[2m  - [pid=29440] taskkill stderr: ERROR: The process \"29440\" not found.\u001b[22m\n\u001b[2m  - [pid=29440] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=29440] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=29440] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\tabs.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.295Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\tabs-Tab-Management-should-open-new-tabs-when-navigating-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "58bda22211c26f1298af-a1b4afec5d5c504aeeae",
              "file": "tabs.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "should switch between tabs",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-23bc3427a549a27851b6",
              "file": "tabs.spec.ts",
              "line": 50,
              "column": 7
            },
            {
              "title": "should close tabs",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-90b2167a8b408962d1a8",
              "file": "tabs.spec.ts",
              "line": 76,
              "column": 7
            },
            {
              "title": "should close tab with keyboard shortcut",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-9e6bfe081e35100e7a6b",
              "file": "tabs.spec.ts",
              "line": 101,
              "column": 7
            },
            {
              "title": "should open new tab with keyboard shortcut",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-9affcc47887958859b64",
              "file": "tabs.spec.ts",
              "line": 117,
              "column": 7
            },
            {
              "title": "should handle tab overflow with scrolling",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-2d8c08419ab12830a2df",
              "file": "tabs.spec.ts",
              "line": 130,
              "column": 7
            },
            {
              "title": "should reorder tabs with drag and drop",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-03d802722c20c065ce95",
              "file": "tabs.spec.ts",
              "line": 164,
              "column": 7
            },
            {
              "title": "should persist tab state on refresh",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-e5f349dacd8e98ba8687",
              "file": "tabs.spec.ts",
              "line": 198,
              "column": 7
            },
            {
              "title": "should show tab context menu",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-44dd628219c55f5eb641",
              "file": "tabs.spec.ts",
              "line": 227,
              "column": 7
            },
            {
              "title": "should pin and unpin tabs",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-0384b40f0408b771236f",
              "file": "tabs.spec.ts",
              "line": 256,
              "column": 7
            },
            {
              "title": "should navigate between tabs with keyboard",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:50.518Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:51.606Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:52.829Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "58bda22211c26f1298af-b4638b2e280b472148b5",
              "file": "tabs.spec.ts",
              "line": 295,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "user-discovery.spec.ts",
      "file": "user-discovery.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "User Discovery Journey",
          "file": "user-discovery.spec.ts",
          "line": 30,
          "column": 6,
          "specs": [
            {
              "title": "should complete full user discovery workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 126,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('User Discovery Journey', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=26216\u001b[22m\n\u001b[2m  - [pid=26216][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=26216] <kill>\u001b[22m\n\u001b[2m  - [pid=26216] <will force kill>\u001b[22m\n\u001b[2m  - [pid=26216] taskkill stderr: ERROR: The process \"26216\" not found.\u001b[22m\n\u001b[2m  - [pid=26216] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=26216] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=26216] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:53.404Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\user-discovery-User-Discov-d97f9-ull-user-discovery-workflow-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 127,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('User Discovery Journey', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=50416\u001b[22m\n\u001b[2m  - [pid=50416][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=50416] <kill>\u001b[22m\n\u001b[2m  - [pid=50416] <will force kill>\u001b[22m\n\u001b[2m  - [pid=50416] taskkill stderr: ERROR: The process \"50416\" not found.\u001b[22m\n\u001b[2m  - [pid=50416] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=50416] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=50416] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:54.683Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\user-discovery-User-Discov-d97f9-ull-user-discovery-workflow-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 128,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts",
                            "column": 21,
                            "line": 27
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  25 |\n  26 | test.afterAll(async () => {\n> 27 |   await electronApp.close();\n     |                     ^\n  28 | });\n  29 |\n  30 | test.describe('User Discovery Journey', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts:27:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts",
                            "column": 17,
                            "line": 10
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=51896\u001b[22m\n\u001b[2m  - [pid=51896][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=51896] <kill>\u001b[22m\n\u001b[2m  - [pid=51896] <will force kill>\u001b[22m\n\u001b[2m  - [pid=51896] taskkill stderr: ERROR: The process \"51896\" not found.\u001b[22m\n\u001b[2m  - [pid=51896] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=51896] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=51896] finished temporary directories cleanup\u001b[22m\n\n\n   8 | test.beforeAll(async () => {\n   9 |   // Launch Electron app\n> 10 |   electronApp = await electron.launch({\n     |                 ^\n  11 |     args: [path.join(__dirname, '../../.webpack/main')],\n  12 |     env: {\n  13 |       ...process.env,\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-discovery.spec.ts:10:17"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:55.891Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\user-discovery-User-Discov-d97f9-ull-user-discovery-workflow-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "4b958881455e1ab55761-d33f694d2d02286176f2",
              "file": "user-discovery.spec.ts",
              "line": 31,
              "column": 7
            },
            {
              "title": "should handle search with no results gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:54.066Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:55.327Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:56.446Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "4b958881455e1ab55761-5e8082dca63cbe6724d6",
              "file": "user-discovery.spec.ts",
              "line": 119,
              "column": 7
            },
            {
              "title": "should clear search filter",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:54.066Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:55.327Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:56.446Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "4b958881455e1ab55761-f9ef30324293e5a6902e",
              "file": "user-discovery.spec.ts",
              "line": 139,
              "column": 7
            },
            {
              "title": "should select multiple users",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:54.066Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:55.327Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:56.446Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "4b958881455e1ab55761-360874d4951f5437c516",
              "file": "user-discovery.spec.ts",
              "line": 158,
              "column": 7
            },
            {
              "title": "should disable delete button when no users selected",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:54.067Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:55.327Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:56.446Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "4b958881455e1ab55761-043cb8dfd20a21066b02",
              "file": "user-discovery.spec.ts",
              "line": 180,
              "column": 7
            }
          ]
        }
      ]
    },
    {
      "title": "user-journey.spec.ts",
      "file": "user-journey.spec.ts",
      "column": 0,
      "line": 0,
      "specs": [],
      "suites": [
        {
          "title": "User Discovery Journey",
          "file": "user-journey.spec.ts",
          "line": 45,
          "column": 6,
          "specs": [
            {
              "title": "should complete full user discovery workflow",
              "ok": false,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": 129,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-journey.spec.ts",
                            "column": 21,
                            "line": 42
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  40 |   cleanupTestFiles(downloadedFiles);\n  41 |\n> 42 |   await electronApp.close();\n     |                     ^\n  43 | });\n  44 |\n  45 | test.describe('User Discovery Journey', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-journey.spec.ts:42:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts",
                            "column": 15,
                            "line": 16
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=38880\u001b[22m\n\u001b[2m  - [pid=38880][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=38880] <kill>\u001b[22m\n\u001b[2m  - [pid=38880] <will force kill>\u001b[22m\n\u001b[2m  - [pid=38880] taskkill stderr: ERROR: The process \"38880\" not found.\u001b[22m\n\u001b[2m  - [pid=38880] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=38880] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=38880] finished temporary directories cleanup\u001b[22m\n\n\n   at ..\\fixtures\\electron-helpers.ts:16\n\n  14 |  */\n  15 | export async function launchElectronApp(): Promise<{ app: ElectronApplication; page: Page }> {\n> 16 |   const app = await electron.launch({\n     |               ^\n  17 |     args: [path.join(__dirname, '../../.webpack/main')],\n  18 |     env: {\n  19 |       ...process.env,\n    at launchElectronApp (d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts:16:15)\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-journey.spec.ts:33:25"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:56.986Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\user-journey-User-Discover-94496-ull-user-discovery-workflow-electron\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 130,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-journey.spec.ts",
                            "column": 21,
                            "line": 42
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  40 |   cleanupTestFiles(downloadedFiles);\n  41 |\n> 42 |   await electronApp.close();\n     |                     ^\n  43 | });\n  44 |\n  45 | test.describe('User Discovery Journey', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-journey.spec.ts:42:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts",
                            "column": 15,
                            "line": 16
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=27176\u001b[22m\n\u001b[2m  - [pid=27176][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=27176] <kill>\u001b[22m\n\u001b[2m  - [pid=27176] <will force kill>\u001b[22m\n\u001b[2m  - [pid=27176] taskkill stderr: ERROR: The process \"27176\" not found.\u001b[22m\n\u001b[2m  - [pid=27176] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=27176] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=27176] finished temporary directories cleanup\u001b[22m\n\n\n   at ..\\fixtures\\electron-helpers.ts:16\n\n  14 |  */\n  15 | export async function launchElectronApp(): Promise<{ app: ElectronApplication; page: Page }> {\n> 16 |   const app = await electron.launch({\n     |               ^\n  17 |     args: [path.join(__dirname, '../../.webpack/main')],\n  18 |     env: {\n  19 |       ...process.env,\n    at launchElectronApp (d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts:16:15)\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-journey.spec.ts:33:25"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:58.172Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\user-journey-User-Discover-94496-ull-user-discovery-workflow-electron-retry1\\trace.zip"
                        }
                      ]
                    },
                    {
                      "workerIndex": 131,
                      "parallelIndex": 0,
                      "status": "failed",
                      "duration": 0,
                      "error": {
                        "message": "Error: Process failed to launch!",
                        "stack": "Error: Process failed to launch!"
                      },
                      "errors": [
                        {
                          "message": "Error: Process failed to launch!"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-journey.spec.ts",
                            "column": 21,
                            "line": 42
                          },
                          "message": "TypeError: Cannot read properties of undefined (reading 'close')\n\n  40 |   cleanupTestFiles(downloadedFiles);\n  41 |\n> 42 |   await electronApp.close();\n     |                     ^\n  43 | });\n  44 |\n  45 | test.describe('User Discovery Journey', () => {\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-journey.spec.ts:42:21"
                        },
                        {
                          "location": {
                            "file": "d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts",
                            "column": 15,
                            "line": 16
                          },
                          "message": "Error: electron.launch: Process failed to launch!\nCall log:\n\u001b[2m  - <launching> \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe\" \"-r\" \"d:\\Scripts\\UserMandA\\guiv2\\node_modules\\playwright-core\\lib\\server\\electron\\loader.js\" \"--inspect=0\" \"--remote-debugging-port=0\" \"d:\\Scripts\\UserMandA\\guiv2\\.webpack\\main\"\u001b[22m\n\u001b[2m  - <launched> pid=11240\u001b[22m\n\u001b[2m  - [pid=11240][err] d:\\Scripts\\UserMandA\\guiv2\\node_modules\\electron\\dist\\electron.exe: bad option: --remote-debugging-port=0\u001b[22m\n\u001b[2m  - [pid=11240] <kill>\u001b[22m\n\u001b[2m  - [pid=11240] <will force kill>\u001b[22m\n\u001b[2m  - [pid=11240] taskkill stderr: ERROR: The process \"11240\" not found.\u001b[22m\n\u001b[2m  - [pid=11240] <process did exit: exitCode=9, signal=null>\u001b[22m\n\u001b[2m  - [pid=11240] starting temporary directories cleanup\u001b[22m\n\u001b[2m  - [pid=11240] finished temporary directories cleanup\u001b[22m\n\n\n   at ..\\fixtures\\electron-helpers.ts:16\n\n  14 |  */\n  15 | export async function launchElectronApp(): Promise<{ app: ElectronApplication; page: Page }> {\n> 16 |   const app = await electron.launch({\n     |               ^\n  17 |     args: [path.join(__dirname, '../../.webpack/main')],\n  18 |     env: {\n  19 |       ...process.env,\n    at launchElectronApp (d:\\Scripts\\UserMandA\\guiv2\\tests\\fixtures\\electron-helpers.ts:16:15)\n    at d:\\Scripts\\UserMandA\\guiv2\\tests\\e2e\\user-journey.spec.ts:33:25"
                        }
                      ],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:51:59.536Z",
                      "annotations": [],
                      "attachments": [
                        {
                          "name": "trace",
                          "contentType": "application/zip",
                          "path": "d:\\Scripts\\UserMandA\\guiv2\\test-results\\user-journey-User-Discover-94496-ull-user-discovery-workflow-electron-retry2\\trace.zip"
                        }
                      ]
                    }
                  ],
                  "status": "unexpected"
                }
              ],
              "id": "71a1cccb6623f87e1233-28eac592012c9c00d06d",
              "file": "user-journey.spec.ts",
              "line": 46,
              "column": 7
            },
            {
              "title": "should handle empty search results gracefully",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:57.574Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:58.831Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:52:00.227Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "71a1cccb6623f87e1233-752e818530b4be6c54e5",
              "file": "user-journey.spec.ts",
              "line": 274,
              "column": 7
            },
            {
              "title": "should select multiple users and enable batch operations",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:57.574Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:58.832Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:52:00.227Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "71a1cccb6623f87e1233-d2ef9e8e475e2acd6b55",
              "file": "user-journey.spec.ts",
              "line": 320,
              "column": 7
            },
            {
              "title": "should disable action buttons when no users are selected",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:57.574Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:58.832Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:52:00.227Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "71a1cccb6623f87e1233-9cb8de552f706bfa3bae",
              "file": "user-journey.spec.ts",
              "line": 383,
              "column": 7
            },
            {
              "title": "should paginate through large user lists",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:57.574Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:58.832Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:52:00.227Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "71a1cccb6623f87e1233-87a7e348694b1439d747",
              "file": "user-journey.spec.ts",
              "line": 416,
              "column": 7
            },
            {
              "title": "should refresh user data",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:57.574Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:58.832Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:52:00.227Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "71a1cccb6623f87e1233-898f502908345935a40d",
              "file": "user-journey.spec.ts",
              "line": 464,
              "column": 7
            },
            {
              "title": "should sort users by column",
              "ok": true,
              "tags": [],
              "tests": [
                {
                  "timeout": 60000,
                  "annotations": [],
                  "expectedStatus": "passed",
                  "projectId": "electron",
                  "projectName": "electron",
                  "results": [
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 0,
                      "startTime": "2025-10-27T19:51:57.575Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 1,
                      "startTime": "2025-10-27T19:51:58.832Z",
                      "annotations": [],
                      "attachments": []
                    },
                    {
                      "workerIndex": -1,
                      "parallelIndex": -1,
                      "status": "skipped",
                      "duration": 0,
                      "errors": [],
                      "stdout": [],
                      "stderr": [],
                      "retry": 2,
                      "startTime": "2025-10-27T19:52:00.227Z",
                      "annotations": [],
                      "attachments": []
                    }
                  ],
                  "status": "skipped"
                }
              ],
              "id": "71a1cccb6623f87e1233-42cb11540c42aa8db738",
              "file": "user-journey.spec.ts",
              "line": 498,
              "column": 7
            }
          ]
        }
      ]
    }
  ],
  "errors": [],
  "stats": {
    "startTime": "2025-10-27T19:50:12.181Z",
    "duration": 108066.469,
    "expected": 0,
    "skipped": 152,
    "unexpected": 44,
    "flaky": 0
  }
}