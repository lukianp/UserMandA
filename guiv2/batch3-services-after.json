{"numFailedTestSuites":4,"numFailedTests":20,"numPassedTestSuites":15,"numPassedTests":525,"numPendingTestSuites":0,"numPendingTests":2,"numRuntimeErrorTestSuites":0,"numTodoTests":0,"numTotalTestSuites":19,"numTotalTests":547,"openHandles":[],"snapshot":{"added":0,"didUpdate":false,"failure":false,"filesAdded":0,"filesRemoved":0,"filesRemovedList":[],"filesUnmatched":0,"filesUpdated":0,"matched":0,"total":0,"unchecked":0,"uncheckedKeysByFile":[],"unmatched":0,"updated":0},"startTime":1761339772631,"success":false,"testResults":[{"assertionResults":[{"ancestorTitles":["Migration Services Integration","Planning → Execution Workflow"],"duration":2230,"failing":false,"failureDetails":[{"matcherResult":{"expected":2,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: 2\nReceived: undefined\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:208:38)"],"fullName":"Migration Services Integration Planning → Execution Workflow should execute a complete migration workflow from planning to completion","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339773599,"status":"failed","title":"should execute a complete migration workflow from planning to completion"},{"ancestorTitles":["Migration Services Integration","Planning → Execution Workflow"],"duration":756,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Migration Services Integration Planning → Execution Workflow should handle multi-wave migration with dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339775838,"status":"passed","title":"should handle multi-wave migration with dependencies"},{"ancestorTitles":["Migration Services Integration","Execution → Rollback Workflow"],"duration":2234,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Migration Services Integration Execution → Rollback Workflow should rollback a migration when execution fails","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339776594,"status":"passed","title":"should rollback a migration when execution fails"},{"ancestorTitles":["Migration Services Integration","Execution → Rollback Workflow"],"duration":215,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"Migration Services Integration Execution → Rollback Workflow should support partial rollback of specific users","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339778828,"status":"passed","title":"should support partial rollback of specific users"},{"ancestorTitles":["Migration Services Integration","Migration → Delta Sync Workflow"],"duration":2219,"failing":false,"failureDetails":[{"matcherResult":{"expected":"completed","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: undefined\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:381:33)"],"fullName":"Migration Services Integration Migration → Delta Sync Workflow should schedule delta sync after successful migration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339779043,"status":"failed","title":"should schedule delta sync after successful migration"},{"ancestorTitles":["Migration Services Integration","Migration → Delta Sync Workflow"],"duration":1723,"failing":false,"failureDetails":[{"matcherResult":{"expected":"completed","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: undefined","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: undefined\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:426:29)"],"fullName":"Migration Services Integration Migration → Delta Sync Workflow should handle conflicts during delta sync","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339781263,"status":"failed","title":"should handle conflicts during delta sync"},{"ancestorTitles":["Migration Services Integration","Coexistence → Cutover Workflow"],"duration":1220,"failing":false,"failureDetails":[{"matcherResult":{"actual":"failed","expected":"completed","message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: \"failed\"","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: \"completed\"\nReceived: \"failed\"\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:493:35)"],"fullName":"Migration Services Integration Coexistence → Cutover Workflow should establish coexistence then perform cutover","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339782986,"status":"failed","title":"should establish coexistence then perform cutover"},{"ancestorTitles":["Migration Services Integration","End-to-End Complete Migration"],"duration":2233,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts:570:29)"],"fullName":"Migration Services Integration End-to-End Complete Migration should execute a complete migration lifecycle","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339784206,"status":"failed","title":"should execute a complete migration lifecycle"}],"endTime":1761339786459,"message":"  ● Migration Services Integration › Planning → Execution Workflow › should execute a complete migration workflow from planning to completion\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: 2\n    Received: undefined\n\n    \u001b[0m \u001b[90m 206 |\u001b[39m\n     \u001b[90m 207 |\u001b[39m       \u001b[36mconst\u001b[39m status \u001b[33m=\u001b[39m executionService\u001b[33m.\u001b[39mgetExecutionStatus(wave1\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 208 |\u001b[39m       expect(status\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mcompletedUsers)\u001b[33m.\u001b[39mtoBe(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                      \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 209 |\u001b[39m\n     \u001b[90m 210 |\u001b[39m       \u001b[90m// Step 5: Verify orchestration service tracks completion\u001b[39m\n     \u001b[90m 211 |\u001b[39m       \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m orchestrationService\u001b[33m.\u001b[39mgetStatistics(\u001b[32m'integration-test-1'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/migrationServiceIntegration.test.ts:208:38)\n\n  ● Migration Services Integration › Migration → Delta Sync Workflow › should schedule delta sync after successful migration\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"completed\"\n    Received: undefined\n\n    \u001b[0m \u001b[90m 379 |\u001b[39m\n     \u001b[90m 380 |\u001b[39m       expect(syncResult)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 381 |\u001b[39m       expect(syncResult\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'completed'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 382 |\u001b[39m\n     \u001b[90m 383 |\u001b[39m       \u001b[90m// Verify sync history\u001b[39m\n     \u001b[90m 384 |\u001b[39m       \u001b[36mconst\u001b[39m history \u001b[33m=\u001b[39m deltaSyncService\u001b[33m.\u001b[39mgetSyncHistory(waveId)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/migrationServiceIntegration.test.ts:381:33)\n\n  ● Migration Services Integration › Migration → Delta Sync Workflow › should handle conflicts during delta sync\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"completed\"\n    Received: undefined\n\n    \u001b[0m \u001b[90m 424 |\u001b[39m       )\u001b[33m;\u001b[39m\n     \u001b[90m 425 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 426 |\u001b[39m       expect(result\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'completed'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 427 |\u001b[39m       expect(result\u001b[33m.\u001b[39mconflictsDetected)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 428 |\u001b[39m     }\u001b[33m,\u001b[39m \u001b[35m60000\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 429 |\u001b[39m   })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/migrationServiceIntegration.test.ts:426:29)\n\n  ● Migration Services Integration › Coexistence → Cutover Workflow › should establish coexistence then perform cutover\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: \"completed\"\n    Received: \"failed\"\n\n    \u001b[0m \u001b[90m 491 |\u001b[39m\n     \u001b[90m 492 |\u001b[39m       \u001b[36mconst\u001b[39m updatedPlan \u001b[33m=\u001b[39m cutoverService\u001b[33m.\u001b[39mgetCutoverPlan(cutoverPlan\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 493 |\u001b[39m       expect(updatedPlan\u001b[33m?\u001b[39m\u001b[33m.\u001b[39mstatus)\u001b[33m.\u001b[39mtoBe(\u001b[32m'completed'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                   \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 494 |\u001b[39m\n     \u001b[90m 495 |\u001b[39m       \u001b[90m// Step 5: Verify coexistence is disabled after cutover\u001b[39m\n     \u001b[90m 496 |\u001b[39m       \u001b[36mconst\u001b[39m configAfterCutover \u001b[33m=\u001b[39m coexistenceService\u001b[33m.\u001b[39mgetConfiguration(coexistenceConfig\u001b[33m.\u001b[39mid)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/migrationServiceIntegration.test.ts:493:35)\n\n  ● Migration Services Integration › End-to-End Complete Migration › should execute a complete migration lifecycle\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 568 |\u001b[39m\n     \u001b[90m 569 |\u001b[39m       \u001b[90m// Verify all events were triggered\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 570 |\u001b[39m       expect(events\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 571 |\u001b[39m\n     \u001b[90m 572 |\u001b[39m       \u001b[90m// Verify final state\u001b[39m\n     \u001b[90m 573 |\u001b[39m       \u001b[36mconst\u001b[39m stats \u001b[33m=\u001b[39m orchestrationService\u001b[33m.\u001b[39mgetStatistics(\u001b[32m'e2e-test'\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/migrationServiceIntegration.test.ts:570:29)\n","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationServiceIntegration.test.ts","startTime":1761339773148,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":49,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:52:28)"],"fullName":"LogicEngineService CSV Loading should load users from CSV","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786568,"status":"failed","title":"should load users from CSV"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:62:29)"],"fullName":"LogicEngineService CSV Loading should load groups from CSV","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786622,"status":"failed","title":"should load groups from CSV"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:71:30)"],"fullName":"LogicEngineService CSV Loading should load computers from CSV","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786627,"status":"failed","title":"should load computers from CSV"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:82:31)"],"fullName":"LogicEngineService CSV Loading should load all 14 entity types","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786631,"status":"failed","title":"should load all 14 entity types"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService CSV Loading should emit progress events during load","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786635,"status":"passed","title":"should emit progress events during load"},{"ancestorTitles":["LogicEngineService","CSV Loading"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"actual":true,"expected":false,"message":"expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true","name":"toBe","pass":false}}],"failureMessages":["Error: expect(received).toBe(expected) // Object.is equality\n\nExpected: false\nReceived: true\n    at Object.toBe (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:105:23)"],"fullName":"LogicEngineService CSV Loading should handle missing CSV files gracefully","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786638,"status":"failed","title":"should handle missing CSV files gracefully"},{"ancestorTitles":["LogicEngineService","Inference Rules"],"duration":3,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeDefined()\n\nReceived: undefined","pass":false}}],"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.toBeDefined (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:124:20)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Inference Rules should apply ACL Group-User inference","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786643,"status":"failed","title":"should apply ACL Group-User inference"},{"ancestorTitles":["LogicEngineService","Inference Rules"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Inference Rules should identify primary device","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786646,"status":"passed","title":"should identify primary device"},{"ancestorTitles":["LogicEngineService","Inference Rules"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Inference Rules should match mailboxes to users by fuzzy matching","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786649,"status":"passed","title":"should match mailboxes to users by fuzzy matching"},{"ancestorTitles":["LogicEngineService","Inference Rules"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Inference Rules should correlate OneDrive usage to users","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786653,"status":"passed","title":"should correlate OneDrive usage to users"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.calculateLevenshteinDistance is not a function\n    at Object.calculateLevenshteinDistance (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:181:41)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Fuzzy Matching should calculate Levenshtein distance correctly","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786656,"status":"failed","title":"should calculate Levenshtein distance correctly"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.calculateSimilarity is not a function\n    at Object.calculateSimilarity (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:188:43)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Fuzzy Matching should match similar names with >80% similarity","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786657,"status":"failed","title":"should match similar names with >80% similarity"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":1,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.calculateSimilarity is not a function\n    at Object.calculateSimilarity (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:194:43)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Fuzzy Matching should match exact names with 100% similarity","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786658,"status":"failed","title":"should match exact names with 100% similarity"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":2,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.calculateSimilarity is not a function\n    at Object.calculateSimilarity (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:200:43)\n    at Promise.finally.completed (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1557:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1497:10)\n    at _callCircusTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1007:40)\n    at _runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:947:3)\n    at D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:849:7\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:862:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at _runTestsForDescribeBlock (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:857:11)\n    at run (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:761:3)\n    at runAndTransformResultsToJestFormat (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\jestAdapterInit.js:1918:21)\n    at jestAdapter (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-circus\\build\\runner.js:101:19)\n    at runTestInternal (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:275:16)\n    at runTest (D:\\Scripts\\UserMandA\\guiv2\\node_modules\\jest-runner\\build\\index.js:343:7)"],"fullName":"LogicEngineService Fuzzy Matching should match different names with low similarity","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786659,"status":"failed","title":"should match different names with low similarity"},{"ancestorTitles":["LogicEngineService","Fuzzy Matching"],"duration":2,"failing":false,"failureDetails":[{}],"failureMessages":["TypeError: service.getUserByFuzzyMatch is not a function\n    at Object.getUserByFuzzyMatch (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:209:37)"],"fullName":"LogicEngineService Fuzzy Matching should fuzzy match mailbox to user","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786662,"status":"failed","title":"should fuzzy match mailbox to user"},{"ancestorTitles":["LogicEngineService","UserDetailProjection"],"duration":4,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeDefined()\n\nReceived: undefined","pass":false}}],"failureMessages":["Error: expect(received).toBeDefined()\n\nReceived: undefined\n    at Object.toBeDefined (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:231:32)"],"fullName":"LogicEngineService UserDetailProjection should build complete projection with all fields","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786664,"status":"failed","title":"should build complete projection with all fields"},{"ancestorTitles":["LogicEngineService","UserDetailProjection"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService UserDetailProjection should return null for non-existent user","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786668,"status":"passed","title":"should return null for non-existent user"},{"ancestorTitles":["LogicEngineService","UserDetailProjection"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService UserDetailProjection should include correlated data in projection","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786671,"status":"passed","title":"should include correlated data in projection"},{"ancestorTitles":["LogicEngineService","Performance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Performance should load data in reasonable time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786676,"status":"passed","title":"should load data in reasonable time"},{"ancestorTitles":["LogicEngineService","Performance"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Performance should build projection quickly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786679,"status":"passed","title":"should build projection quickly"},{"ancestorTitles":["LogicEngineService","Performance"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Performance should handle multiple concurrent projection requests","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786681,"status":"passed","title":"should handle multiple concurrent projection requests"},{"ancestorTitles":["LogicEngineService","Error Handling"],"duration":21,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Error Handling should handle malformed CSV data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786687,"status":"passed","title":"should handle malformed CSV data"},{"ancestorTitles":["LogicEngineService","Error Handling"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Error Handling should handle empty CSV files","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786709,"status":"passed","title":"should handle empty CSV files"},{"ancestorTitles":["LogicEngineService","Error Handling"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Error Handling should emit error events for load failures","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786713,"status":"passed","title":"should emit error events for load failures"},{"ancestorTitles":["LogicEngineService","Statistics"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"actual":{},"expected":{},"message":"expect(received).not.toEqual(expected) // deep equality\n\nExpected: not 2025-10-24T21:03:06.708Z\n","name":"toEqual","pass":true}}],"failureMessages":["Error: expect(received).not.toEqual(expected) // deep equality\n\nExpected: not 2025-10-24T21:03:06.708Z\n\n    at Object.toEqual (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts:361:29)"],"fullName":"LogicEngineService Statistics should track last load time","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339786716,"status":"failed","title":"should track last load time"},{"ancestorTitles":["LogicEngineService","Statistics"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"LogicEngineService Statistics should track loading state","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339786721,"status":"passed","title":"should track loading state"}],"endTime":1761339786748,"message":"  ● LogicEngineService › CSV Loading › should load users from CSV\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 50 |\u001b[39m       \u001b[36mconst\u001b[39m usersBySid \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39musersBySid\u001b[33m;\u001b[39m\n     \u001b[90m 51 |\u001b[39m       \u001b[36mconst\u001b[39m users \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(usersBySid\u001b[33m.\u001b[39mvalues())\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 52 |\u001b[39m       expect(users\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 53 |\u001b[39m       expect(users[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'Sid'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 54 |\u001b[39m       expect(users[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'DisplayName'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 55 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/logicEngineService.test.ts:52:28)\n\n  ● LogicEngineService › CSV Loading › should load groups from CSV\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 60 |\u001b[39m       \u001b[36mconst\u001b[39m groupsBySid \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mgroupsBySid\u001b[33m;\u001b[39m\n     \u001b[90m 61 |\u001b[39m       \u001b[36mconst\u001b[39m groups \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(groupsBySid\u001b[33m.\u001b[39mvalues())\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 62 |\u001b[39m       expect(groups\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 63 |\u001b[39m       expect(groups[\u001b[35m0\u001b[39m])\u001b[33m.\u001b[39mtoHaveProperty(\u001b[32m'Sid'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 64 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 65 |\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/logicEngineService.test.ts:62:29)\n\n  ● LogicEngineService › CSV Loading › should load computers from CSV\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 69 |\u001b[39m       \u001b[36mconst\u001b[39m devicesByName \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mdevicesByName\u001b[33m;\u001b[39m\n     \u001b[90m 70 |\u001b[39m       \u001b[36mconst\u001b[39m devices \u001b[33m=\u001b[39m \u001b[33mArray\u001b[39m\u001b[33m.\u001b[39m\u001b[36mfrom\u001b[39m(devicesByName\u001b[33m.\u001b[39mvalues())\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 71 |\u001b[39m       expect(devices\u001b[33m.\u001b[39mlength)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                              \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 72 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 73 |\u001b[39m\n     \u001b[90m 74 |\u001b[39m     it(\u001b[32m'should load all 14 entity types'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/logicEngineService.test.ts:71:30)\n\n  ● LogicEngineService › CSV Loading › should load all 14 entity types\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 80 |\u001b[39m       \u001b[36mconst\u001b[39m devicesByName \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mdevicesByName\u001b[33m;\u001b[39m\n     \u001b[90m 81 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 82 |\u001b[39m       expect(usersBySid\u001b[33m.\u001b[39msize)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m    |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 83 |\u001b[39m       expect(groupsBySid\u001b[33m.\u001b[39msize)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 84 |\u001b[39m       expect(devicesByName\u001b[33m.\u001b[39msize)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 85 |\u001b[39m       \u001b[90m// Add checks for other 11 entity types\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/logicEngineService.test.ts:82:31)\n\n  ● LogicEngineService › CSV Loading › should handle missing CSV files gracefully\n\n    expect(received).toBe(expected) // Object.is equality\n\n    Expected: false\n    Received: true\n\n    \u001b[0m \u001b[90m 103 |\u001b[39m\n     \u001b[90m 104 |\u001b[39m       \u001b[90m// Should not throw, but return false\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 105 |\u001b[39m       expect(success)\u001b[33m.\u001b[39mtoBe(\u001b[36mfalse\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                       \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 106 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 107 |\u001b[39m   })\u001b[33m;\u001b[39m\n     \u001b[90m 108 |\u001b[39m\u001b[0m\n\n      at Object.toBe (src/main/services/logicEngineService.test.ts:105:23)\n\n  ● LogicEngineService › Inference Rules › should apply ACL Group-User inference\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 122 |\u001b[39m\n     \u001b[90m 123 |\u001b[39m       \u001b[90m// User should exist in test data\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 124 |\u001b[39m       expect(user)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                    \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 125 |\u001b[39m       \u001b[90m// Add specific assertions based on test data\u001b[39m\n     \u001b[90m 126 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 127 |\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (src/main/services/logicEngineService.test.ts:124:20)\n\n  ● LogicEngineService › Fuzzy Matching › should calculate Levenshtein distance correctly\n\n    TypeError: service.calculateLevenshteinDistance is not a function\n\n    \u001b[0m \u001b[90m 179 |\u001b[39m     it(\u001b[32m'should calculate Levenshtein distance correctly'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n     \u001b[90m 180 |\u001b[39m       \u001b[90m// Access private method for testing (or make it public/protected)\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 181 |\u001b[39m       \u001b[36mconst\u001b[39m distance \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mcalculateLevenshteinDistance(\u001b[32m'John Smith'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Jon Smyth'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                         \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 182 |\u001b[39m\n     \u001b[90m 183 |\u001b[39m       expect(distance)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 184 |\u001b[39m       expect(distance)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m5\u001b[39m)\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.calculateLevenshteinDistance (src/main/services/logicEngineService.test.ts:181:41)\n\n  ● LogicEngineService › Fuzzy Matching › should match similar names with >80% similarity\n\n    TypeError: service.calculateSimilarity is not a function\n\n    \u001b[0m \u001b[90m 186 |\u001b[39m\n     \u001b[90m 187 |\u001b[39m     it(\u001b[32m'should match similar names with >80% similarity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 188 |\u001b[39m       \u001b[36mconst\u001b[39m similarity \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mcalculateSimilarity(\u001b[32m'John Smith'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Jon Smith'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 189 |\u001b[39m\n     \u001b[90m 190 |\u001b[39m       expect(similarity)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0.8\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 191 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.calculateSimilarity (src/main/services/logicEngineService.test.ts:188:43)\n\n  ● LogicEngineService › Fuzzy Matching › should match exact names with 100% similarity\n\n    TypeError: service.calculateSimilarity is not a function\n\n    \u001b[0m \u001b[90m 192 |\u001b[39m\n     \u001b[90m 193 |\u001b[39m     it(\u001b[32m'should match exact names with 100% similarity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 194 |\u001b[39m       \u001b[36mconst\u001b[39m similarity \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mcalculateSimilarity(\u001b[32m'John Smith'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'John Smith'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 195 |\u001b[39m\n     \u001b[90m 196 |\u001b[39m       expect(similarity)\u001b[33m.\u001b[39mtoBe(\u001b[35m1.0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 197 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.calculateSimilarity (src/main/services/logicEngineService.test.ts:194:43)\n\n  ● LogicEngineService › Fuzzy Matching › should match different names with low similarity\n\n    TypeError: service.calculateSimilarity is not a function\n\n    \u001b[0m \u001b[90m 198 |\u001b[39m\n     \u001b[90m 199 |\u001b[39m     it(\u001b[32m'should match different names with low similarity'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 200 |\u001b[39m       \u001b[36mconst\u001b[39m similarity \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mcalculateSimilarity(\u001b[32m'John Smith'\u001b[39m\u001b[33m,\u001b[39m \u001b[32m'Jane Doe'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                           \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 201 |\u001b[39m\n     \u001b[90m 202 |\u001b[39m       expect(similarity)\u001b[33m.\u001b[39mtoBeLessThan(\u001b[35m0.5\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 203 |\u001b[39m     })\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.calculateSimilarity (src/main/services/logicEngineService.test.ts:200:43)\n\n  ● LogicEngineService › Fuzzy Matching › should fuzzy match mailbox to user\n\n    TypeError: service.getUserByFuzzyMatch is not a function\n\n    \u001b[0m \u001b[90m 207 |\u001b[39m\n     \u001b[90m 208 |\u001b[39m       \u001b[90m// Try to find user by email-like identifier\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 209 |\u001b[39m       \u001b[36mconst\u001b[39m user \u001b[33m=\u001b[39m (service \u001b[36mas\u001b[39m any)\u001b[33m.\u001b[39mgetUserByFuzzyMatch(\u001b[32m'john.smith@company.com'\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                     \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 210 |\u001b[39m\n     \u001b[90m 211 |\u001b[39m       \u001b[90m// May or may not find a match depending on test data\u001b[39m\n     \u001b[90m 212 |\u001b[39m       \u001b[36mif\u001b[39m (user) {\u001b[0m\n\n      at Object.getUserByFuzzyMatch (src/main/services/logicEngineService.test.ts:209:37)\n\n  ● LogicEngineService › UserDetailProjection › should build complete projection with all fields\n\n    expect(received).toBeDefined()\n\n    Received: undefined\n\n    \u001b[0m \u001b[90m 229 |\u001b[39m\n     \u001b[90m 230 |\u001b[39m       expect(projection)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 231 |\u001b[39m       expect(projection\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m\u001b[33mUser\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                                \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 232 |\u001b[39m       expect(projection\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m\u001b[33mGroups\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 233 |\u001b[39m       expect(projection\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m\u001b[33mDevices\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\n     \u001b[90m 234 |\u001b[39m       expect(projection\u001b[33m?\u001b[39m\u001b[33m.\u001b[39m\u001b[33mApps\u001b[39m)\u001b[33m.\u001b[39mtoBeDefined()\u001b[33m;\u001b[39m\u001b[0m\n\n      at Object.toBeDefined (src/main/services/logicEngineService.test.ts:231:32)\n\n  ● LogicEngineService › Statistics › should track last load time\n\n    expect(received).not.toEqual(expected) // deep equality\n\n    Expected: not 2025-10-24T21:03:06.708Z\n\n    \u001b[0m \u001b[90m 359 |\u001b[39m       \u001b[36mconst\u001b[39m afterLoad \u001b[33m=\u001b[39m service\u001b[33m.\u001b[39mgetLastLoadTime()\u001b[33m;\u001b[39m\n     \u001b[90m 360 |\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 361 |\u001b[39m       expect(afterLoad)\u001b[33m.\u001b[39mnot\u001b[33m.\u001b[39mtoEqual(beforeLoad)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                             \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 362 |\u001b[39m     })\u001b[33m;\u001b[39m\n     \u001b[90m 363 |\u001b[39m\n     \u001b[90m 364 |\u001b[39m     it(\u001b[32m'should track loading state'\u001b[39m\u001b[33m,\u001b[39m \u001b[36masync\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toEqual (src/main/services/logicEngineService.test.ts:361:29)\n","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\logicEngineService.test.ts","startTime":1761339786473,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["WebhookService","Singleton Pattern"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Singleton Pattern should return the same instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786915,"status":"passed","title":"should return the same instance"},{"ancestorTitles":["WebhookService","Webhook Registration"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Registration should register a webhook","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339786916,"status":"passed","title":"should register a webhook"},{"ancestorTitles":["WebhookService","Webhook Registration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Registration should unregister a webhook","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339786918,"status":"passed","title":"should unregister a webhook"},{"ancestorTitles":["WebhookService","Webhook Registration"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Registration should get all webhooks","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786919,"status":"passed","title":"should get all webhooks"},{"ancestorTitles":["WebhookService","Webhook Updates"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Updates should update webhook configuration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339786922,"status":"passed","title":"should update webhook configuration"},{"ancestorTitles":["WebhookService","Webhook Updates"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Updates should enable webhook","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339786925,"status":"passed","title":"should enable webhook"},{"ancestorTitles":["WebhookService","Webhook Updates"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Updates should disable webhook","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786928,"status":"passed","title":"should disable webhook"},{"ancestorTitles":["WebhookService","Webhook Triggering"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Triggering should trigger webhook for matching event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786929,"status":"passed","title":"should trigger webhook for matching event"},{"ancestorTitles":["WebhookService","Webhook Triggering"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Triggering should not trigger disabled webhook","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786932,"status":"passed","title":"should not trigger disabled webhook"},{"ancestorTitles":["WebhookService","Webhook Triggering"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Triggering should not trigger for non-matching event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786934,"status":"passed","title":"should not trigger for non-matching event"},{"ancestorTitles":["WebhookService","Webhook Triggering"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Triggering should trigger wildcard webhook","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786935,"status":"passed","title":"should trigger wildcard webhook"},{"ancestorTitles":["WebhookService","Webhook Delivery"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Delivery should record successful delivery","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339786945,"status":"passed","title":"should record successful delivery"},{"ancestorTitles":["WebhookService","Webhook Delivery"],"duration":36,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Delivery should record failed delivery","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339786947,"status":"passed","title":"should record failed delivery"},{"ancestorTitles":["WebhookService","Webhook Delivery"],"duration":61,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Delivery should retry on failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339786984,"status":"passed","title":"should retry on failure"},{"ancestorTitles":["WebhookService","Webhook Testing"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Testing should send test webhook","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339787046,"status":"passed","title":"should send test webhook"},{"ancestorTitles":["WebhookService","Webhook Testing"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Testing should throw error for non-existent webhook","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787047,"status":"passed","title":"should throw error for non-existent webhook"},{"ancestorTitles":["WebhookService","Webhook Signatures"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Signatures should include signature header","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787056,"status":"passed","title":"should include signature header"},{"ancestorTitles":["WebhookService","Webhook Signatures"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Signatures should verify signature","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787058,"status":"passed","title":"should verify signature"},{"ancestorTitles":["WebhookService","Webhook Signatures"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Signatures should reject invalid signature","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787059,"status":"passed","title":"should reject invalid signature"},{"ancestorTitles":["WebhookService","Webhook Statistics"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Webhook Statistics should calculate statistics","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339787063,"status":"passed","title":"should calculate statistics"},{"ancestorTitles":["WebhookService","Import/Export"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Import/Export should export webhooks as JSON","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339787078,"status":"passed","title":"should export webhooks as JSON"},{"ancestorTitles":["WebhookService","Import/Export"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Import/Export should import webhooks from JSON","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339787079,"status":"passed","title":"should import webhooks from JSON"},{"ancestorTitles":["WebhookService","Rate Limiting"],"duration":13,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\nExpected number of calls: 2\nReceived number of calls: 0","pass":false}}],"failureMessages":["Error: expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\nExpected number of calls: 2\nReceived number of calls: 0\n    at Object.toHaveBeenCalledTimes (D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts:517:28)"],"fullName":"WebhookService Rate Limiting should enforce rate limit","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787080,"status":"failed","title":"should enforce rate limit"},{"ancestorTitles":["WebhookService","Rate Limiting"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Rate Limiting should get rate limit","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787093,"status":"passed","title":"should get rate limit"},{"ancestorTitles":["WebhookService","Delivery History"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"WebhookService Delivery History should clear delivery history","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339787095,"status":"passed","title":"should clear delivery history"}],"endTime":1761339787115,"message":"  ● WebhookService › Rate Limiting › should enforce rate limit\n\n    expect(jest.fn()).toHaveBeenCalledTimes(expected)\n\n    Expected number of calls: 2\n    Received number of calls: 0\n\n    \u001b[0m \u001b[90m 515 |\u001b[39m\n     \u001b[90m 516 |\u001b[39m       \u001b[90m// Only 2 requests should have been made due to rate limit\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 517 |\u001b[39m       expect(global\u001b[33m.\u001b[39mfetch)\u001b[33m.\u001b[39mtoHaveBeenCalledTimes(\u001b[35m2\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                            \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 518 |\u001b[39m     }\u001b[33m,\u001b[39m \u001b[35m15000\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 519 |\u001b[39m\n     \u001b[90m 520 |\u001b[39m     it(\u001b[32m'should get rate limit'\u001b[39m\u001b[33m,\u001b[39m () \u001b[33m=>\u001b[39m {\u001b[0m\n\n      at Object.toHaveBeenCalledTimes (src/renderer/services/webhookService.test.ts:517:28)\n","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\webhookService.test.ts","startTime":1761339786756,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationExecutionService","Initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787182,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["MigrationExecutionService","Initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Initialization should initialize with provided configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339787184,"status":"passed","title":"should initialize with provided configuration"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should execute wave in sequential mode","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339787186,"status":"passed","title":"should execute wave in sequential mode"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should execute wave in parallel mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787189,"status":"passed","title":"should execute wave in parallel mode"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should execute wave in batch mode","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787194,"status":"passed","title":"should execute wave in batch mode"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should execute wave in dry-run mode without making changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787196,"status":"passed","title":"should execute wave in dry-run mode without making changes"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should handle user migration failures gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339787198,"status":"passed","title":"should handle user migration failures gracefully"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should reject empty user list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787207,"status":"passed","title":"should reject empty user list"},{"ancestorTitles":["MigrationExecutionService","executeWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService executeWave should emit progress events during execution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787210,"status":"passed","title":"should emit progress events during execution"},{"ancestorTitles":["MigrationExecutionService","pauseWave"],"duration":518,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService pauseWave should pause wave execution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787212,"status":"passed","title":"should pause wave execution"},{"ancestorTitles":["MigrationExecutionService","pauseWave"],"duration":513,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService pauseWave should emit pause event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339787731,"status":"passed","title":"should emit pause event"},{"ancestorTitles":["MigrationExecutionService","resumeWave"],"duration":4607,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService resumeWave should resume paused wave execution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339788244,"status":"passed","title":"should resume paused wave execution"},{"ancestorTitles":["MigrationExecutionService","resumeWave"],"duration":4613,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService resumeWave should emit resume event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339792851,"status":"passed","title":"should emit resume event"},{"ancestorTitles":["MigrationExecutionService","cancelWave"],"duration":508,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService cancelWave should cancel wave execution","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339797464,"status":"passed","title":"should cancel wave execution"},{"ancestorTitles":["MigrationExecutionService","cancelWave"],"duration":513,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService cancelWave should emit cancel event","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339797972,"status":"passed","title":"should emit cancel event"},{"ancestorTitles":["MigrationExecutionService","getLogs"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService getLogs should return execution logs","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339798485,"status":"passed","title":"should return execution logs"},{"ancestorTitles":["MigrationExecutionService","getLogs"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService getLogs should filter logs by waveId","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339798488,"status":"passed","title":"should filter logs by waveId"},{"ancestorTitles":["MigrationExecutionService","getLogs"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService getLogs should return empty array when no logs exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339798491,"status":"passed","title":"should return empty array when no logs exist"},{"ancestorTitles":["MigrationExecutionService","shutdown"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService shutdown should cancel all running waves on shutdown","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339798493,"status":"passed","title":"should cancel all running waves on shutdown"},{"ancestorTitles":["MigrationExecutionService","shutdown"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService shutdown should clean up resources","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339798497,"status":"passed","title":"should clean up resources"},{"ancestorTitles":["MigrationExecutionService","Error Recovery"],"duration":1024,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Error Recovery should retry retryable steps on failure","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339798498,"status":"passed","title":"should retry retryable steps on failure"},{"ancestorTitles":["MigrationExecutionService","Error Recovery"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Error Recovery should handle non-required step failure gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339799522,"status":"passed","title":"should handle non-required step failure gracefully"},{"ancestorTitles":["MigrationExecutionService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Edge Cases should handle concurrent wave executions","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339799525,"status":"passed","title":"should handle concurrent wave executions"},{"ancestorTitles":["MigrationExecutionService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Edge Cases should handle steps with dependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339799527,"status":"passed","title":"should handle steps with dependencies"},{"ancestorTitles":["MigrationExecutionService","Edge Cases"],"duration":103,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationExecutionService Edge Cases should respect step timeout settings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339799529,"status":"passed","title":"should respect step timeout settings"}],"endTime":1761339799634,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationExecutionService.test.ts","startTime":1761339787122,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["DeltaSyncService","Initialization"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339799699,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["DeltaSyncService","Initialization"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Initialization should set default bandwidth limit","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339799807,"status":"passed","title":"should set default bandwidth limit"},{"ancestorTitles":["DeltaSyncService","Initialization"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Initialization should load persisted data on initialization","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339799918,"status":"passed","title":"should load persisted data on initialization"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":1125,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should perform incremental delta sync","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1761339800027,"status":"passed","title":"should perform incremental delta sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should perform full sync","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339801152,"status":"passed","title":"should perform full sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":113,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should perform bidirectional sync","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339801261,"status":"passed","title":"should perform bidirectional sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":1116,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should detect changes since last sync","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339801374,"status":"passed","title":"should detect changes since last sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":1123,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should emit progress events during sync","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339802491,"status":"passed","title":"should emit progress events during sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should handle conflicts during sync","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339803614,"status":"passed","title":"should handle conflicts during sync"},{"ancestorTitles":["DeltaSyncService","Delta Sync Operations"],"duration":123,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Delta Sync Operations should handle sync failures","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339803724,"status":"passed","title":"should handle sync failures"},{"ancestorTitles":["DeltaSyncService","Checkpoints"],"duration":1123,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Checkpoints should create checkpoints during sync","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339803847,"status":"passed","title":"should create checkpoints during sync"},{"ancestorTitles":["DeltaSyncService","Checkpoints"],"duration":1119,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Checkpoints should resume from checkpoint","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339804970,"status":"passed","title":"should resume from checkpoint"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":104,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should schedule delta sync","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1761339806089,"status":"passed","title":"should schedule delta sync"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should emit event when schedule created","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339806193,"status":"passed","title":"should emit event when schedule created"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should stop delta sync schedule","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339806303,"status":"passed","title":"should stop delta sync schedule"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should resume delta sync schedule","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339806412,"status":"passed","title":"should resume delta sync schedule"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should delete schedule","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339806522,"status":"passed","title":"should delete schedule"},{"ancestorTitles":["DeltaSyncService","Sync Scheduling"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Sync Scheduling should handle non-existent schedule operations","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339806631,"status":"passed","title":"should handle non-existent schedule operations"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get sync history for wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339806739,"status":"passed","title":"should get sync history for wave"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get all sync history when no wave specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339806851,"status":"passed","title":"should get all sync history when no wave specified"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get schedules for wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339806960,"status":"passed","title":"should get schedules for wave"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get all schedules when no wave specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339807067,"status":"passed","title":"should get all schedules when no wave specified"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should get last sync timestamp","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339807176,"status":"passed","title":"should get last sync timestamp"},{"ancestorTitles":["DeltaSyncService","Data Retrieval"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Data Retrieval should return null for wave with no sync history","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339807288,"status":"passed","title":"should return null for wave with no sync history"},{"ancestorTitles":["DeltaSyncService","Bandwidth Throttling"],"duration":2132,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Bandwidth Throttling should throttle when bandwidth limit exceeded","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339807394,"status":"passed","title":"should throttle when bandwidth limit exceeded"},{"ancestorTitles":["DeltaSyncService","Edge Cases"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Edge Cases should handle empty change list","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339809527,"status":"passed","title":"should handle empty change list"},{"ancestorTitles":["DeltaSyncService","Edge Cases"],"duration":1121,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Edge Cases should handle very large batch of changes","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339809638,"status":"passed","title":"should handle very large batch of changes"},{"ancestorTitles":["DeltaSyncService","Edge Cases"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Edge Cases should handle cron expression for different timezones","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339810759,"status":"passed","title":"should handle cron expression for different timezones"},{"ancestorTitles":["DeltaSyncService","Edge Cases"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"DeltaSyncService Edge Cases should persist data on shutdown","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339810869,"status":"passed","title":"should persist data on shutdown"}],"endTime":1761339810977,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\deltaSyncService.test.ts","startTime":1761339799643,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PowerShellExecutionService","Service Initialization"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Service Initialization should initialize with correct configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339811039,"status":"passed","title":"should initialize with correct configuration"},{"ancestorTitles":["PowerShellExecutionService","Service Initialization"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Service Initialization should create minimum pool size on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339811046,"status":"passed","title":"should create minimum pool size on initialization"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":62,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should execute a script successfully","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339811053,"status":"passed","title":"should execute a script successfully"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should handle script execution errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339811116,"status":"passed","title":"should handle script execution errors"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":64,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should support cancellation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339811130,"status":"passed","title":"should support cancellation"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should enforce timeout","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339811194,"status":"passed","title":"should enforce timeout"},{"ancestorTitles":["PowerShellExecutionService","Script Execution"],"duration":25,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Script Execution should stream output events","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339811311,"status":"passed","title":"should stream output events"},{"ancestorTitles":["PowerShellExecutionService","Module Execution"],"duration":63,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Module Execution should execute a PowerShell module function","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339811336,"status":"passed","title":"should execute a PowerShell module function"},{"ancestorTitles":["PowerShellExecutionService","Module Execution"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Module Execution should cache module results when enabled","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339811399,"status":"passed","title":"should cache module results when enabled"},{"ancestorTitles":["PowerShellExecutionService","Session Pooling"],"duration":26,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Session Pooling should reuse idle sessions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339811402,"status":"passed","title":"should reuse idle sessions"},{"ancestorTitles":["PowerShellExecutionService","Session Pooling"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Session Pooling should respect max pool size","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339811428,"status":"passed","title":"should respect max pool size"},{"ancestorTitles":["PowerShellExecutionService","Session Pooling"],"duration":58,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Session Pooling should queue requests when pool is exhausted","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339811434,"status":"passed","title":"should queue requests when pool is exhausted"},{"ancestorTitles":["PowerShellExecutionService","Session Pooling"],"duration":6017,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Session Pooling should terminate idle sessions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339811492,"status":"passed","title":"should terminate idle sessions"},{"ancestorTitles":["PowerShellExecutionService","Error Handling"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Error Handling should handle syntax errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339817509,"status":"passed","title":"should handle syntax errors"},{"ancestorTitles":["PowerShellExecutionService","Error Handling"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Error Handling should handle runtime errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339817525,"status":"passed","title":"should handle runtime errors"},{"ancestorTitles":["PowerShellExecutionService","Error Handling"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Error Handling should handle JSON parsing errors","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339817539,"status":"passed","title":"should handle JSON parsing errors"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should emit output stream events","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339817556,"status":"passed","title":"should emit output stream events"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should emit error stream events","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339817571,"status":"passed","title":"should emit error stream events"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should handle verbose stream","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817587,"status":"passed","title":"should handle verbose stream"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should handle warning stream","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817604,"status":"passed","title":"should handle warning stream"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should handle debug stream","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817619,"status":"passed","title":"should handle debug stream"},{"ancestorTitles":["PowerShellExecutionService","Stream Handling"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Stream Handling should handle progress events","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817634,"status":"passed","title":"should handle progress events"},{"ancestorTitles":["PowerShellExecutionService","Parallel Execution"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Parallel Execution should execute multiple scripts in parallel","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339817651,"status":"passed","title":"should execute multiple scripts in parallel"},{"ancestorTitles":["PowerShellExecutionService","Parallel Execution"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Parallel Execution should handle parallel execution with failures","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339817666,"status":"passed","title":"should handle parallel execution with failures"},{"ancestorTitles":["PowerShellExecutionService","Module Discovery"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Module Discovery should discover available modules","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817682,"status":"passed","title":"should discover available modules"},{"ancestorTitles":["PowerShellExecutionService","Retry Logic"],"duration":22,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Retry Logic should retry failed executions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817689,"status":"passed","title":"should retry failed executions"},{"ancestorTitles":["PowerShellExecutionService","Retry Logic"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Retry Logic should fail after max retries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339817711,"status":"passed","title":"should fail after max retries"},{"ancestorTitles":["PowerShellExecutionService","Performance Monitoring"],"duration":31,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Performance Monitoring should track execution statistics","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817726,"status":"passed","title":"should track execution statistics"},{"ancestorTitles":["PowerShellExecutionService","Performance Monitoring"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Performance Monitoring should track execution statistics over time","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817757,"status":"passed","title":"should track execution statistics over time"},{"ancestorTitles":["PowerShellExecutionService","Performance Monitoring"],"duration":31,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Performance Monitoring should track failure rate","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817867,"status":"passed","title":"should track failure rate"},{"ancestorTitles":["PowerShellExecutionService","Resource Cleanup"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Resource Cleanup should dispose all sessions on cleanup","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339817898,"status":"passed","title":"should dispose all sessions on cleanup"},{"ancestorTitles":["PowerShellExecutionService","Resource Cleanup"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PowerShellExecutionService Resource Cleanup should kill running processes on shutdown","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817915,"status":"passed","title":"should kill running processes on shutdown"}],"endTime":1761339817931,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\powerShellService.test.ts","startTime":1761339810985,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CutoverService","Initialization"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339817991,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["CutoverService","Initialization"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Initialization should load cutover plans on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339818100,"status":"passed","title":"should load cutover plans on initialization"},{"ancestorTitles":["CutoverService","Cutover Plan Creation"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Plan Creation should create a cutover plan","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1761339818209,"status":"passed","title":"should create a cutover plan"},{"ancestorTitles":["CutoverService","Cutover Plan Creation"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Plan Creation should persist plan after creation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339818319,"status":"passed","title":"should persist plan after creation"},{"ancestorTitles":["CutoverService","Cutover Plan Creation"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Plan Creation should handle plan with multiple DNS records","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339818429,"status":"passed","title":"should handle plan with multiple DNS records"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":113,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should execute complete cutover successfully","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1761339818538,"status":"passed","title":"should execute complete cutover successfully"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should emit phase events during execution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339818651,"status":"passed","title":"should emit phase events during execution"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should update DNS records during cutover","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339818757,"status":"passed","title":"should update DNS records during cutover"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should configure mailbox redirection","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339818866,"status":"passed","title":"should configure mailbox redirection"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should activate target environment","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339818976,"status":"passed","title":"should activate target environment"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should decommission source when configured","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339819083,"status":"passed","title":"should decommission source when configured"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should send notifications at appropriate stages","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339819193,"status":"passed","title":"should send notifications at appropriate stages"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should handle post-cutover validation warnings","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339819302,"status":"passed","title":"should handle post-cutover validation warnings"},{"ancestorTitles":["CutoverService","Cutover Execution"],"duration":116,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Cutover Execution should fail when plan not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339819411,"status":"passed","title":"should fail when plan not found"},{"ancestorTitles":["CutoverService","Rollback"],"duration":119,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Rollback should execute rollback when cutover fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339819527,"status":"passed","title":"should execute rollback when cutover fails"},{"ancestorTitles":["CutoverService","Rollback"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Rollback should execute rollback steps in reverse order","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339819646,"status":"passed","title":"should execute rollback steps in reverse order"},{"ancestorTitles":["CutoverService","Checklist Management"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Checklist Management should update checklist item","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339819755,"status":"passed","title":"should update checklist item"},{"ancestorTitles":["CutoverService","Checklist Management"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Checklist Management should fail when required checklist items not completed","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339819862,"status":"passed","title":"should fail when required checklist items not completed"},{"ancestorTitles":["CutoverService","Checklist Management"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Checklist Management should handle non-existent checklist item","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339819972,"status":"passed","title":"should handle non-existent checklist item"},{"ancestorTitles":["CutoverService","Data Retrieval"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Data Retrieval should get cutover plan by ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339820081,"status":"passed","title":"should get cutover plan by ID"},{"ancestorTitles":["CutoverService","Data Retrieval"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Data Retrieval should return null for non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339820190,"status":"passed","title":"should return null for non-existent plan"},{"ancestorTitles":["CutoverService","Data Retrieval"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Data Retrieval should get cutover plans for wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339820301,"status":"passed","title":"should get cutover plans for wave"},{"ancestorTitles":["CutoverService","Edge Cases"],"duration":2117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Edge Cases should wait for cutover window","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339820409,"status":"passed","title":"should wait for cutover window"},{"ancestorTitles":["CutoverService","Edge Cases"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Edge Cases should handle very large notification list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339822526,"status":"passed","title":"should handle very large notification list"},{"ancestorTitles":["CutoverService","Edge Cases"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Edge Cases should handle special characters in plan name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339822636,"status":"passed","title":"should handle special characters in plan name"},{"ancestorTitles":["CutoverService","Edge Cases"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CutoverService Edge Cases should persist plans on save","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339822744,"status":"passed","title":"should persist plans on save"}],"endTime":1761339822852,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\cutoverService.test.ts","startTime":1761339817940,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationReportingService","Initialization"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Initialization should create data directories on initialization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339822921,"status":"passed","title":"should create data directories on initialization"},{"ancestorTitles":["MigrationReportingService","Initialization"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Initialization should load persisted data on initialization","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339823039,"status":"passed","title":"should load persisted data on initialization"},{"ancestorTitles":["MigrationReportingService","Initialization"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Initialization should create default templates","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339823149,"status":"passed","title":"should create default templates"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate executive summary report","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1761339823258,"status":"passed","title":"should generate executive summary report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate wave detail report","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339823367,"status":"passed","title":"should generate wave detail report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate user detail report","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339823479,"status":"passed","title":"should generate user detail report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate error analysis report","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339823588,"status":"passed","title":"should generate error analysis report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate performance report","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339823698,"status":"passed","title":"should generate performance report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":113,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should generate timeline report","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339823805,"status":"passed","title":"should generate timeline report"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should include recommendations in executive summary","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339823918,"status":"passed","title":"should include recommendations in executive summary"},{"ancestorTitles":["MigrationReportingService","Report Generation"],"duration":115,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Generation should handle PowerShell failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339824023,"status":"passed","title":"should handle PowerShell failure"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":120,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as JSON","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339824138,"status":"passed","title":"should export report as JSON"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as CSV","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339824258,"status":"passed","title":"should export report as CSV"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as HTML","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339824366,"status":"passed","title":"should export report as HTML"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as PDF via PowerShell","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339824473,"status":"passed","title":"should export report as PDF via PowerShell"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should export report as Excel via PowerShell","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339824584,"status":"passed","title":"should export report as Excel via PowerShell"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should emit export event","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339824694,"status":"passed","title":"should emit export event"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should fail export for non-existent report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339824802,"status":"passed","title":"should fail export for non-existent report"},{"ancestorTitles":["MigrationReportingService","Report Export"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Export should handle special characters in report name when exporting","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339824914,"status":"passed","title":"should handle special characters in report name when exporting"},{"ancestorTitles":["MigrationReportingService","Template Management"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Template Management should create custom template","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339825020,"status":"passed","title":"should create custom template"},{"ancestorTitles":["MigrationReportingService","Template Management"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Template Management should get all templates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339825128,"status":"passed","title":"should get all templates"},{"ancestorTitles":["MigrationReportingService","Template Management"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Template Management should persist templates after creation","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339825239,"status":"passed","title":"should persist templates after creation"},{"ancestorTitles":["MigrationReportingService","Scheduled Reporting"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Scheduled Reporting should schedule report generation","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761339825347,"status":"passed","title":"should schedule report generation"},{"ancestorTitles":["MigrationReportingService","Scheduled Reporting"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Scheduled Reporting should fail to schedule with non-existent template","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339825458,"status":"passed","title":"should fail to schedule with non-existent template"},{"ancestorTitles":["MigrationReportingService","Scheduled Reporting"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Scheduled Reporting should get all schedules","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339825566,"status":"passed","title":"should get all schedules"},{"ancestorTitles":["MigrationReportingService","Data Retrieval"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Data Retrieval should get reports for specific wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339825673,"status":"passed","title":"should get reports for specific wave"},{"ancestorTitles":["MigrationReportingService","Data Retrieval"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Data Retrieval should get all reports when no wave specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339825782,"status":"passed","title":"should get all reports when no wave specified"},{"ancestorTitles":["MigrationReportingService","Report Data Building"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Data Building should calculate success rate correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339825891,"status":"passed","title":"should calculate success rate correctly"},{"ancestorTitles":["MigrationReportingService","Report Data Building"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Data Building should categorize errors correctly","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339826001,"status":"passed","title":"should categorize errors correctly"},{"ancestorTitles":["MigrationReportingService","Report Data Building"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Report Data Building should sort timeline events chronologically","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339826110,"status":"passed","title":"should sort timeline events chronologically"},{"ancestorTitles":["MigrationReportingService","Edge Cases"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Edge Cases should handle report with no waves","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339826216,"status":"passed","title":"should handle report with no waves"},{"ancestorTitles":["MigrationReportingService","Edge Cases"],"duration":127,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Edge Cases should handle very large reports","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339826325,"status":"passed","title":"should handle very large reports"},{"ancestorTitles":["MigrationReportingService","Edge Cases"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Edge Cases should handle CSV export with special characters","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339826452,"status":"passed","title":"should handle CSV export with special characters"},{"ancestorTitles":["MigrationReportingService","Edge Cases"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationReportingService Edge Cases should persist data on shutdown","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339826560,"status":"passed","title":"should persist data on shutdown"}],"endTime":1761339826668,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationReportingService.test.ts","startTime":1761339822862,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationOrchestrationService","Initialization"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339826729,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["MigrationOrchestrationService","Initialization"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Initialization should attempt to load persisted state on initialization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339826838,"status":"passed","title":"should attempt to load persisted state on initialization"},{"ancestorTitles":["MigrationOrchestrationService","Initialization"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Initialization should handle missing persisted state gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339826949,"status":"passed","title":"should handle missing persisted state gracefully"},{"ancestorTitles":["MigrationOrchestrationService","Wave Planning"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Planning should plan a new wave","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1761339827060,"status":"passed","title":"should plan a new wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Planning"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Planning should persist wave after planning","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339827169,"status":"passed","title":"should persist wave after planning"},{"ancestorTitles":["MigrationOrchestrationService","Wave Planning"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Planning should handle waves with dependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339827277,"status":"passed","title":"should handle waves with dependencies"},{"ancestorTitles":["MigrationOrchestrationService","Wave Updates"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Updates should update an existing wave","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339827385,"status":"passed","title":"should update an existing wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Updates"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Updates should return null for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339827496,"status":"passed","title":"should return null for non-existent wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Updates"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Updates should persist state after update","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339827603,"status":"passed","title":"should persist state after update"},{"ancestorTitles":["MigrationOrchestrationService","Wave Deletion"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Deletion should delete a wave","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339827712,"status":"passed","title":"should delete a wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Deletion"],"duration":115,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Deletion should not delete executing wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339827822,"status":"passed","title":"should not delete executing wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Deletion"],"duration":119,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Deletion should return false for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339827937,"status":"passed","title":"should return false for non-existent wave"},{"ancestorTitles":["MigrationOrchestrationService","Wave Validation"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Validation should validate waves successfully when no issues","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339828057,"status":"passed","title":"should validate waves successfully when no issues"},{"ancestorTitles":["MigrationOrchestrationService","Wave Validation"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Validation should detect circular dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339828164,"status":"passed","title":"should detect circular dependencies"},{"ancestorTitles":["MigrationOrchestrationService","Wave Validation"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Wave Validation should detect non-existent dependencies","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339828272,"status":"passed","title":"should detect non-existent dependencies"},{"ancestorTitles":["MigrationOrchestrationService","Migration Execution"],"duration":220,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Migration Execution should execute migration for project","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339828378,"status":"passed","title":"should execute migration for project"},{"ancestorTitles":["MigrationOrchestrationService","Migration Execution"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Migration Execution should fail when validation fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339828598,"status":"passed","title":"should fail when validation fails"},{"ancestorTitles":["MigrationOrchestrationService","Migration Execution"],"duration":324,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Migration Execution should execute waves in correct order based on dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339828708,"status":"passed","title":"should execute waves in correct order based on dependencies"},{"ancestorTitles":["MigrationOrchestrationService","Pause and Resume"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Pause and Resume should pause migration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339829033,"status":"passed","title":"should pause migration"},{"ancestorTitles":["MigrationOrchestrationService","Pause and Resume"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Pause and Resume should resume migration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339829142,"status":"passed","title":"should resume migration"},{"ancestorTitles":["MigrationOrchestrationService","Rollback"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Rollback should create rollback point","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339829252,"status":"passed","title":"should create rollback point"},{"ancestorTitles":["MigrationOrchestrationService","Rollback"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Rollback should fail to create rollback point for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339829361,"status":"passed","title":"should fail to create rollback point for non-existent wave"},{"ancestorTitles":["MigrationOrchestrationService","Rollback"],"duration":113,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Rollback should rollback migration","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339829468,"status":"passed","title":"should rollback migration"},{"ancestorTitles":["MigrationOrchestrationService","Rollback"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Rollback should fail rollback for non-existent rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339829581,"status":"passed","title":"should fail rollback for non-existent rollback point"},{"ancestorTitles":["MigrationOrchestrationService","Statistics"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Statistics should return statistics for project","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761339829686,"status":"passed","title":"should return statistics for project"},{"ancestorTitles":["MigrationOrchestrationService","Statistics"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Statistics should return all statistics when no project specified","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339829796,"status":"passed","title":"should return all statistics when no project specified"},{"ancestorTitles":["MigrationOrchestrationService","Edge Cases"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Edge Cases should handle large number of waves","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339829908,"status":"passed","title":"should handle large number of waves"},{"ancestorTitles":["MigrationOrchestrationService","Edge Cases"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Edge Cases should handle wave with special characters in name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339830018,"status":"passed","title":"should handle wave with special characters in name"},{"ancestorTitles":["MigrationOrchestrationService","Edge Cases"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationOrchestrationService Edge Cases should handle empty user list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339830123,"status":"passed","title":"should handle empty user list"}],"endTime":1761339830234,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationOrchestrationService.test.ts","startTime":1761339826677,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CoexistenceService","Initialization"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339830286,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["CoexistenceService","Initialization"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Initialization should load persisted data on initialization","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339830404,"status":"passed","title":"should load persisted data on initialization"},{"ancestorTitles":["CoexistenceService","Initialization"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Initialization should start health monitoring","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339830513,"status":"passed","title":"should start health monitoring"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure coexistence with all features","invocations":1,"location":null,"numPassingAsserts":9,"retryReasons":[],"startAt":1761339830621,"status":"passed","title":"should configure coexistence with all features"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure free/busy sharing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339830734,"status":"passed","title":"should configure free/busy sharing"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure mail routing","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339830843,"status":"passed","title":"should configure mail routing"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure GAL sync and run initial sync","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339830952,"status":"passed","title":"should configure GAL sync and run initial sync"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure cross-forest authentication","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339831061,"status":"passed","title":"should configure cross-forest authentication"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should configure proxy addresses","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339831172,"status":"passed","title":"should configure proxy addresses"},{"ancestorTitles":["CoexistenceService","Coexistence Configuration"],"duration":125,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Coexistence Configuration should handle configuration failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339831279,"status":"passed","title":"should handle configuration failure"},{"ancestorTitles":["CoexistenceService","GAL Synchronization"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService GAL Synchronization should synchronize GAL","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761339831405,"status":"passed","title":"should synchronize GAL"},{"ancestorTitles":["CoexistenceService","GAL Synchronization"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService GAL Synchronization should fail when configuration not found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339831512,"status":"passed","title":"should fail when configuration not found"},{"ancestorTitles":["CoexistenceService","GAL Synchronization"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService GAL Synchronization should fail when PowerShell script fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339831620,"status":"passed","title":"should fail when PowerShell script fails"},{"ancestorTitles":["CoexistenceService","Health Checks"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Health Checks should perform health check","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339831729,"status":"passed","title":"should perform health check"},{"ancestorTitles":["CoexistenceService","Health Checks"],"duration":111,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Health Checks should detect health issues","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339831838,"status":"passed","title":"should detect health issues"},{"ancestorTitles":["CoexistenceService","Health Checks"],"duration":105,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Health Checks should return degraded status when warnings present","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339831949,"status":"passed","title":"should return degraded status when warnings present"},{"ancestorTitles":["CoexistenceService","Health Checks"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Health Checks should store health history","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339832054,"status":"passed","title":"should store health history"},{"ancestorTitles":["CoexistenceService","Troubleshooting"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Troubleshooting should troubleshoot issue","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339832166,"status":"passed","title":"should troubleshoot issue"},{"ancestorTitles":["CoexistenceService","Troubleshooting"],"duration":109,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Troubleshooting should fail troubleshooting for non-existent issue","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339832276,"status":"passed","title":"should fail troubleshooting for non-existent issue"},{"ancestorTitles":["CoexistenceService","Troubleshooting"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Troubleshooting should auto-fix issue","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339832386,"status":"passed","title":"should auto-fix issue"},{"ancestorTitles":["CoexistenceService","Troubleshooting"],"duration":112,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Troubleshooting should fail auto-fix when PowerShell script fails","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339832498,"status":"passed","title":"should fail auto-fix when PowerShell script fails"},{"ancestorTitles":["CoexistenceService","Decommissioning"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Decommissioning should decommission coexistence","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339832610,"status":"passed","title":"should decommission coexistence"},{"ancestorTitles":["CoexistenceService","Decommissioning"],"duration":108,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Decommissioning should handle decommission failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339832718,"status":"passed","title":"should handle decommission failure"},{"ancestorTitles":["CoexistenceService","Decommissioning"],"duration":104,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Decommissioning should fail for non-existent configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339832826,"status":"passed","title":"should fail for non-existent configuration"},{"ancestorTitles":["CoexistenceService","Data Retrieval"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Data Retrieval should get configuration by ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339832930,"status":"passed","title":"should get configuration by ID"},{"ancestorTitles":["CoexistenceService","Data Retrieval"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Data Retrieval should return null for non-existent configuration","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833037,"status":"passed","title":"should return null for non-existent configuration"},{"ancestorTitles":["CoexistenceService","Data Retrieval"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Data Retrieval should get configurations for wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339833148,"status":"passed","title":"should get configurations for wave"},{"ancestorTitles":["CoexistenceService","Data Retrieval"],"duration":110,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Data Retrieval should get active issues","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339833255,"status":"passed","title":"should get active issues"},{"ancestorTitles":["CoexistenceService","Edge Cases"],"duration":106,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Edge Cases should handle very long environment names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833365,"status":"passed","title":"should handle very long environment names"},{"ancestorTitles":["CoexistenceService","Edge Cases"],"duration":136,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Edge Cases should limit health history to 100 entries","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833472,"status":"passed","title":"should limit health history to 100 entries"},{"ancestorTitles":["CoexistenceService","Edge Cases"],"duration":107,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CoexistenceService Edge Cases should persist data on shutdown","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833608,"status":"passed","title":"should persist data on shutdown"}],"endTime":1761339833716,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\coexistenceService.test.ts","startTime":1761339830243,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationValidationService","Initialization"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833788,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["MigrationValidationService","Initialization"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Initialization should initialize with provided configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833790,"status":"passed","title":"should initialize with provided configuration"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":12,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should validate wave successfully with all checks passing","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1761339833793,"status":"passed","title":"should validate wave successfully with all checks passing"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":15,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should fail validation when connectivity check fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833805,"status":"passed","title":"should fail validation when connectivity check fails"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should handle connectivity validation failure gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339833820,"status":"passed","title":"should handle connectivity validation failure gracefully"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should skip optional validations when requested","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833826,"status":"passed","title":"should skip optional validations when requested"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should emit progress events during validation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833830,"status":"passed","title":"should emit progress events during validation"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should validate users in batches","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339833833,"status":"passed","title":"should validate users in batches"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should detect and report warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339833836,"status":"passed","title":"should detect and report warnings"},{"ancestorTitles":["MigrationValidationService","validateWave"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService validateWave should persist validation report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833839,"status":"passed","title":"should persist validation report"},{"ancestorTitles":["MigrationValidationService","Capacity Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Capacity Validation should pass when sufficient capacity exists","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833844,"status":"passed","title":"should pass when sufficient capacity exists"},{"ancestorTitles":["MigrationValidationService","Capacity Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Capacity Validation should fail when capacity is insufficient","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339833847,"status":"passed","title":"should fail when capacity is insufficient"},{"ancestorTitles":["MigrationValidationService","User Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService User Validation should validate user licenses","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833850,"status":"passed","title":"should validate user licenses"},{"ancestorTitles":["MigrationValidationService","User Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService User Validation should validate user permissions","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833854,"status":"passed","title":"should validate user permissions"},{"ancestorTitles":["MigrationValidationService","User Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService User Validation should validate mailbox size limits","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833857,"status":"passed","title":"should validate mailbox size limits"},{"ancestorTitles":["MigrationValidationService","Blocker Detection"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Blocker Detection should detect legacy protocol blockers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833860,"status":"passed","title":"should detect legacy protocol blockers"},{"ancestorTitles":["MigrationValidationService","Blocker Detection"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Blocker Detection should detect custom attribute blockers","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833863,"status":"passed","title":"should detect custom attribute blockers"},{"ancestorTitles":["MigrationValidationService","Blocker Detection"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Blocker Detection should handle no blockers found","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833868,"status":"passed","title":"should handle no blockers found"},{"ancestorTitles":["MigrationValidationService","Dependency Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Dependency Validation should detect circular dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833872,"status":"passed","title":"should detect circular dependencies"},{"ancestorTitles":["MigrationValidationService","Dependency Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Dependency Validation should detect unresolved dependencies","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833874,"status":"passed","title":"should detect unresolved dependencies"},{"ancestorTitles":["MigrationValidationService","Dependency Validation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Dependency Validation should pass when dependencies are resolved","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833877,"status":"passed","title":"should pass when dependencies are resolved"},{"ancestorTitles":["MigrationValidationService","Report Generation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Report Generation should generate report with correct overall status - passed","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339833880,"status":"passed","title":"should generate report with correct overall status - passed"},{"ancestorTitles":["MigrationValidationService","Report Generation"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Report Generation should generate report with overall status - passed-with-warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339833883,"status":"passed","title":"should generate report with overall status - passed-with-warnings"},{"ancestorTitles":["MigrationValidationService","Report Generation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Report Generation should calculate statistics correctly","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833888,"status":"passed","title":"should calculate statistics correctly"},{"ancestorTitles":["MigrationValidationService","Report Generation"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Report Generation should include remediation suggestions for failures","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833891,"status":"passed","title":"should include remediation suggestions for failures"},{"ancestorTitles":["MigrationValidationService","Error Recovery"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Error Recovery should handle PowerShell script execution failure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339833894,"status":"passed","title":"should handle PowerShell script execution failure"},{"ancestorTitles":["MigrationValidationService","Error Recovery"],"duration":117,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Error Recovery should handle network timeout gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339833896,"status":"passed","title":"should handle network timeout gracefully"},{"ancestorTitles":["MigrationValidationService","Error Recovery"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Error Recovery should handle malformed response data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834013,"status":"passed","title":"should handle malformed response data"},{"ancestorTitles":["MigrationValidationService","getReport"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService getReport should retrieve validation report by ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834017,"status":"passed","title":"should retrieve validation report by ID"},{"ancestorTitles":["MigrationValidationService","getReport"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService getReport should return null for non-existent report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834019,"status":"passed","title":"should return null for non-existent report"},{"ancestorTitles":["MigrationValidationService","getReportsByWave"],"duration":null,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService getReportsByWave should retrieve all reports for a wave","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339834020,"status":"pending","title":"should retrieve all reports for a wave"},{"ancestorTitles":["MigrationValidationService","getReportsByWave"],"duration":null,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService getReportsByWave should return empty array for wave with no reports","invocations":1,"location":null,"numPassingAsserts":0,"retryReasons":[],"startAt":1761339834020,"status":"pending","title":"should return empty array for wave with no reports"},{"ancestorTitles":["MigrationValidationService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Edge Cases should handle empty user list","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834020,"status":"passed","title":"should handle empty user list"},{"ancestorTitles":["MigrationValidationService","Edge Cases"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Edge Cases should handle empty mappings list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834024,"status":"passed","title":"should handle empty mappings list"},{"ancestorTitles":["MigrationValidationService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Edge Cases should handle very large user batches","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834028,"status":"passed","title":"should handle very large user batches"},{"ancestorTitles":["MigrationValidationService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationValidationService Edge Cases should handle concurrent validation requests","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834030,"status":"passed","title":"should handle concurrent validation requests"}],"endTime":1761339834034,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationValidationService.test.ts","startTime":1761339833723,"status":"focused","summary":""},{"assertionResults":[{"ancestorTitles":["RollbackService","Initialization"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Initialization should create data directories on initialization","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834089,"status":"passed","title":"should create data directories on initialization"},{"ancestorTitles":["RollbackService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Initialization should initialize with provided configuration","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834097,"status":"passed","title":"should initialize with provided configuration"},{"ancestorTitles":["RollbackService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Initialization should load existing rollback points on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834098,"status":"passed","title":"should load existing rollback points on initialization"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":7,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should create full rollback point successfully","invocations":1,"location":null,"numPassingAsserts":12,"retryReasons":[],"startAt":1761339834099,"status":"passed","title":"should create full rollback point successfully"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should compress snapshot data","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834106,"status":"passed","title":"should compress snapshot data"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should set expiration date based on retention policy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834109,"status":"passed","title":"should set expiration date based on retention policy"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":13,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should handle PowerShell snapshot capture failure","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834112,"status":"passed","title":"should handle PowerShell snapshot capture failure"},{"ancestorTitles":["RollbackService","createFullRollbackPoint"],"duration":10,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createFullRollbackPoint should enforce retention policy after creating rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834126,"status":"passed","title":"should enforce retention policy after creating rollback point"},{"ancestorTitles":["RollbackService","createSelectiveRollbackPoint"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createSelectiveRollbackPoint should create selective rollback point for specific users","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339834136,"status":"passed","title":"should create selective rollback point for specific users"},{"ancestorTitles":["RollbackService","createSelectiveRollbackPoint"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService createSelectiveRollbackPoint should create selective rollback for multiple users","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834141,"status":"passed","title":"should create selective rollback for multiple users"},{"ancestorTitles":["RollbackService","rollback"],"duration":5,"failing":false,"failureDetails":[{"matcherResult":{"message":"expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0","pass":false}}],"failureMessages":["Error: expect(received).toBeGreaterThan(expected)\n\nExpected: > 0\nReceived:   0\n    at Object.toBeGreaterThan (D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\rollbackService.test.ts:396:31)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)"],"fullName":"RollbackService rollback should execute full rollback successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834143,"status":"failed","title":"should execute full rollback successfully"},{"ancestorTitles":["RollbackService","rollback"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should execute rollback in dry-run mode","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834148,"status":"passed","title":"should execute rollback in dry-run mode"},{"ancestorTitles":["RollbackService","rollback"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should execute selective rollback for specific users","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834157,"status":"passed","title":"should execute selective rollback for specific users"},{"ancestorTitles":["RollbackService","rollback"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should force rollback when canRestore is false","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834160,"status":"passed","title":"should force rollback when canRestore is false"},{"ancestorTitles":["RollbackService","rollback"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should validate snapshot before rollback","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834164,"status":"passed","title":"should validate snapshot before rollback"},{"ancestorTitles":["RollbackService","rollback"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should fail rollback when validation fails","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834170,"status":"passed","title":"should fail rollback when validation fails"},{"ancestorTitles":["RollbackService","rollback"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should handle rollback execution failure gracefully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834175,"status":"passed","title":"should handle rollback execution failure gracefully"},{"ancestorTitles":["RollbackService","rollback"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService rollback should reject rollback for non-existent rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834180,"status":"passed","title":"should reject rollback for non-existent rollback point"},{"ancestorTitles":["RollbackService","getRollbackPoints"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoints should return all rollback points","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834184,"status":"passed","title":"should return all rollback points"},{"ancestorTitles":["RollbackService","getRollbackPoints"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoints should filter rollback points by wave ID","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834189,"status":"passed","title":"should filter rollback points by wave ID"},{"ancestorTitles":["RollbackService","getRollbackPoints"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoints should return empty array for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834195,"status":"passed","title":"should return empty array for non-existent wave"},{"ancestorTitles":["RollbackService","getRollbackPoint"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoint should return specific rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834200,"status":"passed","title":"should return specific rollback point"},{"ancestorTitles":["RollbackService","getRollbackPoint"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getRollbackPoint should return null for non-existent rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834203,"status":"passed","title":"should return null for non-existent rollback point"},{"ancestorTitles":["RollbackService","getStorageStats"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getStorageStats should return accurate storage statistics","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339834204,"status":"passed","title":"should return accurate storage statistics"},{"ancestorTitles":["RollbackService","getStorageStats"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getStorageStats should track oldest and newest points","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834210,"status":"passed","title":"should track oldest and newest points"},{"ancestorTitles":["RollbackService","getStorageStats"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService getStorageStats should return null dates when no points exist","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834215,"status":"passed","title":"should return null dates when no points exist"},{"ancestorTitles":["RollbackService","deleteRollbackPoint"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService deleteRollbackPoint should delete rollback point and snapshot file","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834219,"status":"passed","title":"should delete rollback point and snapshot file"},{"ancestorTitles":["RollbackService","deleteRollbackPoint"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService deleteRollbackPoint should reject delete for non-existent rollback point","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834223,"status":"passed","title":"should reject delete for non-existent rollback point"},{"ancestorTitles":["RollbackService","deleteRollbackPoint"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService deleteRollbackPoint should handle file deletion failure gracefully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834224,"status":"passed","title":"should handle file deletion failure gracefully"},{"ancestorTitles":["RollbackService","Retention Policy"],"duration":14,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Retention Policy should delete expired rollback points","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834229,"status":"passed","title":"should delete expired rollback points"},{"ancestorTitles":["RollbackService","Retention Policy"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Retention Policy should enforce max points per wave limit","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834243,"status":"passed","title":"should enforce max points per wave limit"},{"ancestorTitles":["RollbackService","Retention Policy"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Retention Policy should not delete points from other waves","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834250,"status":"passed","title":"should not delete points from other waves"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle failed snapshot capture","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834254,"status":"passed","title":"should handle failed snapshot capture"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle missing snapshot data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834257,"status":"passed","title":"should handle missing snapshot data"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle incomplete snapshot data gracefully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834263,"status":"passed","title":"should handle incomplete snapshot data gracefully"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle file I/O errors during snapshot save","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834265,"status":"passed","title":"should handle file I/O errors during snapshot save"},{"ancestorTitles":["RollbackService","Error Recovery"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Error Recovery should handle decompression errors during rollback","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834269,"status":"passed","title":"should handle decompression errors during rollback"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should handle large snapshots with compression","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834275,"status":"passed","title":"should handle large snapshots with compression"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should handle concurrent rollback point creation","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834281,"status":"passed","title":"should handle concurrent rollback point creation"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should handle snapshot version compatibility","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834284,"status":"passed","title":"should handle snapshot version compatibility"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should preserve snapshot timestamp","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834288,"status":"passed","title":"should preserve snapshot timestamp"},{"ancestorTitles":["RollbackService","Edge Cases"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"RollbackService Edge Cases should handle metadata serialization for persistence","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834290,"status":"passed","title":"should handle metadata serialization for persistence"}],"endTime":1761339834302,"message":"  ● RollbackService › rollback › should execute full rollback successfully\n\n    expect(received).toBeGreaterThan(expected)\n\n    Expected: > 0\n    Received:   0\n\n    \u001b[0m \u001b[90m 394 |\u001b[39m\n     \u001b[90m 395 |\u001b[39m       expect(result\u001b[33m.\u001b[39merrors)\u001b[33m.\u001b[39mtoEqual([])\u001b[33m;\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 396 |\u001b[39m       expect(result\u001b[33m.\u001b[39mduration)\u001b[33m.\u001b[39mtoBeGreaterThan(\u001b[35m0\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m     |\u001b[39m                               \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 397 |\u001b[39m       expect(result\u001b[33m.\u001b[39mtimestamp)\u001b[33m.\u001b[39mtoBeInstanceOf(\u001b[33mDate\u001b[39m)\u001b[33m;\u001b[39m\n     \u001b[90m 398 |\u001b[39m\n     \u001b[90m 399 |\u001b[39m       \u001b[90m// Verify events\u001b[39m\u001b[0m\n\n      at Object.toBeGreaterThan (src/main/services/rollbackService.test.ts:396:31)\n","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\rollbackService.test.ts","startTime":1761339834042,"status":"failed","summary":""},{"assertionResults":[{"ancestorTitles":["ConflictResolutionService","Initialization"],"duration":27,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834356,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["ConflictResolutionService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Initialization should initialize with default data directory when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834383,"status":"passed","title":"should initialize with default data directory when not provided"},{"ancestorTitles":["ConflictResolutionService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Initialization should initialize empty conflict and template maps","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834384,"status":"passed","title":"should initialize empty conflict and template maps"},{"ancestorTitles":["ConflictResolutionService","detectConflicts"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService detectConflicts should detect conflicts successfully","invocations":1,"location":null,"numPassingAsserts":13,"retryReasons":[],"startAt":1761339834385,"status":"passed","title":"should detect conflicts successfully"},{"ancestorTitles":["ConflictResolutionService","detectConflicts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService detectConflicts should handle detection with no conflicts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834387,"status":"passed","title":"should handle detection with no conflicts"},{"ancestorTitles":["ConflictResolutionService","detectConflicts"],"duration":18,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService detectConflicts should throw error on PowerShell failure","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834388,"status":"passed","title":"should throw error on PowerShell failure"},{"ancestorTitles":["ConflictResolutionService","detectConflicts"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService detectConflicts should assign default severity when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834406,"status":"passed","title":"should assign default severity when not provided"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with source-wins strategy","invocations":1,"location":null,"numPassingAsserts":8,"retryReasons":[],"startAt":1761339834408,"status":"passed","title":"should resolve conflict with source-wins strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with target-wins strategy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834411,"status":"passed","title":"should resolve conflict with target-wins strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with merge strategy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834413,"status":"passed","title":"should resolve conflict with merge strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with rename-source strategy","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834415,"status":"passed","title":"should resolve conflict with rename-source strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should resolve conflict with rename-target strategy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834417,"status":"passed","title":"should resolve conflict with rename-target strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should skip conflict when using skip strategy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834420,"status":"passed","title":"should skip conflict when using skip strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should queue conflict for approval when using manual strategy","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834421,"status":"passed","title":"should queue conflict for approval when using manual strategy"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should throw error for non-existent conflict","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834423,"status":"passed","title":"should throw error for non-existent conflict"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should throw error when resolving already resolved conflict","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834425,"status":"passed","title":"should throw error when resolving already resolved conflict"},{"ancestorTitles":["ConflictResolutionService","resolveConflict"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService resolveConflict should handle PowerShell failure during resolution","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834427,"status":"passed","title":"should handle PowerShell failure during resolution"},{"ancestorTitles":["ConflictResolutionService","Approval Workflow"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Approval Workflow should approve and resolve conflict","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339834432,"status":"passed","title":"should approve and resolve conflict"},{"ancestorTitles":["ConflictResolutionService","Approval Workflow"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Approval Workflow should reject approval request","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339834436,"status":"passed","title":"should reject approval request"},{"ancestorTitles":["ConflictResolutionService","Approval Workflow"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Approval Workflow should throw error for non-existent approval request","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834439,"status":"passed","title":"should throw error for non-existent approval request"},{"ancestorTitles":["ConflictResolutionService","autoResolveConflicts"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService autoResolveConflicts should auto-resolve conflicts using templates","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834440,"status":"passed","title":"should auto-resolve conflicts using templates"},{"ancestorTitles":["ConflictResolutionService","autoResolveConflicts"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService autoResolveConflicts should not auto-resolve conflicts without matching templates","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834443,"status":"passed","title":"should not auto-resolve conflicts without matching templates"},{"ancestorTitles":["ConflictResolutionService","autoResolveConflicts"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService autoResolveConflicts should handle failures during auto-resolution","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834445,"status":"passed","title":"should handle failures during auto-resolution"},{"ancestorTitles":["ConflictResolutionService","Template Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Template Management should create resolution template","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834449,"status":"passed","title":"should create resolution template"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should get all conflicts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834451,"status":"passed","title":"should get all conflicts"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should filter conflicts by wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834453,"status":"passed","title":"should filter conflicts by wave"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should filter conflicts by type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834454,"status":"passed","title":"should filter conflicts by type"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should filter conflicts by status","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834456,"status":"passed","title":"should filter conflicts by status"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should get approval queue by status","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834457,"status":"passed","title":"should get approval queue by status"},{"ancestorTitles":["ConflictResolutionService","Data Retrieval"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Data Retrieval should get audit log for specific conflict","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834459,"status":"passed","title":"should get audit log for specific conflict"},{"ancestorTitles":["ConflictResolutionService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Edge Cases should handle empty user list in detection","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834462,"status":"passed","title":"should handle empty user list in detection"},{"ancestorTitles":["ConflictResolutionService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Edge Cases should handle large number of conflicts","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834463,"status":"passed","title":"should handle large number of conflicts"},{"ancestorTitles":["ConflictResolutionService","Edge Cases"],"duration":5,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ConflictResolutionService Edge Cases should handle rename without target resource","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834464,"status":"passed","title":"should handle rename without target resource"}],"endTime":1761339834470,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\conflictResolutionService.test.ts","startTime":1761339834307,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["MigrationPlanningService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Initialization should create plans directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834524,"status":"passed","title":"should create plans directory on initialization"},{"ancestorTitles":["MigrationPlanningService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Initialization should initialize with provided data root","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834526,"status":"passed","title":"should initialize with provided data root"},{"ancestorTitles":["MigrationPlanningService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Initialization should use default data root when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834527,"status":"passed","title":"should use default data root when not provided"},{"ancestorTitles":["MigrationPlanningService","createPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService createPlan should create a new migration plan successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339834529,"status":"passed","title":"should create a new migration plan successfully"},{"ancestorTitles":["MigrationPlanningService","createPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService createPlan should generate unique IDs for each plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834530,"status":"passed","title":"should generate unique IDs for each plan"},{"ancestorTitles":["MigrationPlanningService","createPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService createPlan should set created and modified timestamps","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834532,"status":"passed","title":"should set created and modified timestamps"},{"ancestorTitles":["MigrationPlanningService","createPlan"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService createPlan should initialize plan with empty waves array","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834533,"status":"passed","title":"should initialize plan with empty waves array"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should add wave to plan successfully","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834536,"status":"passed","title":"should add wave to plan successfully"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should add wave with default priority when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834538,"status":"passed","title":"should add wave with default priority when not provided"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should add wave with dependencies","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834540,"status":"passed","title":"should add wave with dependencies"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should reject adding wave to non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834541,"status":"passed","title":"should reject adding wave to non-existent plan"},{"ancestorTitles":["MigrationPlanningService","addWave"],"duration":19,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService addWave should update plan modified timestamp when adding wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834550,"status":"passed","title":"should update plan modified timestamp when adding wave"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should assign users to wave successfully","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834569,"status":"passed","title":"should assign users to wave successfully"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should add users to existing user list","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834571,"status":"passed","title":"should add users to existing user list"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should prevent duplicate user assignments","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834572,"status":"passed","title":"should prevent duplicate user assignments"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should reject assignment to non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834573,"status":"passed","title":"should reject assignment to non-existent plan"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should reject assignment to non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834576,"status":"passed","title":"should reject assignment to non-existent wave"},{"ancestorTitles":["MigrationPlanningService","assignUsersToWave"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService assignUsersToWave should handle empty user list","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834577,"status":"passed","title":"should handle empty user list"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should update wave status to in-progress","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834578,"status":"passed","title":"should update wave status to in-progress"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should update wave status to completed","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834579,"status":"passed","title":"should update wave status to completed"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should update wave status to failed","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834582,"status":"passed","title":"should update wave status to failed"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should update wave modified timestamp","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834583,"status":"passed","title":"should update wave modified timestamp"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should reject status update for non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834599,"status":"passed","title":"should reject status update for non-existent plan"},{"ancestorTitles":["MigrationPlanningService","updateWaveStatus"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService updateWaveStatus should reject status update for non-existent wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834600,"status":"passed","title":"should reject status update for non-existent wave"},{"ancestorTitles":["MigrationPlanningService","getPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlan should retrieve plan from memory","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834601,"status":"passed","title":"should retrieve plan from memory"},{"ancestorTitles":["MigrationPlanningService","getPlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlan should load plan from disk if not in memory","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834603,"status":"passed","title":"should load plan from disk if not in memory"},{"ancestorTitles":["MigrationPlanningService","getPlan"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlan should return null for non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834604,"status":"passed","title":"should return null for non-existent plan"},{"ancestorTitles":["MigrationPlanningService","getPlan"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlan should cache loaded plan in memory","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834605,"status":"passed","title":"should cache loaded plan in memory"},{"ancestorTitles":["MigrationPlanningService","getPlansByProfile"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlansByProfile should return all plans for a profile","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834605,"status":"passed","title":"should return all plans for a profile"},{"ancestorTitles":["MigrationPlanningService","getPlansByProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlansByProfile should return empty array for profile with no plans","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834606,"status":"passed","title":"should return empty array for profile with no plans"},{"ancestorTitles":["MigrationPlanningService","getPlansByProfile"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getPlansByProfile should load all plans from disk","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834609,"status":"passed","title":"should load all plans from disk"},{"ancestorTitles":["MigrationPlanningService","deletePlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService deletePlan should delete plan from memory and disk","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834610,"status":"passed","title":"should delete plan from memory and disk"},{"ancestorTitles":["MigrationPlanningService","deletePlan"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService deletePlan should handle deletion when file does not exist","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834611,"status":"passed","title":"should handle deletion when file does not exist"},{"ancestorTitles":["MigrationPlanningService","deletePlan"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService deletePlan should not throw error when deleting non-existent plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834612,"status":"passed","title":"should not throw error when deleting non-existent plan"},{"ancestorTitles":["MigrationPlanningService","getStatistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getStatistics should return statistics with no plans","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834613,"status":"passed","title":"should return statistics with no plans"},{"ancestorTitles":["MigrationPlanningService","getStatistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getStatistics should calculate statistics correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834614,"status":"passed","title":"should calculate statistics correctly"},{"ancestorTitles":["MigrationPlanningService","getStatistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getStatistics should count unique users across all waves","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834615,"status":"passed","title":"should count unique users across all waves"},{"ancestorTitles":["MigrationPlanningService","getStatistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService getStatistics should track waves by status correctly","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834616,"status":"passed","title":"should track waves by status correctly"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle very long plan names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834617,"status":"passed","title":"should handle very long plan names"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle special characters in names","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834618,"status":"passed","title":"should handle special characters in names"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle multiple plans with same name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834619,"status":"passed","title":"should handle multiple plans with same name"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle large number of waves in a plan","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834621,"status":"passed","title":"should handle large number of waves in a plan"},{"ancestorTitles":["MigrationPlanningService","Edge Cases"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"MigrationPlanningService Edge Cases should handle large number of users in a wave","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834625,"status":"passed","title":"should handle large number of users in a wave"}],"endTime":1761339834627,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\migrationPlanningService.test.ts","startTime":1761339834477,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ResourceMappingService","Initialization"],"duration":17,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Initialization should create data directory on initialization","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834707,"status":"passed","title":"should create data directory on initialization"},{"ancestorTitles":["ResourceMappingService","Initialization"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Initialization should initialize with default data directory when not provided","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834724,"status":"passed","title":"should initialize with default data directory when not provided"},{"ancestorTitles":["ResourceMappingService","Initialization"],"duration":0,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Initialization should initialize empty mappings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834726,"status":"passed","title":"should initialize empty mappings"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should auto-map resources using UPN strategy","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761339834727,"status":"passed","title":"should auto-map resources using UPN strategy"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should auto-map resources using email strategy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834733,"status":"passed","title":"should auto-map resources using email strategy"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should auto-map resources using displayName strategy","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834734,"status":"passed","title":"should auto-map resources using displayName strategy"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should auto-map resources using samAccountName strategy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834736,"status":"passed","title":"should auto-map resources using samAccountName strategy"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should use fuzzy matching when exact match fails","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834737,"status":"passed","title":"should use fuzzy matching when exact match fails"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should not map when fuzzy match confidence is below threshold","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834740,"status":"passed","title":"should not map when fuzzy match confidence is below threshold"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should detect one-to-many conflicts","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834742,"status":"passed","title":"should detect one-to-many conflicts"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should handle empty source resources","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834746,"status":"passed","title":"should handle empty source resources"},{"ancestorTitles":["ResourceMappingService","autoMapResources"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService autoMapResources should handle empty target resources","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834747,"status":"passed","title":"should handle empty target resources"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should create manual mapping","invocations":1,"location":null,"numPassingAsserts":6,"retryReasons":[],"startAt":1761339834748,"status":"passed","title":"should create manual mapping"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should update mapping","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834750,"status":"passed","title":"should update mapping"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should delete mapping","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834751,"status":"passed","title":"should delete mapping"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":11,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should throw error when updating non-existent mapping","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834752,"status":"passed","title":"should throw error when updating non-existent mapping"},{"ancestorTitles":["ResourceMappingService","Manual Mapping Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Manual Mapping Operations should throw error when deleting non-existent mapping","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834763,"status":"passed","title":"should throw error when deleting non-existent mapping"},{"ancestorTitles":["ResourceMappingService","Bulk Operations"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Bulk Operations should bulk update mappings","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834765,"status":"passed","title":"should bulk update mappings"},{"ancestorTitles":["ResourceMappingService","CSV Import/Export"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService CSV Import/Export should import mappings from CSV","invocations":1,"location":null,"numPassingAsserts":7,"retryReasons":[],"startAt":1761339834768,"status":"passed","title":"should import mappings from CSV"},{"ancestorTitles":["ResourceMappingService","CSV Import/Export"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService CSV Import/Export should export mappings to CSV","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834770,"status":"passed","title":"should export mappings to CSV"},{"ancestorTitles":["ResourceMappingService","JSON Export"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService JSON Export should export mappings to JSON","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834772,"status":"passed","title":"should export mappings to JSON"},{"ancestorTitles":["ResourceMappingService","JSON Export"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService JSON Export should export all mappings when no wave specified","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834774,"status":"passed","title":"should export all mappings when no wave specified"},{"ancestorTitles":["ResourceMappingService","Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Validation should validate mappings successfully","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834775,"status":"passed","title":"should validate mappings successfully"},{"ancestorTitles":["ResourceMappingService","Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Validation should detect unmapped resources as warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834777,"status":"passed","title":"should detect unmapped resources as warnings"},{"ancestorTitles":["ResourceMappingService","Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Validation should detect low confidence mappings as warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834778,"status":"passed","title":"should detect low confidence mappings as warnings"},{"ancestorTitles":["ResourceMappingService","Template Management"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Template Management should create mapping template","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834779,"status":"passed","title":"should create mapping template"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should get all mappings","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834781,"status":"passed","title":"should get all mappings"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should filter mappings by wave","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834782,"status":"passed","title":"should filter mappings by wave"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should filter mappings by resource type","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834783,"status":"passed","title":"should filter mappings by resource type"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should get mapping by ID","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834784,"status":"passed","title":"should get mapping by ID"},{"ancestorTitles":["ResourceMappingService","Data Retrieval"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Data Retrieval should return null for non-existent mapping ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834785,"status":"passed","title":"should return null for non-existent mapping ID"},{"ancestorTitles":["ResourceMappingService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Edge Cases should handle resources without mapping keys","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834787,"status":"passed","title":"should handle resources without mapping keys"},{"ancestorTitles":["ResourceMappingService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Edge Cases should handle large number of mappings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834789,"status":"passed","title":"should handle large number of mappings"},{"ancestorTitles":["ResourceMappingService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Edge Cases should handle special characters in names","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834791,"status":"passed","title":"should handle special characters in names"},{"ancestorTitles":["ResourceMappingService","Edge Cases"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ResourceMappingService Edge Cases should detect type mismatch conflicts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834793,"status":"passed","title":"should detect type mismatch conflicts"}],"endTime":1761339834796,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\resourceMappingService.test.ts","startTime":1761339834634,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["CacheService","Basic Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should set and get values","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834864,"status":"passed","title":"should set and get values"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should return undefined for missing keys","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834866,"status":"passed","title":"should return undefined for missing keys"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should check key existence","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834868,"status":"passed","title":"should check key existence"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should delete keys","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834869,"status":"passed","title":"should delete keys"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should clear all entries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834870,"status":"passed","title":"should clear all entries"},{"ancestorTitles":["CacheService","Basic Operations"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Basic Operations should get all keys","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834871,"status":"passed","title":"should get all keys"},{"ancestorTitles":["CacheService","TTL Expiration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService TTL Expiration should expire entries after TTL","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834875,"status":"passed","title":"should expire entries after TTL"},{"ancestorTitles":["CacheService","TTL Expiration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService TTL Expiration should not expire entries without TTL","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834877,"status":"passed","title":"should not expire entries without TTL"},{"ancestorTitles":["CacheService","TTL Expiration"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService TTL Expiration should use default TTL","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834878,"status":"passed","title":"should use default TTL"},{"ancestorTitles":["CacheService","LRU Eviction"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService LRU Eviction should evict least recently used entry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834879,"status":"passed","title":"should evict least recently used entry"},{"ancestorTitles":["CacheService","LFU Eviction"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService LFU Eviction should evict least frequently used entry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834880,"status":"passed","title":"should evict least frequently used entry"},{"ancestorTitles":["CacheService","FIFO Eviction"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService FIFO Eviction should evict first in entry","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834883,"status":"passed","title":"should evict first in entry"},{"ancestorTitles":["CacheService","Batch Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Batch Operations should get multiple keys","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834884,"status":"passed","title":"should get multiple keys"},{"ancestorTitles":["CacheService","Batch Operations"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Batch Operations should set multiple entries","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834886,"status":"passed","title":"should set multiple entries"},{"ancestorTitles":["CacheService","Get or Set"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Get or Set should return cached value if exists","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834888,"status":"passed","title":"should return cached value if exists"},{"ancestorTitles":["CacheService","Get or Set"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Get or Set should fetch and cache if not exists","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834889,"status":"passed","title":"should fetch and cache if not exists"},{"ancestorTitles":["CacheService","Get or Set"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Get or Set should support TTL with getOrSet","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834890,"status":"passed","title":"should support TTL with getOrSet"},{"ancestorTitles":["CacheService","Cache Warming"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Cache Warming should warm cache with data","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834891,"status":"passed","title":"should warm cache with data"},{"ancestorTitles":["CacheService","Cache Warming"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Cache Warming should skip existing keys during warming","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834892,"status":"passed","title":"should skip existing keys during warming"},{"ancestorTitles":["CacheService","Statistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Statistics should track hits and misses","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834894,"status":"passed","title":"should track hits and misses"},{"ancestorTitles":["CacheService","Statistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Statistics should track evictions","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834895,"status":"passed","title":"should track evictions"},{"ancestorTitles":["CacheService","Statistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Statistics should track memory usage","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834896,"status":"passed","title":"should track memory usage"},{"ancestorTitles":["CacheService","Statistics"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Statistics should reset statistics","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834898,"status":"passed","title":"should reset statistics"},{"ancestorTitles":["CacheService","Automatic Cleanup"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Automatic Cleanup should automatically clean expired entries","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834899,"status":"passed","title":"should automatically clean expired entries"},{"ancestorTitles":["CacheService","Namespaces"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Namespaces should isolate different namespaces","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834900,"status":"passed","title":"should isolate different namespaces"},{"ancestorTitles":["CacheService","Complex Data Types"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Complex Data Types should cache objects","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834901,"status":"passed","title":"should cache objects"},{"ancestorTitles":["CacheService","Complex Data Types"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Complex Data Types should cache arrays","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834902,"status":"passed","title":"should cache arrays"},{"ancestorTitles":["CacheService","Complex Data Types"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"CacheService Complex Data Types should cache nested structures","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834903,"status":"passed","title":"should cache nested structures"}],"endTime":1761339834905,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\cacheService.test.ts","startTime":1761339834801,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ThemeService","Singleton Pattern"],"duration":6,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Singleton Pattern should return the same instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834968,"status":"passed","title":"should return the same instance"},{"ancestorTitles":["ThemeService","Theme Presets"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Presets should have all required presets","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339834974,"status":"passed","title":"should have all required presets"},{"ancestorTitles":["ThemeService","Theme Presets"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Presets should filter presets by mode","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339834976,"status":"passed","title":"should filter presets by mode"},{"ancestorTitles":["ThemeService","Theme Presets"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Presets should get specific preset by ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834978,"status":"passed","title":"should get specific preset by ID"},{"ancestorTitles":["ThemeService","Theme Presets"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Presets should return undefined for invalid preset ID","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834979,"status":"passed","title":"should return undefined for invalid preset ID"},{"ancestorTitles":["ThemeService","Apply Preset"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Apply Preset should apply dark theme preset","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834981,"status":"passed","title":"should apply dark theme preset"},{"ancestorTitles":["ThemeService","Apply Preset"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Apply Preset should apply light theme preset","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339834985,"status":"passed","title":"should apply light theme preset"},{"ancestorTitles":["ThemeService","Apply Preset"],"duration":8,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Apply Preset should throw error for invalid preset","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834987,"status":"passed","title":"should throw error for invalid preset"},{"ancestorTitles":["ThemeService","Apply Preset"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Apply Preset should apply preset with transition","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834995,"status":"passed","title":"should apply preset with transition"},{"ancestorTitles":["ThemeService","Custom Themes"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Custom Themes should create custom preset from current colors","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339834997,"status":"passed","title":"should create custom preset from current colors"},{"ancestorTitles":["ThemeService","Custom Themes"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Custom Themes should throw error when creating preset without custom colors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339834999,"status":"passed","title":"should throw error when creating preset without custom colors"},{"ancestorTitles":["ThemeService","Theme Export/Import"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Export/Import should export current theme","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339835000,"status":"passed","title":"should export current theme"},{"ancestorTitles":["ThemeService","Theme Export/Import"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Export/Import should import theme","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835002,"status":"passed","title":"should import theme"},{"ancestorTitles":["ThemeService","Theme Export/Import"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Theme Export/Import should throw error for unsupported version","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835004,"status":"passed","title":"should throw error for unsupported version"},{"ancestorTitles":["ThemeService","Contrast Ratio"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Contrast Ratio should calculate contrast ratio","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835005,"status":"passed","title":"should calculate contrast ratio"},{"ancestorTitles":["ThemeService","Contrast Ratio"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Contrast Ratio should calculate same color contrast","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835007,"status":"passed","title":"should calculate same color contrast"},{"ancestorTitles":["ThemeService","Contrast Ratio"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Contrast Ratio should calculate intermediate contrast","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835008,"status":"passed","title":"should calculate intermediate contrast"},{"ancestorTitles":["ThemeService","Accessibility Validation"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Accessibility Validation should validate accessible theme","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835009,"status":"passed","title":"should validate accessible theme"},{"ancestorTitles":["ThemeService","Accessibility Validation"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Accessibility Validation should detect low contrast warnings","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835011,"status":"passed","title":"should detect low contrast warnings"},{"ancestorTitles":["ThemeService","Auto-Generated Palette"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Auto-Generated Palette should generate dark palette","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835013,"status":"passed","title":"should generate dark palette"},{"ancestorTitles":["ThemeService","Auto-Generated Palette"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Auto-Generated Palette should generate light palette","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835015,"status":"passed","title":"should generate light palette"},{"ancestorTitles":["ThemeService","Reset to Default"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Reset to Default should reset dark theme to default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835016,"status":"passed","title":"should reset dark theme to default"},{"ancestorTitles":["ThemeService","Reset to Default"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Reset to Default should reset light theme to default","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835019,"status":"passed","title":"should reset light theme to default"},{"ancestorTitles":["ThemeService","Get Current Colors"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Get Current Colors should return current custom colors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835021,"status":"passed","title":"should return current custom colors"},{"ancestorTitles":["ThemeService","Get Current Colors"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Get Current Colors should return undefined when no custom colors","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835022,"status":"passed","title":"should return undefined when no custom colors"},{"ancestorTitles":["ThemeService","Cleanup"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ThemeService Cleanup should clean up resources on destroy","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835024,"status":"passed","title":"should clean up resources on destroy"}],"endTime":1761339835027,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\themeService.test.ts","startTime":1761339834912,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["ProfileService","initialize"],"duration":16,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService initialize should initialize the service and register IPC handlers","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835076,"status":"passed","title":"should initialize the service and register IPC handlers"},{"ancestorTitles":["ProfileService","initialize"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService initialize should not re-initialize if already initialized","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835093,"status":"passed","title":"should not re-initialize if already initialized"},{"ancestorTitles":["ProfileService","getProfiles"],"duration":9,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService getProfiles should return sorted profiles","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835095,"status":"passed","title":"should return sorted profiles"},{"ancestorTitles":["ProfileService","getCurrentProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService getCurrentProfile should return the active profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835105,"status":"passed","title":"should return the active profile"},{"ancestorTitles":["ProfileService","getCurrentProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService getCurrentProfile should return null if no active profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835107,"status":"passed","title":"should return null if no active profile"},{"ancestorTitles":["ProfileService","setCurrentProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService setCurrentProfile should set the active profile by ID","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835109,"status":"passed","title":"should set the active profile by ID"},{"ancestorTitles":["ProfileService","setCurrentProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService setCurrentProfile should set the active profile by company name","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835111,"status":"passed","title":"should set the active profile by company name"},{"ancestorTitles":["ProfileService","setCurrentProfile"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService setCurrentProfile should return false for non-existent profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835113,"status":"passed","title":"should return false for non-existent profile"},{"ancestorTitles":["ProfileService","createProfile"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService createProfile should create a new profile successfully","invocations":1,"location":null,"numPassingAsserts":5,"retryReasons":[],"startAt":1761339835117,"status":"passed","title":"should create a new profile successfully"},{"ancestorTitles":["ProfileService","createProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService createProfile should throw error for duplicate company name","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835120,"status":"passed","title":"should throw error for duplicate company name"},{"ancestorTitles":["ProfileService","updateProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService updateProfile should update an existing profile","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835122,"status":"passed","title":"should update an existing profile"},{"ancestorTitles":["ProfileService","updateProfile"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService updateProfile should throw error for non-existent profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835124,"status":"passed","title":"should throw error for non-existent profile"},{"ancestorTitles":["ProfileService","deleteProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService deleteProfile should delete an existing profile","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835127,"status":"passed","title":"should delete an existing profile"},{"ancestorTitles":["ProfileService","deleteProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService deleteProfile should return false for non-existent profile","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835129,"status":"passed","title":"should return false for non-existent profile"},{"ancestorTitles":["ProfileService","validateProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService validateProfile should validate a correct profile","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835131,"status":"passed","title":"should validate a correct profile"},{"ancestorTitles":["ProfileService","validateProfile"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService validateProfile should detect validation errors","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835133,"status":"passed","title":"should detect validation errors"},{"ancestorTitles":["ProfileService","getCompanyDataPath"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"ProfileService getCompanyDataPath should return correct data path for Windows","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835135,"status":"passed","title":"should return correct data path for Windows"}],"endTime":1761339835138,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\main\\services\\ProfileService.test.ts","startTime":1761339835032,"status":"passed","summary":""},{"assertionResults":[{"ancestorTitles":["PerformanceMonitoringService","Singleton Pattern"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Singleton Pattern should return the same instance","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835191,"status":"passed","title":"should return the same instance"},{"ancestorTitles":["PerformanceMonitoringService","Start/Stop Monitoring"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Start/Stop Monitoring should start monitoring","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835193,"status":"passed","title":"should start monitoring"},{"ancestorTitles":["PerformanceMonitoringService","Start/Stop Monitoring"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Start/Stop Monitoring should not start monitoring twice","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835194,"status":"passed","title":"should not start monitoring twice"},{"ancestorTitles":["PerformanceMonitoringService","Start/Stop Monitoring"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Start/Stop Monitoring should stop monitoring","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835195,"status":"passed","title":"should stop monitoring"},{"ancestorTitles":["PerformanceMonitoringService","Thresholds"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Thresholds should have default thresholds","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835197,"status":"passed","title":"should have default thresholds"},{"ancestorTitles":["PerformanceMonitoringService","Thresholds"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Thresholds should allow custom thresholds","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835200,"status":"passed","title":"should allow custom thresholds"},{"ancestorTitles":["PerformanceMonitoringService","Alerts"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Alerts should create alerts for performance issues","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835201,"status":"passed","title":"should create alerts for performance issues"},{"ancestorTitles":["PerformanceMonitoringService","Alerts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Alerts should filter unacknowledged alerts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835203,"status":"passed","title":"should filter unacknowledged alerts"},{"ancestorTitles":["PerformanceMonitoringService","Alerts"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Alerts should clear alerts","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835205,"status":"passed","title":"should clear alerts"},{"ancestorTitles":["PerformanceMonitoringService","Baselines"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baselines should create baseline","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835206,"status":"passed","title":"should create baseline"},{"ancestorTitles":["PerformanceMonitoringService","Baselines"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baselines should get all baselines","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835207,"status":"passed","title":"should get all baselines"},{"ancestorTitles":["PerformanceMonitoringService","Baselines"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baselines should delete baseline","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835208,"status":"passed","title":"should delete baseline"},{"ancestorTitles":["PerformanceMonitoringService","Baseline Comparison"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baseline Comparison should compare to baseline","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835211,"status":"passed","title":"should compare to baseline"},{"ancestorTitles":["PerformanceMonitoringService","Baseline Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baseline Comparison should detect regressions","invocations":1,"location":null,"numPassingAsserts":2,"retryReasons":[],"startAt":1761339835215,"status":"passed","title":"should detect regressions"},{"ancestorTitles":["PerformanceMonitoringService","Baseline Comparison"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Baseline Comparison should return null for invalid baseline","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835216,"status":"passed","title":"should return null for invalid baseline"},{"ancestorTitles":["PerformanceMonitoringService","Historical Data"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Historical Data should collect historical data","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835217,"status":"passed","title":"should collect historical data"},{"ancestorTitles":["PerformanceMonitoringService","Historical Data"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Historical Data should filter historical data by date range","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835218,"status":"passed","title":"should filter historical data by date range"},{"ancestorTitles":["PerformanceMonitoringService","Export"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Export should export as JSON","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835219,"status":"passed","title":"should export as JSON"},{"ancestorTitles":["PerformanceMonitoringService","Export"],"duration":1,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Export should export as CSV","invocations":1,"location":null,"numPassingAsserts":3,"retryReasons":[],"startAt":1761339835221,"status":"passed","title":"should export as CSV"},{"ancestorTitles":["PerformanceMonitoringService","Export"],"duration":3,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Export should download JSON report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835222,"status":"passed","title":"should download JSON report"},{"ancestorTitles":["PerformanceMonitoringService","Export"],"duration":4,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Export should download CSV report","invocations":1,"location":null,"numPassingAsserts":1,"retryReasons":[],"startAt":1761339835225,"status":"passed","title":"should download CSV report"},{"ancestorTitles":["PerformanceMonitoringService","Clear Data"],"duration":2,"failing":false,"failureDetails":[],"failureMessages":[],"fullName":"PerformanceMonitoringService Clear Data should clear all data","invocations":1,"location":null,"numPassingAsserts":4,"retryReasons":[],"startAt":1761339835229,"status":"passed","title":"should clear all data"}],"endTime":1761339835232,"message":"","name":"D:\\Scripts\\UserMandA\\guiv2\\src\\renderer\\services\\performanceMonitoringService.test.ts","startTime":1761339835144,"status":"passed","summary":""}],"wasInterrupted":false}
