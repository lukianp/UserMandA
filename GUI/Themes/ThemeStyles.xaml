<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- ===========================================================================
    MERGED RESOURCE DICTIONARIES - Centralized Resource Management
    =========================================================================== -->

    <!-- Merge Converter Resources -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Resources/Converters.xaml"/>
        <ResourceDictionary Source="/Themes/Colors.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <!-- ===========================================================================
    HIGH CONTRAST THEME SUPPORT - Resources for accessibility
    =========================================================================== -->

    <!-- High Contrast Brushes (fallback when external theme files unavailable) -->
    <SolidColorBrush x:Key="HighContrastBackgroundBrush" Color="#000000"/>
    <SolidColorBrush x:Key="HighContrastForegroundBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="HighContrastBorderBrush" Color="#FFFFFF"/>
    <SolidColorBrush x:Key="HighContrastAccentBrush" Color="#FFFF00"/>
    <SolidColorBrush x:Key="HighContrastMutedForegroundBrush" Color="#999999"/>

    <!-- ===========================================================================
    COLOR PALETTE - Dark Theme Inspired by Professional Analysis Tools
    =========================================================================== -->

    <!-- Primary Colors -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="#1e3c72"/>
    <SolidColorBrush x:Key="PrimaryDarkBrush" Color="#2a5298"/>
    <SolidColorBrush x:Key="PrimaryLightBrush" Color="#3c5aa6"/>

    <!-- Secondary Colors -->
    <SolidColorBrush x:Key="SecondaryBrush" Color="#4a5568"/>
    <SolidColorBrush x:Key="SecondaryDarkBrush" Color="#2d3748"/>
    <SolidColorBrush x:Key="SecondaryLightBrush" Color="#718096"/>

    <!-- Accent Colors -->
    <SolidColorBrush x:Key="AccentBrush" Color="#4299e1"/>
    <SolidColorBrush x:Key="AccentDarkBrush" Color="#3182ce"/>
    <SolidColorBrush x:Key="AccentLightBrush" Color="#60a5fa"/>

    <!-- Background Colors -->
    <SolidColorBrush x:Key="BackgroundBrush" Color="#0f1419"/>
    <SolidColorBrush x:Key="BackgroundDarkBrush" Color="#0a0e13"/>
    <SolidColorBrush x:Key="BackgroundLightBrush" Color="#1a202c"/>

    <!-- Surface Colors (Cards and Panels) -->
    <SolidColorBrush x:Key="SurfaceBrush" Color="#1a202c"/>
    <SolidColorBrush x:Key="SurfaceDarkBrush" Color="#2d3748"/>
    <SolidColorBrush x:Key="SurfaceLightBrush" Color="#4a5568"/>

    <!-- Text Colors -->
    <SolidColorBrush x:Key="PrimaryTextBrush" Color="#F7FAFC"/>
    <SolidColorBrush x:Key="SecondaryTextBrush" Color="{StaticResource LightForegroundSecondaryColor}"/>
    <SolidColorBrush x:Key="MutedForegroundBrush" Color="#D1D5DB"/>
    <SolidColorBrush x:Key="TertiaryTextBrush" Color="#718096"/>

    <!-- Success, Warning, Error Colors -->
    <SolidColorBrush x:Key="SuccessBrush" Color="#48bb78"/>
    <SolidColorBrush x:Key="SuccessDarkBrush" Color="#38a169"/>
    <SolidColorBrush x:Key="SuccessLightBrush" Color="#68d391"/>

    <SolidColorBrush x:Key="WarningBrush" Color="#ed8936"/>
    <SolidColorBrush x:Key="WarningDarkBrush" Color="#dd6b20"/>
    <SolidColorBrush x:Key="WarningLightBrush" Color="#f6ad55"/>

    <SolidColorBrush x:Key="ErrorBrush" Color="#f56565"/>
    <SolidColorBrush x:Key="ErrorDarkBrush" Color="#e53e3e"/>
    <SolidColorBrush x:Key="ErrorLightBrush" Color="#fc8181"/>

    <!-- Border Colors -->
    <SolidColorBrush x:Key="BorderBrush" Color="#4a5568"/>
    <SolidColorBrush x:Key="BorderDarkBrush" Color="#2d3748"/>
    <SolidColorBrush x:Key="BorderLightBrush" Color="#718096"/>

    <!-- Special Status Colors -->
    <SolidColorBrush x:Key="InfoBrush" Color="#4299e1"/>
    <SolidColorBrush x:Key="CriticalBrush" Color="#ed64a6"/>
    <SolidColorBrush x:Key="DisabledBrush" Color="#718096"/>

    <!-- ===========================================================================
    GRADIENTS for Professional Effects
    =========================================================================== -->

    <LinearGradientBrush x:Key="PrimaryGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#1e3c72" Offset="0"/>
        <GradientStop Color="#2a5298" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="AccentGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#4299e1" Offset="0"/>
        <GradientStop Color="#3182ce" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="SuccessGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#48bb78" Offset="0"/>
        <GradientStop Color="#38a169" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="WarningGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#ed8936" Offset="0"/>
        <GradientStop Color="#dd6b20" Offset="1"/>
    </LinearGradientBrush>

    <LinearGradientBrush x:Key="ErrorGradient" StartPoint="0,0" EndPoint="1,1">
        <GradientStop Color="#f56565" Offset="0"/>
        <GradientStop Color="#e53e3e" Offset="1"/>
    </LinearGradientBrush>

    <!-- ===========================================================================
    TYPOGRAPHY - Consistent Font Sizes and Weights
    =========================================================================== -->

    <Style x:Key="HeaderTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="24"/>
        <Setter Property="FontWeight" Value="SemiBold"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="0,0,0,12"/>
    </Style>

    <Style x:Key="SubsectionHeaderStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>

    <Style x:Key="BodyTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,0,0,4"/>
    </Style>

    <Style x:Key="CaptionTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource SecondaryTextBrush}"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <Style x:Key="SmallTextStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TertiaryTextBrush}"/>
        <Setter Property="FontSize" Value="11"/>
    </Style>

    <!-- ===========================================================================
    BUTTON STYLES - Modern Flat Design with Hover Effects
    =========================================================================== -->

    <Style x:Key="ThemedButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ContentSite"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceLightBrush}"/>
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Primary Action Button -->
    <Style x:Key="PrimaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="{StaticResource PrimaryGradient}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryDarkBrush}"/>
    </Style>

    <!-- Success Button -->
    <Style x:Key="SuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SuccessGradient}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource SuccessDarkBrush}"/>
    </Style>

    <!-- Warning Button -->
    <Style x:Key="WarningButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="{StaticResource WarningGradient}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource WarningDarkBrush}"/>
    </Style>

    <!-- Error Button -->
    <Style x:Key="DangerButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="{StaticResource ErrorGradient}"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="{StaticResource ErrorDarkBrush}"/>
    </Style>

    <!-- Secondary Button -->
    <Style x:Key="SecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource SecondaryDarkBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ContentSite"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SecondaryLightBrush}"/>
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SecondaryDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Outline Button -->
    <Style x:Key="OutlineButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ContentSite"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource DisabledBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Ghost Button -->
    <Style x:Key="GhostButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ContentSite"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceLightBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{StaticResource DisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ===========================================================================
    TEXTBOX STYLES - Clean and Consistent Input Fields
    =========================================================================== -->

    <Style x:Key="ThemedTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="12,8"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4">
                        <ScrollViewer x:Name="PART_ContentHost" Padding="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                            <Setter Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                            <Setter Property="Foreground" Value="{StaticResource DisabledBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ===========================================================================
    CARD/PANEL STYLES - Consistent Container Styling
    =========================================================================== -->

    <Style x:Key="ThemedCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="20"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="270" ShadowDepth="2" BlurRadius="8" Opacity="0.2"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Metric Card for Dashboard/Status Displays -->
    <Style x:Key="MetricCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderLightBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="8,0,8,0"/>
        <Setter Property="RenderTransformOrigin" Value="0.5,0.5"/>
        <Setter Property="RenderTransform">
            <Setter.Value>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black" Direction="270" ShadowDepth="2" BlurRadius="6" Opacity="0.15"/>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                <Setter Property="Cursor" Value="Hand"/>
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect Color="Black" Direction="270" ShadowDepth="4" BlurRadius="10" Opacity="0.25"/>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- ===========================================================================
    SIDEBAR NAVIGATION STYLES
    =========================================================================== -->

    <Style x:Key="SidebarButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="56"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="Padding" Value="24,0"/>
        <Setter Property="FontSize" Value="15"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder" Background="{TemplateBinding Background}"
                            CornerRadius="0,12,12,0"
                            Margin="0,2,8,2"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceDarkBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- ===========================================================================
    GRID SPANNING STYLES - 12-Column Responsive Layout
    =========================================================================== -->

    <!-- Responsive Grid Column Definitions - Use these in your views -->
    <Style x:Key="ResponsiveGridStyle" TargetType="Grid">
        <Setter Property="Margin" Value="24"/>
        <Style.Triggers>
            <!-- You can add adaptive column definitions here based on window size -->
        </Style.Triggers>
    </Style>

    <!-- Span Classes for Responsive Layout -->
    <Style x:Key="Col1" TargetType="FrameworkElement">
        <!-- Use Grid.ColumnSpan="1" in your elements -->
    </Style>

    <Style x:Key="Col2" TargetType="FrameworkElement">
        <!-- Use Grid.ColumnSpan="2" in your elements -->
    </Style>

    <Style x:Key="Col3" TargetType="FrameworkElement">
        <!-- Use Grid.ColumnSpan="3" in your elements -->
    </Style>

    <Style x:Key="Col4" TargetType="FrameworkElement">
        <!-- Use Grid.ColumnSpan="4" in your elements -->
    </Style>

    <Style x:Key="Col6" TargetType="FrameworkElement">
        <!-- Use Grid.ColumnSpan="6" in your elements -->
    </Style>

    <Style x:Key="Col12" TargetType="FrameworkElement">
        <!-- Use Grid.ColumnSpan="12" in your elements (full width) -->
    </Style>

    <!-- ===========================================================================
    SPECIAL COMPONENT STYLES
    =========================================================================== -->

    <!-- Status Indicator Dots -->
    <Style x:Key="StatusIndicatorStyle" TargetType="Ellipse">
        <Setter Property="Width" Value="8"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Fill" Value="{StaticResource SuccessBrush}"/>
    </Style>

    <!-- Progress Bar Style -->
    <Style x:Key="ThemedProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Background" Value="{StaticResource SurfaceDarkBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
        <Setter Property="Height" Value="4"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}" CornerRadius="2">
                        <Border x:Name="PART_Track" Background="{TemplateBinding Background}" CornerRadius="2">
                            <Border x:Name="PART_Indicator" Background="{TemplateBinding Foreground}"
                                    HorizontalAlignment="Left" CornerRadius="2"/>
                        </Border>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Loading Spinner (for future use) -->
    <Style x:Key="LoadingSpinnerStyle" TargetType="ProgressBar">
        <Setter Property="IsIndeterminate" Value="True"/>
        <Setter Property="Height" Value="4"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{StaticResource AccentBrush}"/>
    </Style>

    <!-- Rounded Button Style -->
    <Style x:Key="RoundedButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="{StaticResource SecondaryBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontSize" Value="13"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Height" Value="Auto"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="MainBorder"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="8"
                            Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" x:Name="ContentSite"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceLightBrush}"/>
                            <Setter TargetName="MainBorder" Property="BorderBrush" Value="{StaticResource AccentBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource SurfaceDarkBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="MainBorder" Property="Background" Value="{StaticResource BackgroundLightBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>