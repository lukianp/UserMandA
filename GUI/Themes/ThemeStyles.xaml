<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Button Styles -->
    <Style x:Key="ThemedButtonStyle" TargetType="Button">
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="Margin" Value="4"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}" 
                            CornerRadius="6"
                            x:Name="ButtonBorder">
                        <ContentPresenter HorizontalAlignment="Center" 
                                        VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Background" 
                                    Value="{DynamicResource ButtonHoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.8"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ButtonBorder" Property="Opacity" Value="0.5"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Secondary Button Style -->
    <Style x:Key="ThemedSecondaryButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
    </Style>

    <!-- Success Button Style -->
    <Style x:Key="ThemedSuccessButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- Danger Button Style -->
    <Style x:Key="ThemedDangerButtonStyle" TargetType="Button" BasedOn="{StaticResource ThemedButtonStyle}">
        <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
        <Setter Property="Foreground" Value="White"/>
    </Style>

    <!-- TextBox Styles -->
    <Style x:Key="ThemedTextBoxStyle" TargetType="TextBox">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="4"
                            x:Name="BorderElement">
                        <ScrollViewer x:Name="PART_ContentHost" 
                                    Padding="{TemplateBinding Padding}"
                                    VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter TargetName="BorderElement" Property="BorderBrush" 
                                    Value="{DynamicResource AccentBrush}"/>
                            <Setter TargetName="BorderElement" Property="BorderThickness" Value="2"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="BorderElement" Property="Opacity" Value="0.6"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Valid TextBox Style -->
    <Style x:Key="ThemedValidTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource ThemedTextBoxStyle}">
        <Setter Property="BorderBrush" Value="{DynamicResource ValidBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <!-- Invalid TextBox Style -->
    <Style x:Key="ThemedInvalidTextBoxStyle" TargetType="TextBox" BasedOn="{StaticResource ThemedTextBoxStyle}">
        <Setter Property="BorderBrush" Value="{DynamicResource InvalidBorderBrush}"/>
        <Setter Property="BorderThickness" Value="2"/>
    </Style>

    <!-- ComboBox Style -->
    <Style x:Key="ThemedComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Background" Value="{DynamicResource InputBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="8,6"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- CheckBox Style -->
    <Style x:Key="ThemedCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="Margin" Value="0,4"/>
    </Style>

    <!-- Label Style -->
    <Style x:Key="ThemedLabelStyle" TargetType="Label">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <!-- TextBlock Styles -->
    <Style x:Key="ThemedTextBlockStyle" TargetType="TextBlock">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
        <Setter Property="FontSize" Value="14"/>
    </Style>

    <Style x:Key="ThemedHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource ThemedTextBlockStyle}">
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <Style x:Key="ThemedSubHeaderTextStyle" TargetType="TextBlock" BasedOn="{StaticResource ThemedTextBlockStyle}">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Margin" Value="0,0,0,8"/>
    </Style>

    <Style x:Key="ThemedSecondaryTextStyle" TargetType="TextBlock" BasedOn="{StaticResource ThemedTextBlockStyle}">
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="FontSize" Value="12"/>
    </Style>

    <!-- Validation Text Styles -->
    <Style x:Key="ThemedValidationTextStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="11"/>
        <Setter Property="Margin" Value="0,4,0,8"/>
        <Setter Property="FontWeight" Value="Medium"/>
    </Style>

    <Style x:Key="ThemedValidationErrorTextStyle" TargetType="TextBlock" BasedOn="{StaticResource ThemedValidationTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource ErrorBrush}"/>
    </Style>

    <Style x:Key="ThemedValidationSuccessTextStyle" TargetType="TextBlock" BasedOn="{StaticResource ThemedValidationTextStyle}">
        <Setter Property="Foreground" Value="{DynamicResource SuccessBrush}"/>
    </Style>

    <!-- Card Style -->
    <Style x:Key="ThemedCardStyle" TargetType="Border">
        <Setter Property="Background" Value="{DynamicResource CardBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="8"/>
        <Setter Property="Padding" Value="16"/>
        <Setter Property="Margin" Value="0,0,0,16"/>
    </Style>

    <!-- Progress Bar Style -->
    <Style x:Key="ThemedProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Background" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="8"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ProgressBar">
                    <Border Background="{TemplateBinding Background}"
                            CornerRadius="4">
                        <Grid>
                            <Rectangle x:Name="PART_Track" Fill="Transparent"/>
                            <Rectangle x:Name="PART_Indicator"
                                     Fill="{TemplateBinding Foreground}"
                                     HorizontalAlignment="Left"/>
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TabControl Style -->
    <Style x:Key="ThemedTabControlStyle" TargetType="TabControl">
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <!-- TabItem Style -->
    <Style x:Key="ThemedTabItemStyle" TargetType="TabItem">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="{DynamicResource SecondaryTextBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="0,0,0,2"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontWeight" Value="Medium"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TabItem">
                    <Border Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            x:Name="TabBorder">
                        <ContentPresenter ContentSource="Header"
                                        HorizontalAlignment="Center"
                                        VerticalAlignment="Center"
                                        Margin="{TemplateBinding Padding}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter TargetName="TabBorder" Property="BorderBrush" 
                                    Value="{DynamicResource AccentBrush}"/>
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Window Style -->
    <Style x:Key="ThemedWindowStyle" TargetType="Window">
        <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
    </Style>

</ResourceDictionary>