<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Lightweight Button Template -->
    <ControlTemplate x:Key="LightweightButtonTemplate" TargetType="Button">
        <Border x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="4"
                Padding="{TemplateBinding Padding}">
            <ContentPresenter x:Name="ContentPresenter"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            Focusable="False"
                            RecognizesAccessKey="True"/>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" 
                        Value="{DynamicResource ButtonBackgroundPointerOver}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter TargetName="Border" Property="Background" 
                        Value="{DynamicResource ButtonBackgroundPressed}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Lightweight TextBox Template -->
    <ControlTemplate x:Key="LightweightTextBoxTemplate" TargetType="TextBox">
        <Border x:Name="Border"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="4">
            <Grid>
                <ScrollViewer x:Name="PART_ContentHost"
                            Margin="8,4"
                            Focusable="False"
                            HorizontalScrollBarVisibility="Hidden"
                            VerticalScrollBarVisibility="Hidden"/>
                
                <!-- Placeholder Text -->
                <TextBlock x:Name="PlaceholderText"
                          Text="{TemplateBinding Tag}"
                          Foreground="{DynamicResource MutedForegroundBrush}"
                          Margin="8,4"
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                          IsHitTestVisible="False"
                          Visibility="Collapsed"/>
            </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" 
                        Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="Border" Property="BorderBrush" 
                        Value="{DynamicResource AccentBrush}"/>
                <Setter TargetName="Border" Property="BorderThickness" Value="2"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="Text" Value=""/>
                    <Condition Property="IsFocused" Value="False"/>
                </MultiTrigger.Conditions>
                <Setter TargetName="PlaceholderText" Property="Visibility" Value="Visible"/>
            </MultiTrigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Lightweight CheckBox Template -->
    <ControlTemplate x:Key="LightweightCheckBoxTemplate" TargetType="CheckBox">
        <Grid x:Name="RootGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <Border x:Name="CheckBoxBorder"
                    Grid.Column="0"
                    Width="16" Height="16"
                    Background="{DynamicResource SurfaceBrush}"
                    BorderBrush="{DynamicResource BorderBrush}"
                    BorderThickness="1"
                    CornerRadius="3"
                    VerticalAlignment="Center">
                
                <Path x:Name="CheckGlyph"
                      Data="M 0 3 L 3 6 L 8 1"
                      Stroke="{DynamicResource AccentBrush}"
                      StrokeThickness="2"
                      Visibility="Collapsed"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Center"/>
            </Border>
            
            <ContentPresenter Grid.Column="1"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"/>
        </Grid>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="CheckGlyph" Property="Visibility" Value="Visible"/>
                <Setter TargetName="CheckBoxBorder" Property="Background" 
                        Value="{DynamicResource AccentBrush}"/>
                <Setter TargetName="CheckGlyph" Property="Stroke" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="CheckBoxBorder" Property="BorderBrush" 
                        Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Lightweight RadioButton Template -->
    <ControlTemplate x:Key="LightweightRadioButtonTemplate" TargetType="RadioButton">
        <Grid x:Name="RootGrid">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="20"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <Ellipse x:Name="RadioBorder"
                     Grid.Column="0"
                     Width="16" Height="16"
                     Fill="{DynamicResource SurfaceBrush}"
                     Stroke="{DynamicResource BorderBrush}"
                     StrokeThickness="1"
                     VerticalAlignment="Center"/>
            
            <Ellipse x:Name="RadioGlyph"
                     Grid.Column="0"
                     Width="8" Height="8"
                     Fill="{DynamicResource AccentBrush}"
                     Visibility="Collapsed"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"/>
            
            <ContentPresenter Grid.Column="1"
                            Margin="8,0,0,0"
                            VerticalAlignment="Center"
                            RecognizesAccessKey="True"/>
        </Grid>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter TargetName="RadioGlyph" Property="Visibility" Value="Visible"/>
                <Setter TargetName="RadioBorder" Property="Fill" 
                        Value="{DynamicResource AccentBrush}"/>
                <Setter TargetName="RadioGlyph" Property="Fill" Value="White"/>
            </Trigger>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="RadioBorder" Property="Stroke" 
                        Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Lightweight ComboBox Template -->
    <ControlTemplate x:Key="LightweightComboBoxTemplate" TargetType="ComboBox">
        <Grid x:Name="RootGrid">
            <Border x:Name="Background"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    CornerRadius="4"/>
            
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                
                <ContentPresenter x:Name="ContentSite"
                                Grid.Column="0"
                                Margin="8,0,0,0"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Content="{TemplateBinding SelectionBoxItem}"
                                ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                                ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}"/>
                
                <ToggleButton x:Name="DropDownToggle"
                            Grid.Column="1"
                            Focusable="False"
                            IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press"
                            Background="Transparent"
                            BorderThickness="0">
                    <Path Data="M 0 0 L 4 4 L 8 0 Z"
                          Fill="{DynamicResource ForegroundBrush}"
                          HorizontalAlignment="Center"
                          VerticalAlignment="Center"/>
                </ToggleButton>
            </Grid>
            
            <Popup x:Name="PART_Popup"
                   Placement="Bottom"
                   IsOpen="{TemplateBinding IsDropDownOpen}"
                   AllowsTransparency="True"
                   Focusable="False"
                   PopupAnimation="Slide">
                <Border Background="{DynamicResource SurfaceBrush}"
                        BorderBrush="{DynamicResource BorderBrush}"
                        BorderThickness="1"
                        CornerRadius="4"
                        MaxHeight="200">
                    <ScrollViewer>
                        <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"/>
                    </ScrollViewer>
                </Border>
            </Popup>
        </Grid>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Background" Property="BorderBrush" 
                        Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsFocused" Value="True">
                <Setter TargetName="Background" Property="BorderBrush" 
                        Value="{DynamicResource AccentBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Lightweight TabItem Template -->
    <ControlTemplate x:Key="LightweightTabItemTemplate" TargetType="TabItem">
        <Grid x:Name="templateRoot">
            <Border x:Name="mainBorder"
                    Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="1,1,1,0"
                    Margin="0"
                    Padding="12,8">
                <ContentPresenter x:Name="contentPresenter"
                                HorizontalAlignment="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                VerticalAlignment="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"
                                ContentSource="Header"
                                Focusable="False"
                                RecognizesAccessKey="True"/>
            </Border>
        </Grid>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="mainBorder" Property="Background" 
                        Value="{DynamicResource ButtonBackgroundPointerOver}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="mainBorder" Property="Background" 
                        Value="{DynamicResource SurfaceBrush}"/>
                <Setter TargetName="mainBorder" Property="BorderBrush" 
                        Value="{DynamicResource AccentBrush}"/>
                <Setter TargetName="mainBorder" Property="BorderThickness" Value="1,1,1,0"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Lightweight ListBoxItem Template -->
    <ControlTemplate x:Key="LightweightListBoxItemTemplate" TargetType="ListBoxItem">
        <Border x:Name="Border"
                Background="Transparent"
                Padding="8,4"
                SnapsToDevicePixels="True">
            <ContentPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter TargetName="Border" Property="Background" 
                        Value="{DynamicResource ListItemBackgroundPointerOver}"/>
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter TargetName="Border" Property="Background" 
                        Value="{DynamicResource AccentBrush}"/>
                <Setter Property="Foreground" Value="White"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Lightweight ProgressBar Template -->
    <ControlTemplate x:Key="LightweightProgressBarTemplate" TargetType="ProgressBar">
        <Border x:Name="ProgressBarRoot"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                CornerRadius="8">
            <Grid x:Name="TemplateRoot">
                <Rectangle x:Name="PART_Track"
                          Fill="{DynamicResource CardBrush}"
                          RadiusX="8" RadiusY="8"/>
                <Rectangle x:Name="PART_Indicator"
                          Fill="{DynamicResource AccentBrush}"
                          HorizontalAlignment="Left"
                          RadiusX="8" RadiusY="8"/>
            </Grid>
        </Border>
        
        <ControlTemplate.Triggers>
            <Trigger Property="IsIndeterminate" Value="True">
                <Setter TargetName="PART_Indicator" Property="Width" Value="50"/>
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard RepeatBehavior="Forever">
                            <DoubleAnimation Storyboard.TargetName="PART_Indicator"
                                           Storyboard.TargetProperty="(Canvas.Left)"
                                           From="-50" To="100" Duration="0:0:1"
                                           AutoReverse="True"/>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <!-- Styles using lightweight templates -->
    <Style x:Key="LightweightButtonStyle" TargetType="Button">
        <Setter Property="Template" Value="{StaticResource LightweightButtonTemplate}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackground}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ButtonBorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Padding" Value="16,8"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="LightweightTextBoxStyle" TargetType="TextBox">
        <Setter Property="Template" Value="{StaticResource LightweightTextBoxTemplate}"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}"/>
        <Setter Property="MinHeight" Value="32"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
    </Style>

    <Style x:Key="LightweightCheckBoxStyle" TargetType="CheckBox">
        <Setter Property="Template" Value="{StaticResource LightweightCheckBoxTemplate}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="LightweightRadioButtonStyle" TargetType="RadioButton">
        <Setter Property="Template" Value="{StaticResource LightweightRadioButtonTemplate}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Cursor" Value="Hand"/>
    </Style>

    <Style x:Key="LightweightComboBoxStyle" TargetType="ComboBox">
        <Setter Property="Template" Value="{StaticResource LightweightComboBoxTemplate}"/>
        <Setter Property="Background" Value="{DynamicResource SurfaceBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}"/>
        <Setter Property="MinHeight" Value="32"/>
    </Style>

    <Style x:Key="LightweightTabItemStyle" TargetType="TabItem">
        <Setter Property="Template" Value="{StaticResource LightweightTabItemTemplate}"/>
        <Setter Property="Background" Value="{DynamicResource CardBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}"/>
    </Style>

    <Style x:Key="LightweightListBoxItemStyle" TargetType="ListBoxItem">
        <Setter Property="Template" Value="{StaticResource LightweightListBoxItemTemplate}"/>
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="FontFamily" Value="{StaticResource PrimaryFontFamily}"/>
        <Setter Property="FontSize" Value="{StaticResource FontSizeMedium}"/>
    </Style>

    <Style x:Key="LightweightProgressBarStyle" TargetType="ProgressBar">
        <Setter Property="Template" Value="{StaticResource LightweightProgressBarTemplate}"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Height" Value="8"/>
    </Style>

</ResourceDictionary>