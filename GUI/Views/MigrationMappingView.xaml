<UserControl x:Class="MandADiscoverySuite.Views.MigrationMappingView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:controls="clr-namespace:MandADiscoverySuite.Controls"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="1400">

    <UserControl.Resources>
        <!-- Material Design Color Palette -->
        <SolidColorBrush x:Key="PrimaryBrush" Color="#2196F3"/>
        <SolidColorBrush x:Key="AccentBrush" Color="#FF4081"/>
        <SolidColorBrush x:Key="SurfaceBrush" Color="#FAFAFA"/>
        <SolidColorBrush x:Key="CardBrush" Color="#FFFFFF"/>
        <SolidColorBrush x:Key="TextPrimaryBrush" Color="#212121"/>
        <SolidColorBrush x:Key="TextSecondaryBrush" Color="#757575"/>
        <SolidColorBrush x:Key="DividerBrush" Color="#E0E0E0"/>
        <SolidColorBrush x:Key="ErrorBrush" Color="#F44336"/>
        <SolidColorBrush x:Key="SuccessBrush" Color="#4CAF50"/>
        <SolidColorBrush x:Key="WarningBrush" Color="#FF9800"/>

        <!-- Card Style -->
        <Style x:Key="CardStyle" TargetType="Border">
            <Setter Property="Background" Value="{StaticResource CardBrush}"/>
            <Setter Property="CornerRadius" Value="8"/>
            <Setter Property="Padding" Value="16"/>
            <Setter Property="Margin" Value="8"/>
            <Setter Property="Effect">
                <Setter.Value>
                    <DropShadowEffect Color="Black" Opacity="0.1" ShadowDepth="2" BlurRadius="8"/>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Header Style -->
        <Style x:Key="HeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="20"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="Margin" Value="0,0,0,16"/>
        </Style>

        <!-- Subheader Style -->
        <Style x:Key="SubHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Foreground" Value="{StaticResource TextPrimaryBrush}"/>
            <Setter Property="Margin" Value="0,0,0,8"/>
        </Style>

        <!-- Primary Button Style -->
        <Style x:Key="PrimaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4" 
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#1976D2"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="#1565C0"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Secondary Button Style -->
        <Style x:Key="SecondaryButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Padding" Value="16,8"/>
            <Setter Property="Margin" Value="4"/>
            <Setter Property="FontWeight" Value="Medium"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Border Background="{TemplateBinding Background}" 
                                CornerRadius="4" 
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="{TemplateBinding Padding}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="#E3F2FD"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!-- Status Indicator Style -->
        <Style x:Key="StatusIndicatorStyle" TargetType="Ellipse">
            <Setter Property="Width" Value="8"/>
            <Setter Property="Height" Value="8"/>
            <Setter Property="Margin" Value="4"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding MappingStatus}" Value="Pending">
                    <Setter Property="Fill" Value="{StaticResource WarningBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MappingStatus}" Value="Mapped">
                    <Setter Property="Fill" Value="{StaticResource SuccessBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MappingStatus}" Value="Conflict">
                    <Setter Property="Fill" Value="{StaticResource ErrorBrush}"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding MappingStatus}" Value="Skipped">
                    <Setter Property="Fill" Value="{StaticResource TextSecondaryBrush}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </UserControl.Resources>

    <Grid Background="{StaticResource SurfaceBrush}">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!-- Header -->
        <Border Grid.Row="0" Background="{StaticResource CardBrush}" Padding="24,16">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0">
                    <TextBlock Text="Migration Mapping" Style="{StaticResource HeaderStyle}"/>
                    <TextBlock Text="Map users, groups, and resources between source and target environments" 
                               Foreground="{StaticResource TextSecondaryBrush}"/>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <ComboBox ItemsSource="{Binding AvailableProfiles}"
                              SelectedItem="{Binding SelectedProfile}"
                              Width="200" Margin="0,0,8,0"/>
                    <Button Content="Export Mappings" Style="{StaticResource SecondaryButtonStyle}" 
                            Command="{Binding ExportMappingsCommand}"/>
                    <Button Content="Import Mappings" Style="{StaticResource SecondaryButtonStyle}" 
                            Command="{Binding ImportMappingsCommand}"/>
                    <Button Content="Preview" Style="{StaticResource PrimaryButtonStyle}" 
                            Command="{Binding PreviewMappingsCommand}"/>
                </StackPanel>
            </Grid>
        </Border>

        <!-- Mapping Statistics -->
        <Border Grid.Row="1" Background="{StaticResource CardBrush}" Padding="24,16" 
                Visibility="{Binding HasData, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" HorizontalAlignment="Center">
                    <TextBlock Text="{Binding TotalMappings}" FontSize="24" FontWeight="Bold" 
                               Foreground="{StaticResource PrimaryBrush}" HorizontalAlignment="Center"/>
                    <TextBlock Text="Total Mappings" HorizontalAlignment="Center" 
                               Foreground="{StaticResource TextSecondaryBrush}"/>
                </StackPanel>

                <StackPanel Grid.Column="1" HorizontalAlignment="Center">
                    <TextBlock Text="{Binding ValidMappings}" FontSize="24" FontWeight="Bold" 
                               Foreground="{StaticResource SuccessBrush}" HorizontalAlignment="Center"/>
                    <TextBlock Text="Valid" HorizontalAlignment="Center" 
                               Foreground="{StaticResource TextSecondaryBrush}"/>
                </StackPanel>

                <StackPanel Grid.Column="2" HorizontalAlignment="Center">
                    <TextBlock Text="{Binding ConflictedMappings}" FontSize="24" FontWeight="Bold" 
                               Foreground="{StaticResource ErrorBrush}" HorizontalAlignment="Center"/>
                    <TextBlock Text="Conflicts" HorizontalAlignment="Center" 
                               Foreground="{StaticResource TextSecondaryBrush}"/>
                </StackPanel>

                <StackPanel Grid.Column="3" HorizontalAlignment="Center">
                    <TextBlock Text="{Binding UnmappedItems}" FontSize="24" FontWeight="Bold" 
                               Foreground="{StaticResource WarningBrush}" HorizontalAlignment="Center"/>
                    <TextBlock Text="Unmapped" HorizontalAlignment="Center" 
                               Foreground="{StaticResource TextSecondaryBrush}"/>
                </StackPanel>

                <Button Grid.Column="4" Content="Validate All" Style="{StaticResource PrimaryButtonStyle}"
                        Command="{Binding ValidateMappingsCommand}"
                        IsEnabled="{Binding IsValidationRunning, Converter={StaticResource InvertBooleanConverter}}"/>
            </Grid>
        </Border>

        <!-- Main Content Tabs -->
        <TabControl Grid.Row="2" Margin="0" TabStripPlacement="Top">
            <!-- User Mapping Tab -->
            <TabItem Header="User Mapping">
                <Grid Margin="16">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- User Mapping Controls -->
                    <Border Grid.Row="0" Style="{StaticResource CardStyle}">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <!-- Header and Actions -->
                            <Grid Grid.Row="0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="User Mappings" Style="{StaticResource SubHeaderStyle}"/>

                                <StackPanel Grid.Column="1" Orientation="Horizontal">
                                    <Button Content="Auto Map Users" Style="{StaticResource PrimaryButtonStyle}"
                                            Command="{Binding AutoMapUsersCommand}"/>
                                    <Button Content="Clear All" Style="{StaticResource SecondaryButtonStyle}"/>
                                </StackPanel>
                            </Grid>

                            <!-- Filters -->
                            <Grid Grid.Row="1" Margin="0,16,0,0">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBox Grid.Column="0" Text="{Binding UserSearchText, UpdateSourceTrigger=PropertyChanged}"
                                         Margin="0,0,8,0">
                                </TextBox>

                                <CheckBox Grid.Column="1" Content="Conflicts Only" 
                                          IsChecked="{Binding ShowOnlyConflicts}"
                                          VerticalAlignment="Center" Margin="0,0,8,0"/>

                                <CheckBox Grid.Column="2" Content="Unmapped Only" 
                                          IsChecked="{Binding ShowOnlyUnmapped}"
                                          VerticalAlignment="Center"/>
                            </Grid>
                        </Grid>
                    </Border>

                    <!-- User Mapping Grid -->
                    <Border Grid.Row="1" Style="{StaticResource CardStyle}">
                        <DataGrid ItemsSource="{Binding UserMappingsView}"
                                  SelectedItem="{Binding SelectedUserMapping}"
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="False"
                                  CanUserDeleteRows="False"
                                  GridLinesVisibility="Horizontal"
                                  HeadersVisibility="Column"
                                  BorderThickness="0">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Status" Width="60">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Ellipse Style="{StaticResource StatusIndicatorStyle}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Source Identity" Binding="{Binding SourceIdentity}" Width="250"/>
                                <DataGridTextColumn Header="Display Name" Binding="{Binding SourceDisplayName}" Width="200"/>
                                <DataGridTextColumn Header="Source Domain" Binding="{Binding SourceDomain}" Width="150"/>
                                <DataGridTextColumn Header="Target Identity" Binding="{Binding TargetIdentity}" Width="250"/>
                                <DataGridTextColumn Header="Target Domain" Binding="{Binding TargetDomain}" Width="150"/>
                                <DataGridTextColumn Header="Status" Binding="{Binding MappingStatus}" Width="100"/>
                                <DataGridTextColumn Header="Conflict" Binding="{Binding ConflictType}" Width="120"/>
                                <DataGridTemplateColumn Header="Actions" Width="120">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Button Content="Edit" Style="{StaticResource SecondaryButtonStyle}"
                                                        FontSize="10" Padding="8,4" Margin="2"/>
                                                <Button Content="Clear" Style="{StaticResource SecondaryButtonStyle}"
                                                        FontSize="10" Padding="8,4" Margin="2"
                                                        Command="{Binding DataContext.ClearUserMappingCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                        CommandParameter="{Binding}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                </Grid>
            </TabItem>

            <!-- Group Mapping Tab -->
            <TabItem Header="Group Mapping">
                <Grid Margin="16">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="2*"/>
                        <ColumnDefinition Width="8"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <!-- Left Panel: Group Mappings -->
                    <Grid Grid.Column="0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <!-- Group Mapping Controls -->
                        <Border Grid.Row="0" Style="{StaticResource CardStyle}">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>

                                <!-- Header and Actions -->
                                <Grid Grid.Row="0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBlock Grid.Column="0" Text="Group Mappings" Style="{StaticResource SubHeaderStyle}"/>

                                    <StackPanel Grid.Column="1" Orientation="Horizontal">
                                        <Button Content="Auto Map Groups" Style="{StaticResource PrimaryButtonStyle}"
                                                Command="{Binding AutoMapGroupsCommand}"/>
                                        <Button Content="Clear All" Style="{StaticResource SecondaryButtonStyle}"/>
                                    </StackPanel>
                                </Grid>

                                <!-- Filters -->
                                <Grid Grid.Row="1" Margin="0,16,0,0">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*"/>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="Auto"/>
                                    </Grid.ColumnDefinitions>

                                    <TextBox Grid.Column="0" Text="{Binding GroupSearchText, UpdateSourceTrigger=PropertyChanged}"
                                             Margin="0,0,8,0">
                                </TextBox>

                                    <CheckBox Grid.Column="1" Content="Conflicts Only" 
                                              IsChecked="{Binding ShowOnlyConflicts}"
                                              VerticalAlignment="Center" Margin="0,0,8,0"/>

                                    <CheckBox Grid.Column="2" Content="Unmapped Only" 
                                              IsChecked="{Binding ShowOnlyUnmapped}"
                                              VerticalAlignment="Center"/>
                                </Grid>
                            </Grid>
                        </Border>

                        <!-- Group Mapping Grid -->
                        <Border Grid.Row="1" Style="{StaticResource CardStyle}">
                            <DataGrid ItemsSource="{Binding GroupMappingsView}"
                                      SelectedItem="{Binding SelectedGroupMapping}"
                                      AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      CanUserDeleteRows="False"
                                      GridLinesVisibility="Horizontal"
                                      HeadersVisibility="Column"
                                      BorderThickness="0">
                                <DataGrid.Columns>
                                    <DataGridTemplateColumn Header="Status" Width="60">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Ellipse Style="{StaticResource StatusIndicatorStyle}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                    <DataGridTextColumn Header="Source Group" Binding="{Binding SourceIdentity}" Width="*"/>
                                    <DataGridTextColumn Header="Type" Binding="{Binding SourceType}" Width="120"/>
                                    <DataGridTextColumn Header="Target Group" Binding="{Binding TargetIdentity}" Width="*"/>
                                    <DataGridTextColumn Header="Status" Binding="{Binding MappingStatus}" Width="100"/>
                                    <DataGridTemplateColumn Header="Actions" Width="120">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <StackPanel Orientation="Horizontal">
                                                    <Button Content="Edit" Style="{StaticResource SecondaryButtonStyle}"
                                                            FontSize="10" Padding="8,4" Margin="2"/>
                                                    <Button Content="Clear" Style="{StaticResource SecondaryButtonStyle}"
                                                            FontSize="10" Padding="8,4" Margin="2"
                                                            Command="{Binding DataContext.ClearGroupMappingCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                            CommandParameter="{Binding}"/>
                                                </StackPanel>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>
                    </Grid>

                    <!-- Splitter -->
                    <GridSplitter Grid.Column="1" Width="8" Background="Transparent" 
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

                    <!-- Right Panel: Naming Conventions -->
                    <Grid Grid.Column="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>

                        <!-- Naming Conventions Header -->
                        <Border Grid.Row="0" Style="{StaticResource CardStyle}">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>

                                <TextBlock Grid.Column="0" Text="Naming Conventions" Style="{StaticResource SubHeaderStyle}"/>
                                <Button Grid.Column="1" Content="Apply All" Style="{StaticResource PrimaryButtonStyle}"
                                        Command="{Binding ApplyNamingConventionsCommand}"/>
                            </Grid>
                        </Border>

                        <!-- Conventions List -->
                        <Border Grid.Row="1" Style="{StaticResource CardStyle}">
                            <DataGrid ItemsSource="{Binding NamingConventionRules}"
                                      AutoGenerateColumns="False"
                                      CanUserAddRows="False"
                                      CanUserDeleteRows="False">
                                <DataGrid.Columns>
                                    <DataGridCheckBoxColumn Header="Enabled" Binding="{Binding IsEnabled}" Width="Auto"/>
                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="*"/>
                                    <DataGridTextColumn Header="Strategy" Binding="{Binding Strategy}" Width="80"/>
                                    <DataGridTemplateColumn Width="Auto">
                                        <DataGridTemplateColumn.CellTemplate>
                                            <DataTemplate>
                                                <Button Content="Delete" Style="{StaticResource SecondaryButtonStyle}"
                                                        FontSize="10" Padding="6,3"
                                                        Command="{Binding DataContext.DeleteNamingConventionCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                        CommandParameter="{Binding}"/>
                                            </DataTemplate>
                                        </DataGridTemplateColumn.CellTemplate>
                                    </DataGridTemplateColumn>
                                </DataGrid.Columns>
                            </DataGrid>
                        </Border>

                        <!-- Add Convention -->
                        <Border Grid.Row="2" Style="{StaticResource CardStyle}">
                            <Expander Header="Add Naming Convention" IsExpanded="False">
                                <Grid Margin="8">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>

                                    <TextBox Grid.Row="0" Text="{Binding NewConventionName}" 
                                             Margin="0,4">
                                    </TextBox>
                                    <TextBox Grid.Row="1" Text="{Binding ConventionPattern}" 
                                             Margin="0,4">
                                    </TextBox>
                                    <ComboBox Grid.Row="2" ItemsSource="{Binding NamingConventionTypes}"
                                              SelectedItem="{Binding SelectedConventionType}" Margin="0,4"/>
                                    <Button Grid.Row="3" Content="Add Convention" Style="{StaticResource PrimaryButtonStyle}"
                                            Command="{Binding AddNamingConventionCommand}" Margin="0,8,0,0"/>
                                </Grid>
                            </Expander>
                        </Border>
                    </Grid>
                </Grid>
            </TabItem>

            <!-- Resource Mapping Tab -->
            <TabItem Header="Resource Mapping">
                <Grid Margin="16">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <!-- Resource Mapping Controls -->
                    <Border Grid.Row="0" Style="{StaticResource CardStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <TextBox Grid.Column="0" Text="{Binding ResourceSearchText, UpdateSourceTrigger=PropertyChanged}"
                                     Margin="0,0,8,0">
                            </TextBox>

                            <ComboBox Grid.Column="1" ItemsSource="{Binding ResourceMappingTypes}"
                                      SelectedItem="{Binding SelectedResourceTypeFilter}"
                                      Width="120" Margin="0,0,8,0"/>

                            <Button Grid.Column="2" Content="Auto Map Resources" Style="{StaticResource PrimaryButtonStyle}"/>
                        </Grid>
                    </Border>

                    <!-- Resource Mapping Grid -->
                    <Border Grid.Row="1" Style="{StaticResource CardStyle}">
                        <DataGrid ItemsSource="{Binding ResourceMappingsView}"
                                  SelectedItem="{Binding SelectedResourceMapping}"
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="False"
                                  CanUserDeleteRows="False"
                                  GridLinesVisibility="Horizontal"
                                  HeadersVisibility="Column"
                                  BorderThickness="0">
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="Status" Width="60">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Ellipse Style="{StaticResource StatusIndicatorStyle}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Source Resource" Binding="{Binding SourceResource}" Width="*"/>
                                <DataGridTextColumn Header="Type" Binding="{Binding SourceType}" Width="120"/>
                                <DataGridTextColumn Header="Target Resource" Binding="{Binding TargetResource}" Width="*"/>
                                <DataGridTextColumn Header="Status" Binding="{Binding MappingStatus}" Width="100"/>
                                <DataGridTemplateColumn Header="Actions" Width="100">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="Edit" Style="{StaticResource SecondaryButtonStyle}"
                                                    FontSize="10" Padding="8,4"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>
                </Grid>
            </TabItem>

            <!-- Conflict Resolution Tab -->
            <TabItem Header="Conflict Resolution">
                <Grid Margin="16">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <!-- Conflict Resolution Controls -->
                    <Border Grid.Row="0" Style="{StaticResource CardStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="Auto"/>
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0">
                                <TextBlock Text="Mapping Conflicts" Style="{StaticResource SubHeaderStyle}"/>
                                <TextBlock Text="{Binding MappingConflicts.Count, StringFormat='{}{0} conflicts found'}" 
                                           Foreground="{StaticResource TextSecondaryBrush}"/>
                            </StackPanel>

                            <Button Grid.Column="1" Content="Resolve All Conflicts" Style="{StaticResource PrimaryButtonStyle}"
                                    Command="{Binding ResolveAllConflictsCommand}"/>
                        </Grid>
                    </Border>

                    <!-- Conflicts Grid -->
                    <Border Grid.Row="1" Style="{StaticResource CardStyle}">
                        <DataGrid ItemsSource="{Binding ConflictsView}"
                                  SelectedItem="{Binding SelectedConflict}"
                                  AutoGenerateColumns="False"
                                  CanUserAddRows="False"
                                  CanUserDeleteRows="False"
                                  GridLinesVisibility="Horizontal"
                                  HeadersVisibility="Column"
                                  BorderThickness="0">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Type" Binding="{Binding MappingType}" Width="80"/>
                                <DataGridTextColumn Header="Conflict Type" Binding="{Binding ConflictType}" Width="150"/>
                                <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="*"/>
                                <DataGridTextColumn Header="Suggested Resolution" Binding="{Binding SuggestedResolution}" Width="200"/>
                                <DataGridTemplateColumn Header="Actions" Width="100">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <Button Content="Resolve" Style="{StaticResource PrimaryButtonStyle}"
                                                    FontSize="10" Padding="8,4"
                                                    Command="{Binding DataContext.ResolveConflictCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                    CommandParameter="{Binding}"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Border>

                    <!-- Resolution Strategy -->
                    <Border Grid.Row="2" Style="{StaticResource CardStyle}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Column="0" Text="Resolution Strategy:" VerticalAlignment="Center" Margin="0,0,8,0"/>

                            <ComboBox Grid.Column="1" ItemsSource="{Binding ConflictResolutionStrategies}"
                                      SelectedItem="{Binding SelectedResolutionStrategy}"
                                      Margin="0,0,8,0"/>

                            <TextBox Grid.Column="2" Text="{Binding CustomResolutionValue}"
                                     IsEnabled="{Binding SelectedResolutionStrategy, Converter={StaticResource EqualityConverter}, ConverterParameter=UseCustomValue}">
                            </TextBox>
                        </Grid>
                    </Border>
                </Grid>
            </TabItem>
        </TabControl>

        <!-- Loading Overlay -->
        <controls:LoadingOverlay Grid.RowSpan="3" 
                                 Visibility="{Binding IsLoading, Converter={StaticResource BooleanToVisibilityConverter}}"/>
    </Grid>
</UserControl>