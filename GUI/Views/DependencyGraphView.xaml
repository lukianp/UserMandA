<UserControl x:Class="MandADiscoverySuite.Views.DependencyGraphView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MandADiscoverySuite.Views"
             xmlns:vm="clr-namespace:MandADiscoverySuite.ViewModels"
             xmlns:models="clr-namespace:MandADiscoverySuite.Models"
             mc:Ignorable="d" 
             d:DesignHeight="600" d:DesignWidth="900"
             d:DataContext="{d:DesignInstance Type=vm:DependencyGraphViewModel}">
    
    <UserControl.Resources>
        <!-- Node Template -->
        <DataTemplate x:Key="NodeTemplate" DataType="{x:Type models:DependencyNode}">
            <Grid Width="80" Height="60">
                <Border Background="{Binding Color, TargetNullValue=#4CAF50}" 
                        BorderBrush="#333333" 
                        BorderThickness="2" 
                        CornerRadius="5">
                    <Border.Effect>
                        <DropShadowEffect ShadowDepth="2" Color="Gray" Opacity="0.5"/>
                    </Border.Effect>
                </Border>
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" 
                               Text="{Binding Icon, TargetNullValue=📦}" 
                               HorizontalAlignment="Center" 
                               FontSize="16"/>
                    <TextBlock Grid.Row="1" 
                               Text="{Binding Name}" 
                               HorizontalAlignment="Center" 
                               VerticalAlignment="Center"
                               TextWrapping="Wrap"
                               FontSize="10"/>
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- Edge Template -->
        <DataTemplate x:Key="EdgeTemplate" DataType="{x:Type models:DependencyEdge}">
            <Line Stroke="{Binding Color, TargetNullValue=#666666}" 
                  StrokeThickness="{Binding Thickness, TargetNullValue=2}"
                  StrokeDashArray="{Binding IsDirectional, Converter={StaticResource BoolToStrokeDashArrayConverter}}"/>
        </DataTemplate>

        <!-- Layout Algorithm Item Template -->
        <DataTemplate x:Key="LayoutAlgorithmTemplate">
            <TextBlock Text="{Binding}" Padding="5,2"/>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <ToolBar Grid.Row="0" Height="40">
            <Button Command="{Binding NewGraphCommand}" ToolTip="New Graph" Style="{StaticResource RoundedButtonStyle}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="➕" Margin="0,0,5,0"/>
                    <TextBlock Text="New"/>
                </StackPanel>
            </Button>
            <Button Command="{Binding SaveGraphCommand}" ToolTip="Save Graph" Style="{StaticResource RoundedButtonStyle}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="💾" Margin="0,0,5,0"/>
                    <TextBlock Text="Save"/>
                </StackPanel>
            </Button>
            <Separator/>
            
            <ComboBox ItemsSource="{Binding AvailableGraphs}" 
                      SelectedItem="{Binding CurrentGraph}"
                      DisplayMemberPath="Name"
                      Width="150"
                      ToolTip="Select Graph"/>
            
            <Separator/>
            
            <Button Command="{Binding BuildFromDiscoveryDataCommand}" ToolTip="Build from Discovery Data" Style="{StaticResource RoundedButtonStyle}">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="🔄" Margin="0,0,5,0"/>
                    <TextBlock Text="Build from Data"/>
                </StackPanel>
            </Button>
            
            <Separator/>
            
            <Label Content="Layout:"/>
            <ComboBox ItemsSource="{Binding LayoutAlgorithms}" 
                      SelectedItem="{Binding SelectedLayoutAlgorithm}"
                      Width="120"/>
            <Button Command="{Binding ApplyLayoutCommand}"
                    CommandParameter="{Binding SelectedLayoutAlgorithm}"
                    ToolTip="Apply Layout"
                    Style="{StaticResource RoundedButtonStyle}">
                <TextBlock Text="Apply"/>
            </Button>
            
            <Separator/>
            
            <Button Command="{Binding ZoomInCommand}" ToolTip="Zoom In" Style="{StaticResource RoundedButtonStyle}">
                <TextBlock Text="🔍+"/>
            </Button>
            <Button Command="{Binding ZoomOutCommand}" ToolTip="Zoom Out" Style="{StaticResource RoundedButtonStyle}">
                <TextBlock Text="🔍-"/>
            </Button>
            <Button Command="{Binding ZoomToFitCommand}" ToolTip="Zoom to Fit" Style="{StaticResource RoundedButtonStyle}">
                <TextBlock Text="⊡"/>
            </Button>
            <TextBlock Text="{Binding ZoomLevel, StringFormat='Zoom: {0:P0}'}" 
                       VerticalAlignment="Center" 
                       Margin="5,0"/>
            
            <Separator/>
            
            <ToggleButton IsChecked="{Binding ShowFilterPanel}" ToolTip="Toggle Filter Panel">
                <TextBlock Text="🔽 Filter"/>
            </ToggleButton>
            <ToggleButton IsChecked="{Binding ShowGraphStatistics}" ToolTip="Toggle Statistics">
                <TextBlock Text="📊 Stats"/>
            </ToggleButton>
        </ToolBar>

        <!-- Main Content Area -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="200" MinWidth="150"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>

            <!-- Left Panel - Graph List & Filter -->
            <Grid Grid.Column="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!-- Search Box -->
                <Grid Grid.Row="0" Margin="5">
                    <TextBox Text="{Binding SearchText, UpdateSourceTrigger=PropertyChanged}"
                             Tag="Search nodes..."
                             Height="25"/>
                </Grid>

                <!-- Graph/Node List -->
                <GroupBox Grid.Row="1" Header="Graphs" Margin="5">
                    <ListBox ItemsSource="{Binding AvailableGraphs}"
                             SelectedItem="{Binding CurrentGraph}"
                             DisplayMemberPath="Name"
                             ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                </GroupBox>

                <!-- Filter Panel -->
                <Expander Grid.Row="2" 
                          Header="Filters" 
                          IsExpanded="{Binding ShowFilterPanel}"
                          Margin="5">
                    <StackPanel Margin="5">
                        <Label Content="Node Types:"/>
                        <ListBox ItemsSource="{Binding NodeTypes}"
                                 SelectionMode="Multiple"
                                 Height="80"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                        
                        <Label Content="Edge Types:" Margin="0,5,0,0"/>
                        <ListBox ItemsSource="{Binding EdgeTypes}"
                                 SelectionMode="Multiple"
                                 Height="60"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"/>
                        
                        <Label Content="Min Weight:" Margin="0,5,0,0"/>
                        <Slider Value="{Binding Filter.MinWeight}"
                                Minimum="0" Maximum="10"
                                TickFrequency="1"
                                IsSnapToTickEnabled="True"/>
                        
                        <StackPanel Orientation="Horizontal" Margin="0,10,0,0">
                            <Button Command="{Binding ApplyFilterCommand}"
                                    Content="Apply"
                                    Width="60"
                                    Margin="0,0,5,0"
                                    Style="{StaticResource RoundedButtonStyle}"/>
                            <Button Command="{Binding ClearFilterCommand}"
                                    Content="Clear"
                                    Width="60"
                                    Style="{StaticResource RoundedButtonStyle}"/>
                        </StackPanel>
                    </StackPanel>
                </Expander>
            </Grid>

            <!-- Splitter -->
            <GridSplitter Grid.Column="1" 
                          HorizontalAlignment="Stretch" 
                          Background="LightGray"/>

            <!-- Graph Canvas -->
            <Border Grid.Column="2" 
                    BorderBrush="DarkGray" 
                    BorderThickness="1" 
                    Margin="5">
                <Grid>
                    <ScrollViewer Name="GraphScrollViewer"
                                  HorizontalScrollBarVisibility="Auto"
                                  VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.LayoutTransform>
                                <TransformGroup>
                                    <ScaleTransform ScaleX="{Binding ZoomLevel}" 
                                                    ScaleY="{Binding ZoomLevel}"/>
                                    <TranslateTransform X="{Binding PanOffset.X}" 
                                                        Y="{Binding PanOffset.Y}"/>
                                </TransformGroup>
                            </Grid.LayoutTransform>
                            
                            <Canvas Name="GraphCanvas" 
                                    Width="2000" 
                                    Height="2000" 
                                    Background="WhiteSmoke"
                                    ClipToBounds="True">
                                
                                <!-- Edges Layer -->
                                <ItemsControl ItemsSource="{Binding Edges}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Line Stroke="{Binding Color, TargetNullValue=#666666}"
                                                  StrokeThickness="{Binding Thickness, TargetNullValue=2}"
                                                  X1="100" Y1="100"
                                                  X2="200" Y2="200"/>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                                
                                <!-- Nodes Layer -->
                                <ItemsControl ItemsSource="{Binding Nodes}">
                                    <ItemsControl.ItemsPanel>
                                        <ItemsPanelTemplate>
                                            <Canvas/>
                                        </ItemsPanelTemplate>
                                    </ItemsControl.ItemsPanel>
                                    <ItemsControl.ItemContainerStyle>
                                        <Style TargetType="ContentPresenter">
                                            <Setter Property="Canvas.Left" Value="{Binding Position.X}"/>
                                            <Setter Property="Canvas.Top" Value="{Binding Position.Y}"/>
                                        </Style>
                                    </ItemsControl.ItemContainerStyle>
                                    <ItemsControl.ItemTemplate>
                                        <DataTemplate>
                                            <Border Width="80" Height="60"
                                                    Background="{Binding Color, TargetNullValue=#4CAF50}"
                                                    BorderBrush="{Binding Path=IsSelected, Converter={StaticResource BoolToBrushConverter}, ConverterParameter=Orange;Black}"
                                                    BorderThickness="2"
                                                    CornerRadius="5"
                                                    Cursor="Hand">
                                                <Border.InputBindings>
                                                    <MouseBinding Gesture="LeftClick" 
                                                                  Command="{Binding DataContext.SelectNodeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                                  CommandParameter="{Binding}"/>
                                                </Border.InputBindings>
                                                <Border.Effect>
                                                    <DropShadowEffect ShadowDepth="2" Color="Gray" Opacity="0.5"/>
                                                </Border.Effect>
                                                <Grid Margin="5">
                                                    <Grid.RowDefinitions>
                                                        <RowDefinition Height="Auto"/>
                                                        <RowDefinition Height="*"/>
                                                    </Grid.RowDefinitions>
                                                    <TextBlock Grid.Row="0" 
                                                               Text="{Binding Icon, TargetNullValue=📦}" 
                                                               HorizontalAlignment="Center" 
                                                               FontSize="16"/>
                                                    <TextBlock Grid.Row="1" 
                                                               Text="{Binding Name}" 
                                                               HorizontalAlignment="Center" 
                                                               VerticalAlignment="Center"
                                                               TextWrapping="Wrap"
                                                               FontSize="10"
                                                               Foreground="White"/>
                                                </Grid>
                                            </Border>
                                        </DataTemplate>
                                    </ItemsControl.ItemTemplate>
                                </ItemsControl>
                            </Canvas>
                        </Grid>
                    </ScrollViewer>
                    
                    <!-- Loading Overlay -->
                    <Border Background="#80000000" 
                            Visibility="{Binding IsLayoutInProgress, Converter={StaticResource BoolToVisibilityConverter}}">
                        <StackPanel HorizontalAlignment="Center" 
                                    VerticalAlignment="Center">
                            <ProgressBar IsIndeterminate="True" 
                                         Width="200" 
                                         Height="20"/>
                            <TextBlock Text="Calculating Layout..." 
                                       Foreground="White" 
                                       HorizontalAlignment="Center" 
                                       Margin="0,10,0,0"/>
                        </StackPanel>
                    </Border>
                </Grid>
            </Border>

            <!-- Right Splitter -->
            <GridSplitter Grid.Column="3" 
                          HorizontalAlignment="Stretch" 
                          Background="LightGray"
                          Visibility="{Binding ShowNodeProperties, Converter={StaticResource BoolToVisibilityConverter}}"/>

            <!-- Right Panel - Node Properties & Statistics -->
            <Grid Grid.Column="4" Width="250">
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!-- Node Properties -->
                <GroupBox Grid.Row="0" 
                          Header="Node Properties" 
                          Margin="5"
                          Visibility="{Binding NodePropertyPanelVisibility}">
                    <Grid Margin="5" DataContext="{Binding SelectedNode}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="70"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Label Grid.Row="0" Grid.Column="0" Content="Name:"/>
                        <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Name}" IsReadOnly="True"/>

                        <Label Grid.Row="1" Grid.Column="0" Content="Type:"/>
                        <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Type}" IsReadOnly="True"/>

                        <Label Grid.Row="2" Grid.Column="0" Content="Status:"/>
                        <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Status}" IsReadOnly="True"/>

                        <Label Grid.Row="3" Grid.Column="0" Content="Description:"/>
                        <TextBox Grid.Row="3" Grid.Column="1" 
                                 Text="{Binding Description}" 
                                 TextWrapping="Wrap" 
                                 Height="60" 
                                 VerticalScrollBarVisibility="Auto"
                                 IsReadOnly="True"/>

                        <Label Grid.Row="4" Grid.Column="0" Content="Dependencies:"/>
                        <TextBox Grid.Row="4" Grid.Column="1" Text="{Binding DependencyCount}" IsReadOnly="True"/>

                        <Label Grid.Row="5" Grid.Column="0" Content="Position:"/>
                        <TextBox Grid.Row="5" Grid.Column="1" 
                                 Text="{Binding Position, StringFormat='X: {0:F0}, Y: {0:F0}'}" 
                                 IsReadOnly="True"/>

                        <StackPanel Grid.Row="6" Grid.ColumnSpan="2" Orientation="Horizontal" Margin="0,10,0,0">
                            <Button Command="{Binding DataContext.DeleteNodeCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                    Content="Delete Node"
                                    Width="100"
                                    Margin="0,0,5,0"
                                    Style="{StaticResource RoundedButtonStyle}"/>
                        </StackPanel>
                    </Grid>
                </GroupBox>

                <!-- Graph Statistics -->
                <GroupBox Grid.Row="1" 
                          Header="Graph Statistics" 
                          Margin="5"
                          Visibility="{Binding StatisticsPanelVisibility}">
                    <DataGrid ItemsSource="{Binding GraphStatistics}"
                              AutoGenerateColumns="False"
                              CanUserAddRows="False"
                              CanUserDeleteRows="False"
                              HeadersVisibility="None"
                              GridLinesVisibility="None">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Metric" 
                                                Binding="{Binding Name}" 
                                                Width="120"/>
                            <DataGridTextColumn Header="Value" 
                                                Binding="{Binding Value}" 
                                                Width="*"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </GroupBox>
            </Grid>
        </Grid>

        <!-- Status Bar -->
        <StatusBar Grid.Row="2">
            <StatusBarItem>
                <TextBlock Text="{Binding StatusMessage}"/>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="{Binding Nodes.Count, StringFormat='Nodes: {0}'}"/>
            </StatusBarItem>
            <StatusBarItem>
                <TextBlock Text="{Binding Edges.Count, StringFormat='Edges: {0}'}"/>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <ProgressBar Width="100" 
                             Height="16" 
                             IsIndeterminate="{Binding IsLoading}"
                             Visibility="{Binding IsLoading, Converter={StaticResource BoolToVisibilityConverter}}"/>
            </StatusBarItem>
        </StatusBar>
    </Grid>
</UserControl>