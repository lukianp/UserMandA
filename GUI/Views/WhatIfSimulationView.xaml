<UserControl x:Class="MandADiscoverySuite.Views.WhatIfSimulationView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:MandADiscoverySuite.Views"
             xmlns:vm="clr-namespace:MandADiscoverySuite.ViewModels"
             xmlns:models="clr-namespace:MandADiscoverySuite.Models"
             mc:Ignorable="d" 
             d:DesignHeight="800" d:DesignWidth="1200"
             d:DataContext="{d:DesignInstance Type=vm:WhatIfSimulationViewModel}"
             Background="{DynamicResource BackgroundBrush}">
    
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter"/>

        <Style x:Key="CenterPanelStyle" TargetType="Border">
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=Window}, Path=ActualWidth, Converter={StaticResource LessThanConverter}, ConverterParameter=1200}" Value="True">
                    <Setter Property="Visibility" Value="Collapsed"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="SectionHeaderStyle" TargetType="TextBlock">
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="SemiBold"/>
            <Setter Property="Foreground" Value="{DynamicResource PrimaryTextBrush}"/>
            <Setter Property="Margin" Value="0,15,0,5"/>
        </Style>

        <Style x:Key="TabButtonStyle" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1,1,1,0"/>
            <Setter Property="Padding" Value="15,8"/>
            <Setter Property="Margin" Value="0,0,2,0"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Style.Triggers>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
                    <Setter Property="Foreground" Value="White"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="IconButtonStyle" TargetType="Button">
            <Setter Property="Width" Value="32"/>
            <Setter Property="Height" Value="32"/>
            <Setter Property="Margin" Value="2"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Cursor" Value="Hand"/>
        </Style>

        <Style x:Key="DataGridStyle" TargetType="DataGrid">
            <Setter Property="Background" Value="{DynamicResource BackgroundBrush}"/>
            <Setter Property="BorderBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="GridLinesVisibility" Value="Horizontal"/>
            <Setter Property="HorizontalGridLinesBrush" Value="{DynamicResource BorderBrush}"/>
            <Setter Property="AutoGenerateColumns" Value="False"/>
            <Setter Property="CanUserAddRows" Value="False"/>
            <Setter Property="CanUserDeleteRows" Value="False"/>
            <Setter Property="SelectionMode" Value="Single"/>
            <Setter Property="RowHeaderWidth" Value="0"/>
        </Style>

        <DataTemplate x:Key="SimulationTemplate">
            <Border Background="{DynamicResource PanelBackgroundBrush}" 
                   BorderBrush="{DynamicResource BorderBrush}" 
                   BorderThickness="1" 
                   Margin="2"
                   Padding="10">
                <StackPanel>
                    <TextBlock Text="{Binding Name}" FontWeight="Bold" FontSize="12"/>
                    <TextBlock Text="{Binding Description}" FontSize="10" Foreground="{DynamicResource SecondaryTextBrush}" TextWrapping="Wrap"/>
                    <TextBlock FontSize="10" Foreground="{DynamicResource SecondaryTextBrush}">
                        <Run Text="Status: "/>
                        <Run Text="{Binding Status}"/>
                        <Run Text=" • "/>
                        <Run Text="{Binding LastModified, StringFormat='Modified: {0:MM/dd/yyyy}'}"/>
                    </TextBlock>
                </StackPanel>
            </Border>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Toolbar -->
        <Border Grid.Row="0" Background="{DynamicResource ToolbarBackgroundBrush}" 
                BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1" Padding="10,5">
            <StackPanel Orientation="Horizontal">
                <!-- Simulation Management -->
                <Button Content="📄" ToolTip="New Simulation" Command="{Binding CreateSimulationCommand}" Style="{StaticResource IconButtonStyle}"/>
                <Button Content="💾" ToolTip="Save Simulation" Command="{Binding SaveSimulationCommand}" Style="{StaticResource IconButtonStyle}"/>
                <Button Content="📋" ToolTip="Clone Simulation" Command="{Binding CloneSimulationCommand}" CommandParameter="{Binding SelectedSimulation}" Style="{StaticResource IconButtonStyle}"/>
                <Button Content="🗑️" ToolTip="Delete Simulation" Command="{Binding DeleteSimulationCommand}" CommandParameter="{Binding SelectedSimulation}" Style="{StaticResource IconButtonStyle}"/>
                
                <Separator Margin="10,0"/>
                
                <!-- Execution -->
                <Button Content="▶️" ToolTip="Run Simulation" Command="{Binding RunSimulationCommand}" 
                       Style="{StaticResource IconButtonStyle}" IsEnabled="{Binding CanRunSimulation}"/>
                <Button Content="⏹️" ToolTip="Cancel Simulation" Command="{Binding CancelSimulationCommand}" 
                       Style="{StaticResource IconButtonStyle}" IsEnabled="{Binding CanCancelSimulation}"/>
                
                <Separator Margin="10,0"/>
                
                <!-- Analysis -->
                <Button Content="📊" ToolTip="Compare Scenarios" Command="{Binding CompareScenariusCommand}" Style="{StaticResource IconButtonStyle}"/>
                <Button Content="⚠️" ToolTip="Analyze Risks" Command="{Binding AnalyzeRisksCommand}" Style="{StaticResource IconButtonStyle}"/>
                <Button Content="💡" ToolTip="Generate Recommendations" Command="{Binding GenerateRecommendationsCommand}" Style="{StaticResource IconButtonStyle}"/>
                
                <Separator Margin="10,0"/>
                
                <!-- Import/Export -->
                <Button Content="📥" ToolTip="Import Simulation" Command="{Binding ImportSimulationCommand}" Style="{StaticResource IconButtonStyle}"/>
                <Button Content="📤" ToolTip="Export Simulation" Command="{Binding ExportSimulationCommand}" Style="{StaticResource IconButtonStyle}"/>
                
                <!-- Progress Indicator -->
                <StackPanel Orientation="Horizontal" Margin="20,0" Visibility="{Binding IsRunning, Converter={StaticResource BoolToVisibilityConverter}}">
                    <ProgressBar Width="100" Height="20" Value="{Binding ProgressPercentage}" Maximum="100" Margin="5,0"/>
                    <TextBlock Text="{Binding CurrentOperation}" VerticalAlignment="Center" Margin="10,0"/>
                </StackPanel>
                
                <Button Content="🔄" ToolTip="Refresh" Command="{Binding RefreshCommand}" Style="{StaticResource IconButtonStyle}" HorizontalAlignment="Right"/>
            </StackPanel>
        </Border>

        <!-- Main Content -->
        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding SplitterPosition, Mode=TwoWay}" MinWidth="200" MaxWidth="600"/>
                <ColumnDefinition Width="5"/>
                <ColumnDefinition Width="Auto" MinWidth="400" MaxWidth="1000"/>
            </Grid.ColumnDefinitions>

            <!-- Left Panel - Simulation List -->
            <Border Grid.Column="0" Background="{DynamicResource PanelBackgroundBrush}" 
                    BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,1,0">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Current Simulation Info -->
                    <GroupBox Grid.Row="0" Header="Current Simulation" Margin="10">
                        <StackPanel Margin="5">
                            <TextBox Text="{Binding SimulationName, UpdateSourceTrigger=PropertyChanged}" 
                                    FontWeight="SemiBold" Margin="0,2"/>
                            <TextBox Text="{Binding SimulationDescription, UpdateSourceTrigger=PropertyChanged}" 
                                    AcceptsReturn="True" MinHeight="60" TextWrapping="Wrap" Margin="0,2"/>
                            <TextBlock Text="{Binding CurrentSimulation.Status, StringFormat='Status: {0}'}" 
                                      FontSize="11" Foreground="{DynamicResource SecondaryTextBrush}" Margin="0,5,0,0"/>
                        </StackPanel>
                    </GroupBox>
                    
                    <!-- Simulation List -->
                    <GroupBox Grid.Row="1" Header="All Simulations" Margin="10,0,10,10">
                        <ScrollViewer VerticalScrollBarVisibility="Auto">
                            <ListBox ItemsSource="{Binding Simulations}" 
                                    SelectedItem="{Binding SelectedSimulation}"
                                    ItemTemplate="{StaticResource SimulationTemplate}"
                                    Background="Transparent" 
                                    BorderThickness="0"/>
                        </ScrollViewer>
                    </GroupBox>
                    
                    <!-- Quick Actions -->
                    <StackPanel Grid.Row="2" Margin="10">
                        <Button Content="Create Baseline Scenario" Command="{Binding CreateBaselineScenarioCommand}" 
                               Margin="0,2" HorizontalAlignment="Stretch"/>
                    </StackPanel>
                </Grid>
            </Border>

            <GridSplitter Grid.Column="1" Background="{DynamicResource BorderBrush}"/>

            <!-- Center Panel - Main Content -->
            <Border Grid.Column="2" Background="{DynamicResource BackgroundBrush}" Style="{StaticResource CenterPanelStyle}">
                <Grid>
                    <!-- Tab Headers -->
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    
                    <!-- Tab Strip -->
                    <Border Grid.Row="0" Background="{DynamicResource ToolbarBackgroundBrush}" 
                           BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,0,0,1">
                        <StackPanel Orientation="Horizontal" Margin="10,0">
                            <Button Content="Parameters" Style="{StaticResource TabButtonStyle}" 
                                   Click="OnTabClicked" Tag="Parameters"/>
                            <Button Content="Scenarios" Style="{StaticResource TabButtonStyle}" 
                                   Click="OnTabClicked" Tag="Scenarios"/>
                            <Button Content="Results" Style="{StaticResource TabButtonStyle}" 
                                   Click="OnTabClicked" Tag="Results"
                                   IsEnabled="{Binding HasResults}"/>
                            <Button Content="Analysis" Style="{StaticResource TabButtonStyle}" 
                                   Click="OnTabClicked" Tag="Analysis"
                                   IsEnabled="{Binding HasResults}"/>
                        </StackPanel>
                    </Border>
                    
                    <!-- Tab Content -->
                    <ScrollViewer Grid.Row="1" VerticalScrollBarVisibility="Auto" Margin="20">
                        <Grid>
                            <!-- Parameters Tab -->
                            <StackPanel x:Name="ParametersTab" Visibility="Visible">
                                <TextBlock Text="Simulation Parameters" Style="{StaticResource SectionHeaderStyle}"/>
                                
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,15">
                                    <Button Content="Add Parameter" Command="{Binding AddParameterCommand}" Margin="0,0,10,0"/>
                                    <Button Content="Edit" Command="{Binding EditParameterCommand}" CommandParameter="{Binding SelectedParameter}"/>
                                    <Button Content="Remove" Command="{Binding RemoveParameterCommand}" CommandParameter="{Binding SelectedParameter}" Margin="10,0,0,0"/>
                                </StackPanel>
                                
                                <DataGrid ItemsSource="{Binding Parameters}" SelectedItem="{Binding SelectedParameter}" 
                                         Height="300" Style="{StaticResource DataGridStyle}">
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn Header="Enabled" Binding="{Binding IsEnabled}" Width="60"/>
                                        <DataGridTextColumn Header="Parameter" Binding="{Binding DisplayName}" Width="150" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Value" Binding="{Binding Value}" Width="100"/>
                                        <DataGridTextColumn Header="Default" Binding="{Binding DefaultValue}" Width="100" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="80" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Category" Binding="{Binding Category}" Width="100" IsReadOnly="True"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                
                                <TextBlock Text="{Binding Parameters.Count, StringFormat='Total Parameters: {0}'}" 
                                          FontSize="11" Foreground="{DynamicResource SecondaryTextBrush}" Margin="0,5"/>
                            </StackPanel>

                            <!-- Scenarios Tab -->
                            <StackPanel x:Name="ScenariosTab" Visibility="Collapsed">
                                <TextBlock Text="Simulation Scenarios" Style="{StaticResource SectionHeaderStyle}"/>
                                
                                <StackPanel Orientation="Horizontal" Margin="0,5,0,15">
                                    <Button Content="Add Scenario" Command="{Binding AddScenarioCommand}" Margin="0,0,10,0"/>
                                    <Button Content="Edit" Command="{Binding EditScenarioCommand}" CommandParameter="{Binding SelectedScenario}"/>
                                    <Button Content="Remove" Command="{Binding RemoveScenarioCommand}" CommandParameter="{Binding SelectedScenario}" Margin="10,0,0,0"/>
                                </StackPanel>
                                
                                <DataGrid ItemsSource="{Binding Scenarios}" SelectedItem="{Binding SelectedScenario}" 
                                         Height="300" Style="{StaticResource DataGridStyle}">
                                    <DataGrid.Columns>
                                        <DataGridCheckBoxColumn Header="Enabled" Binding="{Binding IsEnabled}" Width="60"/>
                                        <DataGridCheckBoxColumn Header="Baseline" Binding="{Binding IsBaseline}" Width="60"/>
                                        <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="150"/>
                                        <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="100" IsReadOnly="True"/>
                                        <DataGridTextColumn Header="Probability" Binding="{Binding Probability, StringFormat='{}{0:P1}'}" Width="80"/>
                                        <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="200"/>
                                    </DataGrid.Columns>
                                </DataGrid>
                                
                                <TextBlock Text="{Binding Scenarios.Count, StringFormat='Total Scenarios: {0}'}" 
                                          FontSize="11" Foreground="{DynamicResource SecondaryTextBrush}" Margin="0,5"/>
                            </StackPanel>

                            <!-- Results Tab -->
                            <StackPanel x:Name="ResultsTab" Visibility="Collapsed">
                                <TextBlock Text="Simulation Results" Style="{StaticResource SectionHeaderStyle}"/>
                                
                                <Grid Visibility="{Binding HasResults, Converter={StaticResource BoolToVisibilityConverter}}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="*"/>
                                    </Grid.RowDefinitions>
                                    
                                    <!-- Results Summary -->
                                    <GroupBox Grid.Row="0" Header="Summary" Margin="0,0,0,20">
                                        <Grid Margin="10">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                                <ColumnDefinition Width="Auto"/>
                                                <ColumnDefinition Width="*"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="Auto"/>
                                            </Grid.RowDefinitions>
                                            
                                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Generated:" FontWeight="SemiBold" Margin="0,2"/>
                                            <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding CurrentResults.GeneratedDate, StringFormat='{}{0:yyyy-MM-dd HH:mm:ss}'}" Margin="10,2"/>
                                            
                                            <TextBlock Grid.Row="0" Grid.Column="2" Text="Execution Time:" FontWeight="SemiBold" Margin="20,2,0,2"/>
                                            <TextBlock Grid.Row="0" Grid.Column="3" Text="{Binding CurrentResults.ExecutionTime, StringFormat='{}{0:mm\\:ss}'}" Margin="10,2"/>
                                            
                                            <TextBlock Grid.Row="1" Grid.Column="0" Text="Outcomes:" FontWeight="SemiBold" Margin="0,2"/>
                                            <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding CurrentResults.Outcomes.Count}" Margin="10,2"/>
                                            
                                            <TextBlock Grid.Row="1" Grid.Column="2" Text="Scenarios:" FontWeight="SemiBold" Margin="20,2,0,2"/>
                                            <TextBlock Grid.Row="1" Grid.Column="3" Text="{Binding Scenarios.Count}" Margin="10,2"/>
                                        </Grid>
                                    </GroupBox>
                                    
                                    <!-- Outcomes List -->
                                    <TextBlock Grid.Row="1" Text="Outcomes" FontWeight="SemiBold" FontSize="12" Margin="0,0,0,5"/>
                                    <DataGrid Grid.Row="2" ItemsSource="{Binding CurrentResults.Outcomes}" 
                                             Height="250" Style="{StaticResource DataGridStyle}">
                                        <DataGrid.Columns>
                                            <DataGridTextColumn Header="Scenario" Binding="{Binding ScenarioId}" Width="100"/>
                                            <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="150"/>
                                            <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="80"/>
                                            <DataGridTextColumn Header="Confidence" Binding="{Binding Confidence, StringFormat='{}{0:P1}'}" Width="80"/>
                                            <DataGridTextColumn Header="Risk Level" Binding="{Binding RiskLevel}" Width="80"/>
                                            <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="200"/>
                                        </DataGrid.Columns>
                                    </DataGrid>
                                </Grid>
                                
                                <TextBlock Text="No results available. Run a simulation to see results." 
                                          FontStyle="Italic" Foreground="{DynamicResource SecondaryTextBrush}" 
                                          Visibility="{Binding HasResults, Converter={StaticResource BoolToVisibilityConverter}}"
                                          HorizontalAlignment="Center" Margin="0,50"/>
                            </StackPanel>

                            <!-- Analysis Tab -->
                            <StackPanel x:Name="AnalysisTab" Visibility="Collapsed">
                                <TextBlock Text="Analysis Results" Style="{StaticResource SectionHeaderStyle}"/>
                                
                                <TabControl Background="Transparent" BorderThickness="0">
                                    <!-- Comparisons -->
                                    <TabItem Header="Comparisons">
                                        <StackPanel Margin="10">
                                            <DataGrid ItemsSource="{Binding Comparisons}" Height="200" Style="{StaticResource DataGridStyle}">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Metric" Binding="{Binding MetricName}" Width="120"/>
                                                    <DataGridTextColumn Header="Baseline" Binding="{Binding BaselineValue, StringFormat='{}{0:N2}'}" Width="100"/>
                                                    <DataGridTextColumn Header="Comparison" Binding="{Binding ComparisonValue, StringFormat='{}{0:N2}'}" Width="100"/>
                                                    <DataGridTextColumn Header="Change" Binding="{Binding PercentageChange, StringFormat='{}{0:P1}'}" Width="80"/>
                                                    <DataGridTextColumn Header="Result" Binding="{Binding Result}" Width="80"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                            <TextBlock Text="{Binding Comparisons.Count, StringFormat='Total Comparisons: {0}'}" 
                                                      FontSize="11" Foreground="{DynamicResource SecondaryTextBrush}" Margin="0,5"/>
                                        </StackPanel>
                                    </TabItem>
                                    
                                    <!-- Risks -->
                                    <TabItem Header="Risks">
                                        <StackPanel Margin="10">
                                            <DataGrid ItemsSource="{Binding Risks}" Height="200" Style="{StaticResource DataGridStyle}">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Name" Binding="{Binding Name}" Width="120"/>
                                                    <DataGridTextColumn Header="Category" Binding="{Binding Category}" Width="100"/>
                                                    <DataGridTextColumn Header="Level" Binding="{Binding Level}" Width="80"/>
                                                    <DataGridTextColumn Header="Probability" Binding="{Binding Probability, StringFormat='{}{0:P1}'}" Width="80"/>
                                                    <DataGridTextColumn Header="Impact" Binding="{Binding Impact, StringFormat='{}{0:P1}'}" Width="80"/>
                                                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="250"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                            <TextBlock Text="{Binding Risks.Count, StringFormat='Risks Identified: {0}'}" 
                                                      FontSize="11" Foreground="{DynamicResource SecondaryTextBrush}" Margin="0,5"/>
                                        </StackPanel>
                                    </TabItem>
                                    
                                    <!-- Recommendations -->
                                    <TabItem Header="Recommendations">
                                        <StackPanel Margin="10">
                                            <DataGrid ItemsSource="{Binding Recommendations}" Height="200" Style="{StaticResource DataGridStyle}">
                                                <DataGrid.Columns>
                                                    <DataGridTextColumn Header="Title" Binding="{Binding Title}" Width="150"/>
                                                    <DataGridTextColumn Header="Type" Binding="{Binding Type}" Width="100"/>
                                                    <DataGridTextColumn Header="Priority" Binding="{Binding Priority}" Width="80"/>
                                                    <DataGridTextColumn Header="Confidence" Binding="{Binding ConfidenceScore, StringFormat='{}{0:P1}'}" Width="80"/>
                                                    <DataGridTextColumn Header="Description" Binding="{Binding Description}" Width="300"/>
                                                </DataGrid.Columns>
                                            </DataGrid>
                                            <TextBlock Text="{Binding Recommendations.Count, StringFormat='Recommendations: {0}'}" 
                                                      FontSize="11" Foreground="{DynamicResource SecondaryTextBrush}" Margin="0,5"/>
                                        </StackPanel>
                                    </TabItem>
                                </TabControl>
                            </StackPanel>
                        </Grid>
                    </ScrollViewer>
                </Grid>
            </Border>
        </Grid>

        <!-- Status Bar -->
        <Border Grid.Row="2" Background="{DynamicResource StatusBarBackgroundBrush}" 
                BorderBrush="{DynamicResource BorderBrush}" BorderThickness="0,1,0,0" Padding="10,5">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <TextBlock Text="{Binding CurrentSimulation.Name}" FontWeight="SemiBold" Margin="0,0,15,0"/>
                    <TextBlock Text="{Binding Parameters.Count, StringFormat='Parameters: {0}'}" Margin="0,0,15,0"/>
                    <TextBlock Text="{Binding Scenarios.Count, StringFormat='Scenarios: {0}'}" Margin="0,0,15,0"/>
                    <TextBlock Text="{Binding CurrentSimulation.Status, StringFormat='Status: {0}'}"/>
                </StackPanel>

                <StackPanel Grid.Column="1" Orientation="Horizontal">
                    <TextBlock Text="{Binding StatusMessage}" Margin="0,0,15,0"/>
                    <TextBlock Text="{Binding ProgressPercentage, StringFormat='{}{0:F0}%'}" 
                              Visibility="{Binding IsRunning, Converter={StaticResource BoolToVisibilityConverter}}"/>
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</UserControl>